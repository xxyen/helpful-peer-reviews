TAG,REVIEW
1,"The team has added details about UI testing. 
For automated testing, more information could have been provided on which parameters need to be tested in accordance to the changes they plan to implement."
0,Overall explanation of the changes that need to be made are made pretty clear
0,I find it a little confusing. But the diagrams help in understanding how the author is approaching the problem.
0,"Yes, the explanation is elaborative and complete."
1,"The design appears to be simple for the most part. I just feel that explanations are a bit verbose and cloud the understanding of the reader. Also, the user roles seem to be complex and the roles have some complex flow of functionality."
1,The team has provided a great visualization to explain their approach and how the user would interact with the system once the changes are made. It would have been great if the team could have given a brief explanation of the flowchart.
1,"Class diagram is included, there's a few mistakes though. The instructor designing the rubric part is not mentioned anywhere, also some arrows are incorrectly tagged. Eg, student to teams instead of Team A. DB snapshot of relevant tables helps."
1,"Design include manual the test plan in detail but short with the automated or Rspec test cases. They should include where the test cases will be added and what test cases will be added in order to ensure that the functionality is working as expected. Line ""We will be adding unit / integration tests to all the files we modify."" should be removed from the doc as it doesn't add any significance, instead test cases or meticulous test plan with Rspec should be included."
1,"The changes are explained properly. They have given the details of the approach in detail but the UI details are missing. Team could add the UI details more specifically, like why the existing star component is efficient. Though i think it can be replaced by a slider. 
Also, the UI details for the instructor are missing, how these changes will impact the user experience for the instructor. Kindly include it."
1,"The UML diagram is mentioned, is good, but there are a few mistakes like i'd mentioned the last time, they are not fixed on yet. However, it does not include proper arrow notations. It could have been explained in a simpler fashion."
1,"Yes, currently there's no check on the total contribution maintained by teammates. They would tally it up to 100, but a major question is whether the scope would require them to not let the user do this, or just warn. I see this as an open question, and they should've clarified this by now."
0,Yes they kinda have explained it how to do but they now need to localize those boundaries.
0,The team has used a lot of diagrams and UML to explain their working which is really useful and easy for the reader to follow through the whole document.
0,"Yes, the changes and the thoughts have been put out clearly that are to be done by the team."
0,The diagrams put down in the document are completely relevant and provide a very good understanding of the project
1,"The changes proposed look great as per explanation.
A little more information about where the code changes are going to be made would have been helpful to understand the team's plan."
0,The changes proposed look good and if implemented well could result in a working feature. They have proposed 2 solutions and deduced which one is better.
0,all part is completed and meaningful
0,"1. ER Diagrams
2. UML"
0,"1. No
2. No
3. Yes
4. It might because of database hits.
5. No."
1,"The UML diagram is too high-level yes, for instance, the instructor adds a question and sets its type while designing the rubric, which would be 'CAKE' in this case. The UML doesn't include this flow, nor does it provide any detail as to if this can be done. Trivial, but an arrow has been tagged incorrectly, Team A (a specific team) should be connected to the student. Also, UML don't include if-else blocks the way you've put, or do they? DB snapshot helps."
1,"UML and ER diagrams are given but UML should include multiple reviews for team members as the fraction of the cake type question will be shared across multiple reviews. ER is given for the tables but how the exactly the database will be used here is not explained in the doc? How the fraction will be calculated what all tables, fields will be used?"
1,"Doc includes all the functionality required for the project. Project description emphasize on the null pointer exception for round field, there's no detail about it in the doc."
1,"Changes proposed are good but team should add few more details:
1. In the solutions, stars are proposed for the question type but i don't think that's the best way to do it, this will does not give the liberty to have any fraction for the question. A slider from 1 to 100 would be a better option or a number input. 
2. Will there be any info icon to for the reviewer to know that s/he has to consider the fraction based on the other team members, as if by mistake reviewer submit 100% for one team member then it will not be possible to provide any fraction to another team mate. 
3. This change is not only for the reviewer but also for the instructor. None of the details are mentioned about the Instructor flow"
1,UI details are missing. It would be great to include the UI changes for the instructor and reviewers that how the cake question type will look like? I could see details about Stars but i think this will does not give the liberty to have any fraction for the question. A slider from 1 to 100 would be a better option.
1,"The database diagram helps the reader to understand the scenario better. The team has included the Use Case Diagram. However, it does not include proper arrow notations. It could have been explained in a simpler fashion."
1,"The authors have given quite good explanation of proposed code changes. However, it lacks the explanation of how can I distribute the ratings evenly between more than one member. The previous ratings also cannot be accessed."
1,"The design takes care of most of the functionalities. The team has tried to address maximum of the corner cases. However, the test plan could have been explained better. The authors have not explained well, which parts of new code will be tested and in what manner."
0,The uml diagram do follow the principles and it is quite informative.
1,"As the project is not implemented completely and I can not do anything besides view and edit profile. Hence, I can not check for edge cases."
1,"No it does not work. The team was supposed to complete the admin, librarian and student functionalities. However, all the three are still incomplete. The admin credentials provided in the README file does not work. Hence, I was not able to review admin functionalities.
 
In the case of librarian, the following functionalities are missing -
- The librarian sign up form only takes email and password and creates user profile of a student (I don't know why). The librarian has student fields - eg education level, max book allowance etc instead of library to which he is assigned. 
- Librarian authorization by admin is not provided
- He can not add / remove / modify books from library
- He can not see list of checked out books and borrowing history
- He can not view book hold requests and approve special book requests.
 
It is the same thing with student module, he can not do anything besides edit profile, view books and libraries but he can add a new library which is not acceptable."
1,"The project is incomplete, but it consist of basic relationships. It should have the following mapping - the library has many reservations."
1,"The team did not submit their changes throughout the project, the changes were mainly made during the deadline period of the submissions. However, they did commit few changes in round 2."
1,"1 Not able to login as admin
2 No book checkout functionality.
3 Dont know
4 Not able to login as admin"
1,"The admin is still not able to sign in. The team has implemented book search functionality, however they have not updated it on heroku. There is now image for book cover"
1,Max no of days a book can be issued in a library can be changed to negative.
1,"Admin details provided are incorrect. Unable to login.
Book issue/return/Hold request not working.
No libraries can be added.
sign up form is incomplete for students/librarian."
1,"NO many issues are there in final submission, as mentioned above books functionalities are not working."
1,"Admin Facing issue while creating a new book.View all books not working as well. Checkout books view, hold request view,  over due fines not working."
1,Although i see commits for the project during round 1 and round 2. I think it should be more frequent as each functionality can be pushed via a new commit.
1,"The UI was intuitive and all the implemened functionalities were easy to find.
The team did not keep pushing throughout the project period. The whole project was submitted as 1 commit and only a README update after that.
Though there was only 1 commit since the creation of the repo, it looked like the team was recently active in creating Issues for the repo."
1,"There was no preconfigured admin account and no admin features developed. As a result of which, the admin functionalities could not be reviewed.
The code abides by the accepted Ruby and Rails coding practices in terms of file names and general naming within the code."
1,The admin functionalities do not exist yet.
0,find just upload two days ago
1,"the librarian account cannot edit their profile, while student account can edit their account
can not add books, view books, only can view the libraries"
1,can not find the admin account information
1,All the commits on github were done on Oct 2. This generally is not a good practice. I would suggest you to push your changes to github right from the beginning of your project for ease of collaboration and version control.
0,There is not a single module which is completely developed and thus it is not possible to event comment on thorough testing
1,"Interface is easy to use. I like that you have implemented dynamic web pages to resize according to the browser window size. However, there are certain links (View all books & Libraries) which are broken or result in error."
1,Admin login details not provided. Unable to test admin functionalities
1,Interface is easy to work with.
1,Not any of the model or controller was tested except signup.
1,Couldn't find the readme.md file
1,Not found the admin login and details.
1,"It appears that the book is deleted.
Yes admin account can be deleted
Students cannot be deleted as ""something went wrong"" raised."
1,"All functionalities working well and the UI is clean but there are few problems.
According to requirements, admin account cannot be deleted. However, the ""cancel"" button still appears on the admin profile page. Also I believe that admin's password should not be able to be changed. 
Cannot find students with overdue when I log in with librarian/admin."
1,"The code is understandable, MVC structure is maintained. Also no long methods in their code. overall, the code is pretty good"
0,Changes done for round 2.
1,"Long methods used, especially in books_controller"
1,No RSpec file present.
1,"Even though UI design is basic, it is very easy to operate and navigate. 
Appropriate links are added. Users can view appropriate messages and notices after the action. Redirection after some action seems properly handled.
Overall a descent yet complete approach"
1,"Controllers and views are written nicely. Function calls are not that much coupled and depend on other functions. Gem devise is used appropriately.
Though the authors should consider adding logic into models rather than controllers, as stated by MVC architecture."
1,"Should use ""Unless"" statements where you can. For example in app/controllers/book_controller.rb, line 139."
1,"The readme file gives good instruction on how to use the application. The website is user-friendly, but I wish there can be more ""back"" link."
1,"The application works great!
 
Seems like the admin can not update his/her name in the profile."
1,The new design will be short and concise since only added classes. The disgn strategy make sence.
1,lack of UI test description
1,Good test plan. They have considered most use cases and also covered edge cases.
1,The diagrams are present and clearly describe the changes needed to be done
1,"The design is well thought of, on initial examination it appears to be valid."
1,Test plan looks good. The group even created a small section to detail edge cases.
1,"There are no figures that would describe what the user interface should look like once it is done. That being said, its not strictly necessary because it is fairly easy to imagine without it."
1,"The test plan is nicely put, and covers all the scenarios. However, I would advice the team to explicitly mention class and method names in the test description for more clarity."
1,The document has a simple diagram that is good enough to convey the flow of the desired changes.
1,The design is pretty simple and does what is intended. Good job team on not over engineering the solution!
1,The design is neat and serves the problem statement.
1,"The documentation is concise and at the same time covers all the details about the project, the proposed design, and testing. Good job."
1,"Their test plan contain automatic test which is Rspec test, and the test contains the necesarry functionalities in their project. Such as Supplementary Review Questionnaire."
1,They uses use cases with a plot showing pricisely what the design should do.
1,Yes the design strategy is written in a simple and clear way.
1,"The design strategy make sence, the Student-generated questions added to rubric just need to add checkbox, button, and method and file related to the questionaire."
1,The team have identified a lot of scenarios and functionalities for different users. They have also thought about manual UI test along with automated Rspec tests that would need to be written to check proper functioning of the system.
1,The team have drawn a use case diagram which explains the schematics of the approach and it does provide a nice way to visualize the various actors and their primary functionalities in the system. It would have been better if they could have drawn a simple diagram or flowchart to explain their steps rather than provide more textual description.
1,The design seems to be very simple and the approach has been clearly illustrated. The team have explained the steps properly and I don't think there are any issues with their approach.
1,The design appears to be sound and this is very nicely supported by some great writeup by the team. They explain in great detail what they will do to complete the steps and how they will approach the problem.
1,"The authors have very nicely explained the changes both at a low level like which variable would be added, which files would be modified and also included high-level details as to what scenarios will be required for which user, etc. The explanation was lucid and easy to understand."
1,"The team hasn't improved on visual aids. As mentioned in the previous review, uml diagrams, like sequence diagram would have helped well."
1,The design looks great. No issues here
1,Very well explained. Better visual aids could have helped more.
1,"Yes, their design included enough test plan and they will really test the functionalities."
1,"There is only a use case diagram, and no screenshot in the design doc, therefore, this doc is no clear and easy enough to understand. it would be better if they add more details."
1,"Yes, the design appeared to be simple enough."
1,"Their design appeared to be sound and followed appropriate principles and patterns. However, it looks like the solutions and explanations are too simple, they should provide more detailed explanations."
1,"Yes, the authors explained all the changes, but I do not think the explanations are adequate, they should write more details in the design doc."
1,"Yes, they include test plan, but a little shallow.
First, they should improve their UI testing part, which will help reviewers to find whether their functions work.
Second, they can split their Rspec test into view test and controllers. Or they can classify Rspec test with different functions, which will looks more clear."
1,"Yes, their user case diagram help us understand the work flow of their function.
However, if they can use a UML diagram to show us how they will change the related controller and view."
1,"Yes, their design seems simple and clear."
1,"Yes, their design appear to be sound. Although They have not mentioned anything about principles and pattern.
I think they can improve their design after they finished the project."
1,"Yes, they have adequately explained their changes."
1,the URL image looks like simple
1,"yes, they have clearly problem statement, implementation with design strategy but lack of design pattern; test plan is good, but need more description with the UI test."
1,a little hard to understand
1,"I like the way the test plan has been mentioned. It's concise and clear. It wasn't clear on how will they test this line:
There should be no link for the ""Supplementary Review Questionnaire"" for team members or reviewers if the instructor disables this section in Assignment Creation Page."
1,"The design is simple however, it's still undergoing, more stuff would clearly explain the design that the team is trying to implement. For example in below steps:2. add another file for a supplemental questionnaire and save them to the database.3. add a method to get the corresponding supplemental questionnaire and to add questions into the existed questionnaire.They could mention what will the file contains and also what will the method name be and the input and output."
1,"The team has not used the visualization tool in a good sense, they have used only one use case diagram but that is a very high level. More efforts could be put in there to add more visual diagrams."
1,"Yes, the design for creating a supplementary review questionnaire raises seems pretty clear. More stuff could be added in the wiki documentation to make it more elaborate."
1,"The authors did explain the changes that they are proposing but it is a very high-level view, more details could have been added in the various sections."
1,"> The design does include a test plan The basic functionalities testing have been mentioned covering most part. However, there could be more scenarios missing.
> However, the edge cases have not been mentioned enough. They had added ""to be continued"" in the first phase of documentation but haven't done any changes since then."
1,"> They have added a use case diagram which appears to be a little too simple and not explained enough.
> I would have appreciated if more diagrams could have been added supporting the proposed changes and how they would help."
1,"> The design does appear to be simple.
> The changes proposed seems minimal and enough to cover all the requirements.
> However, the exact number of changes and classes to be tweaked has not been mentioned, which doesn't help in verifying if there could be more optimal solutions."
1,"> The design appears to be vague and doesn't talk alot from technical perspective.
> Would have appreciated if more details were added.
> Nothing has been mentioned about the patterns that they are using."
1,"> Although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed.
> The explanation is a bit vague and needs to be improved.
> Also the proposed solution just has 2 lines which does not contain an elaborate explanation for the changes and why they are being done.> Although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed. > The explanation is a bit vague and needs to be improved. > Also the proposed solution just has 2 lines which does not contain an elaborate explanation for the changes and why they are being done."
1,The Use Case diagram wasn't extraordinarily helpful. It basically just summarized what was said in the above section. It may be more helpful to have a diagram that walks through how to do these things from login from each user's perspective.
1,"Under ""Design Strategy"" it may be helpful to specify who is creating the questionnaire when it says ""there should be a checkbox when creating the whole questionnaire"". Make it explicit who it is that is doing the actions."
1,"Would just be nice to have better diagrams in the ""Use Case"" section as mentioned in the above comment."
1,"The class diagram though helpful, is very abstract."
1,The proposed design seems fine. I would like the team to consider if the new class that they plan to introduce can be made more generic instead of SupplementalReviewQuestionnaire so that it can be used in the future for something else as well.
1,"The UML diagram is very helpful. I would like the team to add code level changes as well. While the class name is mentioned, detailed mention of methods/ their behaviour would help."
1,"Though pretty high level, the document is good enough to give an initial idea about the project and how the team plans to proceed with the implementation. Good job team!"
1,The section for Files to be added/removed doesnt list the files that the project plans to edit or create newly. I think it has been missed by mistake by the team. Please update this section before the next round of review. All the best!
1,the overall quality of the explanations is clear and meaningful.
1,"The user case plot added in the wiki, which look concise and simple, but excatly tells the reader about their design strategy."
1,Their design strategy write about the Modifications in the User Interface is showed and the user cases looks decent and simple to understand.Test plan contains the most test cases also include the edge cases.
1,"From the doc, I konw that the team should add a new subclass of Questionnaire called, say, SupplementalReviewQuestionnaire, and do the “View” function for a rubric should display answers submitted for the SupplementalReviewQuestionnaire as well as the ReviewQuestionnaire. I can see the work they have done on the wiki pages which coverd enough about their project."
1,"The design doc is quite comprehensive, since it's include the design strategy, test plan, user cases and etc."
1,The authors have attached a UML diagram which graphically shows how the new system would like from the view of different actors however the diagram doesn't much elaborate upon the functionality and hence could have included the low-level steps mentioned in text form.
1,"The design by the team appears to have been carefully thought out.
The authors will be adding methods and variables to apt class only.
The functionality isn't so complex and wholesome that they might require a Ruby gem.
The new design may increase the response time of the system if the file is not properly fetched from the database but that can be verified only after feature is developed."
1,"The authors have given proper and clear explanations for the problem and their approach to solving it. They have laid out a step by step plan and mentioned what classes they will add, what variable will be defined where. They have mentioned a test plan as well."
1,"The design doc is complete. The team have clearly defined the project purpose, their approach to solving it, both at a high-level and low-level. The testing plan also seems complete for now. I am sure the team will come to know about other edge cases and will add it as the project progresses."
1,"Yes, the design doc completely incorporates all the functionality required."
1,"Visual aids could have been a little better. The textual explanation is great. Converting it to some UML diagram, may be a sequence diagram would have been excellent."
1,"Design looks good. Once a new Supplementary Review Questionnaire is created, I hope you will provide a redirection to the primary questionnaire from where you opted to create new Supplementary one."
1,Adequate explanation has been provided. Navigation was neat
1,"The team has proper design, plan and a preliminary testing strategy. Everything looks good."
1,"They did draw a use case diagram, however, they should draw a data flow diagram to show the data flow of that new function."
1,"It looks like their design is pretty good. they should add a new function about subclasses of Questionnaire and they wrote the detailed steps in part ""How we will do this:"", it is clear and correct."
1,"the explanations of this project have high quality. they wrote a clear introduction, proposed solutions. Also, they give the design strategy and use cases to help us to understand."
1,"The design doc of this project is well done.
They have all the required parts including problem statement, description, detailed proposed solutions diagram, and test plan."
1,"I think their only use case diagram seems a little unnecessary. As the diagram provides not enough information. 
Besides, they may need a UML diagram in their design document. For they change a lot of things in controller."
1,"No, all methods they planned to add seem correct. 
As they plan to add some new functions, the new design may potentially increase the response time of the system.
Beside, I think they should spend more effort on the Design Strategy part. This part seems a little messy."
1,"Yes, their design document have incorporated all of the functionality required."
1,"No important part is missing. But I think their project design part should include more details.
Besides, their UI testing part seems not finishes. They can finish this part latter."
1,"the use case URL is too high-level description, need more details"
1,"the modified files not included;
not show design pattern;
new design may potentially increase the response time of the system (add additional questions)"
1,"can clearly understand that this project's aim is to solve the proble which students can not ask questions unrelated with topics.
they proposed solution is add more ungrade review questions, which is a good idea."
1,"should have a more precise problem statement;
lack dexcription about UI test;
should show the files need to be modified."
1,"almost every part is included, but lack of precise dexcription, all high-level description."
1,It has so much details. Really adequate explanation.
1,"Visual aids - UML diagrams are used properly. However, more diagrams could have been added here.  The current diagram is just one showing high level view."
1,"1. add a variable in the questionnaire class.
2. add another file for a supplemental questionnaire and save them to the database.
3. add a method to get the corresponding supplemental questionnaire and to add questions into the existed questionnaire.
4. we should add another method to show the supplemental questionnaire in the review page.
 
Yes, the above steps mentioned that they are adding methods and variables. The design looks good as of now. - more comments can be made once they implement the changes."
1,The explanations provided are good. The team did a great job of getting the design right with diagrams and explanations. I could follow what is explained.
1,"Yes, all the below functionality has been taken care of in the design document. Supplementary Review Questions to the current Review Questions seems fine."
1,The design document is almost complete but more diagrams could have been added here to better explain the stuff.
1,"> Just one use case diagram has been added which is very high-level.
> Please add more diagrams or mockups of screens etc."
1,"> The ""files which are modified"" section is blank. Please add the name of the files which you might be tweaking.
> New design seems to be fine however more description is needed to understand if it would make the code smelly or not.
> Design seems to be straightforward.
> I don't see any claims for the performance improvement.
> I don't see the design needs more effort however definitely add more details."
1,"> Although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed.
> The explanation is a bit vague and needs to be improved. 
> Also the proposed solution just has 2 lines which does not contain an elaborate explanation for the changes and why they are being done."
1,"> Yes the design seems complete and includes all the requirements.
> However, the description could be more elaborate."
1,"> The design has problem statements, proposed changes mentioned however a lot of things can be improved.
> More explanation should be added.
> Please add more diagrams for easier understanding.
> Please add classes that you might be tweaking."
1,The team has not mentioned anything about the testing or the test plan.
1,"There is no class diagram in the wiki document, however the sequence diagram is quite helpful in understanding."
1,- The team hasn't included a test plan but it must be included given the fact that the plan includes to modify core components such as user controller
1,"1. Bookmark link shows 'The page doesn't work'.
2. Admin can't approve librarian. The link shows 'The page can't be found'.
3. After admin create librarian, the credentials still can't be used to log in.
4. Added a book as admin and signed in again as student. The book is not in 'View all books'
 
Others: GoogleOath2 doesn't work. Students are not supposed to need admin's approval. All librarian related functions can't be tested since there's no available ways for me to log in as one. Can't test checking out regular book either because a book can't be added."
1,"No. For the bookmarks model, it has 'belongs_to' relationships with student and book, but there are no corresponding 'has_many' relationships in book and student. Hold_record, librarian_approval_list and student_checkout_list should 'belongs_to' student and/or book instead of 'has_one'. The links to bookmark a book/approve librarian don't work. I wonder if that has anything to do with it."
1,"Able to login to admin page, with
Library Management System
         


Home(current)
   
Sign out
              eab@v.com


 
Welcome Admin
*
can also login as student or librarian without logging in, by just modifying the url
*while trying to edit admin profile,
This blooming-headland-78968.herokuapp.com page can’t be found
No webpage was found for the web address: https://blooming-headland-78968.herokuapp.com/admins/14
 




HTTP ERROR 404




the error message is shown"
1,A test plan is missing.
1,"while in hold_request, hold_request to books relation is established, the reverse relation, from books model with hold_request model needs to be defined.
The same for bookmarks model too. Bookmarks to books relation is established, the reverse relation, from books model with hold_request model needs to be defined.
 And for student_checkout_list"
1,"google authentication isn't working.
400. That’s an error.
 
Error: redirect_uri_mismatch
The redirect URI in the request, https://blooming-headland-78968.herokuapp.com/users/auth/google_oauth2/callback, does not match the ones authorized for the OAuth client. To update the authorized redirect URIs, visit: https://console.developers.google.com/apis/credentials/oauthclient/76220307998-fvuq3nss5saoi2hfcppjhr9k98t1ucig.apps.googleusercontent.com?project=76220307998
Learn more
codes are modulated properly,
Search function is implemented in index function of book_controller.
The this could be modified as new function.
Print statements are used to debug, which xuold be removed instead logs could be used."
1,"(1) It brokes if I click checked out books as a student.
(2) the hold request is still pending.
(3)No it can't.
(4) it brokes.
(5)If a student already has a book request, the same book request will be denied."
1,"I still can not  upload book image. Or maybe it just can not show up?
After I approve a librarian, I can not login as a librarian or using existed librarian account."
1,"It is possible to register two librarians with same email id. When the admin approves their request, no measures taken to remove the second request."
1,"One good thing is they are doing the admin's approval for both students and librarians. But the basic functionalities such as view books is not working for normal student user. Also the list of librarian approval list is not showing up. There is the code for controller but there seems a problem with the routing or the helper paths. Please verify.  Also the github repo and deployed repo seems different. So at the time of writing this review folowing flaws were observed.
Also, in first round, one UI suggestion was given. Sign out button is shown if no one is logged in."
1,"Changes were consistenly pushed to the repo. Seems they have pushed the changes once they are done with a praticular functionality .
It would be easy to manage the code if new branches are created for every new feature instead of pushing every change to master every time ."
1,"1. Admin cannot view all books.
2. Admin cannot view all librarians..
3.Librarian cannot view and edit the library he belongs to.
4. Librarian can add books to libraries he does not belongs to.
5. Librarian can edit book info. which doer not belongs to his library.
6. Admin cannot approve librarian requests.
 7. Students cannot borrow and bookmark books."
1,"As the view pages are not working,the changes are difficult to capture.For example,the view books,View Hold pages,View student Checkout list are throwing a 404 error already.So,can't check for the changes after a student is deleted."
1,"The view pages,For example the View Books,View student Checkout List is throwing errors when tried opening when logged in as an Admin.The search functionality is not working properly.Error on the 'Back' link at many instances.Ex:After Adding a librarian"
1,"Mostly,all the relationships are handled.But,dependent ::destroy would be something that could have been used."
1,"Yes,the team has been updating even in the second round.But,their updation continues even after submission."
1,"I could not test this program properly in the first round due to having a private repo and basically no way to verify anything. The team seems to have no actual validations in place other than the presence of a field, so most functionality is broken or can be circumvented in some way. Theres not even a uniqueness validation. Basically anything that is solved by validation (uniqueness, formatting, etc etc etc) is broken. Student sign up requires admin approval and can literally just be fields of ........... . Additionally, I can go to /books/new and add a new book with all ............. for the fields (except for quantity which has to be a number). The skeleton of the project is there but it seems like any form of verification/validation that ensures proper functionality is missing. After adding a book, the home page is blank with literally zero links to go anywhere else (as a student). The admins password is also stored in plain text, displayed on the page, and can be viewed by users going to /admins/1. It can then be edited."
1,"1) What will happen if the admin tries to delete book that is issued?

Cannot test this because of Student(3) in above text area.

(2) Can Admin account be deleted?

The admin account cannot be deleted

(3) What will happen if an admin tries to delete a student who has multiple pending book requests, will the reservations be deleted? 
 

Cannot test this because of Student(3) in above text area."
1,"The following functionalities have been found incosistant:

Admin

Multiple Students with the same email can be added. ""unique validation"" for email is not set only presence is checked.

Back link on student checkout list is broken
 When I click on view hold request, it throws error: ""No page for url:....""
Admin can see passwords of student and librarian while editing them


Librarian


When a librarian clicks on view checkout history, it throws the error message: ""We are sorry, something went wrong""
Book cannot be deleted.
Edit book link takes on new book page


Student


Can view admins/libraries page and hence inheriting those rights
No books can be viewed from student section but are visible from admins log in. (I dont know why is this error)
Because of (2), cannot test further features like checkout, bookmark, request, etc"
1,"In the models of different entities, I found out belongs_to relationship but no many to one or one to many relationships has been established."
1,"Database is empty
update student not working
librarian update not working
""View Hold requests"" from admin: page could not be found
Libraries are not showing the list of books - option could have been added
Show books page stops working if all the books from a particular library are deleted by deleting the library itself even if new books are added
2 students can have same e-mail id which is not possible
View libraries under student not showing libraries although from admin it can be seen that there are libraries
View books also not working inspite of the fact that a book has been added just prior to that by the admin to the lone library"
1,They forgot to mention the Test Plan!
1,"The UI can be modified to include only the functionalities that can be implemented by the current user.
The functions in UI are well organised
edit functionality should be implemented such that, the fields are auto-populated. and the user is able to edit the book fields. 
Ideally in controller, the edit page in the view gets called, with the record fetched from the database.
Editing books can be redirected to from the books show view page."
1,"The website works only for admin login, the user who signs up is automatically signed in as admin.
 The validations are provided for all attributes.
The foreign key relation needs to be implemented.
Unique key of attribute can also be added
The book controller the increase and decrease book count are consistent in model and controller."
1,"The corner cases are mostly like against null values.
The users when signs in, they should be able to sign  up as student or librarian.
That way the next time, the user signs in, the type of user is stored in table
The admin should be auto configured.
one should not be able to sign up as admin, this leads to data privacy issues and malicious attacks"
1,"the admin cannot edit his profile.
all the users must be able to edit their profiles,
some functionalities like
-View Student Checkout List-View Librarian Approval List
are failing while the student/ librarian logs in.
These functionalities can be hidden from the home page if it cannot be implemented by for certain users."
1,"Whatever modules that have been built now seems to be tested. Ex: Profile Management, Checkout books.
Type of the file uploaded not validated. Tried to upload .cpp file and it was submitted without any error."
1,"The UI looks clean and intuitive.
Sign out button is shown even when the user has not sign in.
Some options which should not accessed by other than admins are visible to normal users. Though they do work for students and profiles, it would be good to not show the features that they cannot perform."
1,"Actions in terms of students, books, etc. works quite well. But I didn't find where to edit the admin's profile. Maybe it existed some where else. But it would be better to add a link on the home page for reviewing purposes. That's my personal view, however."
1,"The landing page is a one stop for any functionality that is to be performed,but it would have been better if they were redirected properly"
1,"There is no distinction yet created between models, so I suggest do that as early as possible. Still many functionalities are yet to be implemented for all models.
More validations need to be performed. For e.g adding a book doesn't check if the ISBN is unique.
End to end flow of many functionalities remaining i.e Checkout , bookmarks, return and hold for students."
1,"The root page of User Interface takes you to a page where all operations can be performed irrespective of it being a librarian, student or admin. In the Sign Up page, it does not specify whether one is signing up as an admin, librarian or student. Every new sign up is redirected to the root page which is logically wrong considering different users and their rights/operations."
0,very simple UI but should have been a bit more organized. Work has been done throughout.
1,Not a thorough test has been done but the models are working with some glitches. Access is not restricted so anyone can get in with the links
1,There are 42 commits. They kept on pushing changes of codes throughout the period.
0,It seems like there is only one branch(the default master).
0,"yes, but majority in last 3 days."
1,"Kindly display proper error messages. use flash notice.
student is able to create a book. kindly check at the back which kind of user is trying to do changes to the database.
Librarian sign up failure it says library must exist. It'd be good idea to have a drop-down option to select a library rather than keeping a text field."
1,There are just some tests that are automatically generated. It would be better to write some tests about models and controllers to tests validations and actions.
0,No.
1,"No, nothing in the test files. Nothing is working."
1,"When student got signed up and logged in page written HI appeared nothing else
when sign up for librarian I was giving library and it didn't sign up saying library doesn't exist.. 
so I went to admin and created librarian and choose from drop down provided still I couldn't sign up the librarian and was not able to see anything regarding that"
1,The backend has not been integrated to the UI completely.
1,"The home page is impresive, but can't really do anything, admin can only create student, but university requiered........No description in README"
0,"Admin can not log in.
Student can not log in.
Librarian can not log in."
1,UI is good !!
1,"UI was good, but focus more on testing."
1,"The interface is the best version among all I reviewed. It is of very high level and very good-looking. The README file gives a very brief information including a default admin account, however, I failed to login by this account. But the good news is that I tried to simply sign up a new admin account and I succeeded."
1,"The admin can't log in. So, I can't test other things that admin should do."
0,"Yes, controllers only take data from models and send to views."
1,"the credentials provided on GitHub didn't work. Anyways, I signed up as an admin and have reviewed accordingly. But we are supposed to have only one admin with fixed credentials."
1,"I cannot login into admin using ID password given in read me file
admin@system.edu
password - password 
 
i created new profile then i was able too.. I am not sure are we supposed to sign up for admin. i think it should be preconfigured at once.
cannot see dit button in admin profile to edit it 
 
 
Coding looks good, but team have created unnecessary controllers and not able to manage them. logic in controller looks fine,"
0,They didn't test any models.
0,RSpec file has been created but no significant functionalities have been tested.
0,Tested only if the page appears or not.
1,Rspec tests were found for books model and borrowing history controller.
1,Basic test files are present for multiple controllers and models but it is not indicated in the readme which ones have been thoroughly done.
1,"team has tested all the modules. but all the modules have one or the other small bugs needed to be foxed, so i don't think they have tested any of the modules thoroughly."
1,The admin can delete a book which is checked out. It would be better if the admin can't delete a book that is checked out.
1,"Some of the edge cases i was able to test like deleting admin - cannot do it, README.md file does not contain that much of information about edge cases or project. Students cannot access librarian data or admin data. Rest of the edge cases i was not able to test. If admin tries to delete student with book issued, it is crashing the application. Some of the exception cases has been handled."
1,"(1) The admin can successfully delete. The book was removed, along with the checkout records related to the book.
(2) Actually, admin cannot delete any students from system, because clicking the destroy button only leads to system's crash, and the list of students remains.
(3) No.
(4) Again, no students can be deleted due to malfunction.
(5) I want to see what will happen to the books and librarians and related checkout histories, when a library is deleted.
To my surprise, nothing happens to books. But all librarians along with all checkout and request records are gone as expected."
1,"The admin can log in now, and the admin can deal with multiple tasks that are related about books and libraries."
1,"1) Student's request book button doesnt work.
2) No association between books and library means that even though you delete library book persists!
3) Student cannot view all books.
4) NO checkout, no return, no overdues for students
5) while editing a student from admin, Admin must know the password of user!!
6) student cannot view his library if you delete and re-assign the library to student again.
7) Approval request of librarian doesn't work
8) Librarian cannot add books.
9) Checked out page for librarian doesnt work
10) Borrowing history page for librarian doesn't work
11) Manage hold request page doesn't work for librarian
12) Manage Overdue doesn't work for librarian.
13) Librarian has the power to move his library to another university!!"
1,"All the functionalities regarding students and librarians which were not implemented in Round 1 are functioning well in Round 2 submission. Great Work!
Some things which are not working well:
- When clicked on approval request, the web app goes into inconsistent state
- Book image is getting displayed when the book is added but when viewed via Librarian dashboard the cover image doesn't get rendered."
1,"There is a huge improvement from the first round and almost all of the missing functionalities have been implemented. There are one or two missing ones like accessing hold requests from librarians and university id being displayed instead of the name but otherwise, it is working perfectly."
1,"cannot return an issued book.
Cannot approve a librarian or special book hold request."
1,"yes, system is working as expected, librarian is getting approved by admin, admin is able to perform operations of librarians and student. Book history is not there in admin role. In Student i tried to search book with its title but i was not able find and hence was not able to check it out, return or bookmark it. Some of the things were fixed after review 1."
1,"Solved problems which originally showed up in first round:
1. Admin can now create student and librarian accounts.
2. Admin can now add new books.
3. Librarian can successfully sign up now, but there are some issues on the appove action of requests for librarians, which will be mentioned below.
4. Librarian can now add books and remove books. But the bug is that he/she can add books to other libraries.
5. Librarian can only edit and remove books of his/her own library now.
6. Admin can view the list of checked out books and librarian can view the list of checked out books, overdue students and hold requests now.
7. Books can be created and the cover photo can e uploaded now.
8. All validations are in place now including the uniqueness of ISBN.
9. Students can successfully check out, return, request for and cancel requests for books now. And they are not eligible to check out special collections now.
10. Bookmark features are in place now.
 
Unsolved problems:
1. Maybe a user can edit his/her profile now, but the thing is that the ""edit profile"" button is not clickable because of the failure of the dropdown list mentioned in additional comments.
2. Admin cannot view the lists of overdue students.
3. Firstly, no matter a user tries to sign up as a librarian on his/her own, or a librarian account is created by admin, this new account should be approved by admin. However, when I click on the approve button, the system crashes.
The thing is that, even though the system' crash, the request for signing up as a librarian is indeed approved. So weird!
4. Librarian has the ability to add book to other libraries, which he/she wouldn't be allowed to.
5. Librarian cannot view books of other libraries, which he/she would be allowed to.
6. There is no maximum checkout limit now.
7. Upon a book is returned, what happens to the next student in waitlist is that, his/her request for this book has been removed, but the book still remains available, rather than checked out by this student.
8. Because of the environment of this app is still development, I cannot use my facebook account to log in, although given that there is a social sign in button.
9. The main problem of books is that, no matter what library I chose when I created the book, it will always automatically be associated to Hunt Library, even when I delete this library. This may be because there is no relationship between Library and Book."
1,They handle associations very well. The associations between different models are detailed.
1,Book association with library is missing.
1,"Yes, the relationships are being handled properly. Books are being associated with their respective libraries and the same regarding students and universities."
1,good database design could have made separate table for book hold request and special book request as both of them have different behavior.
1,"database optimization: separate tables like book_author_mappings, book_library_mappings can be normalized."
1,"Yes team has maintained necessary relations in models. 1 to n relation for library and book , university and libraries is maintained. Librarian and library and all relations are maintained in models."
1,"Although the whole mapping table of all models are really complicated, they are all of correct formats and all working in place.
One problem:
There is no relationship between Library and Book, which means that when a library is deleted, the books will remain anyway. See more details in additional comments and the fifth edge case."
1,"Yes, team has been committing their changes throughout the project"
1,Yes i team has made changes throughout the project
1,"Yes, changes are visible in round 2 and are consistent as well."
1,"Yes, the team continued to commit changes post Round 1."
1,They kept on submitting their changes throughout the project. And they still commit a lot changes in the round 2.
1,"The main problem in first round was that, the backend and frontend were not connected well. This time they made many commits throughout the period including fixing this issue and many other modifications."
1,Could not find any issues with the code submitted. The code is quite modular in nature.
1,I'm able to edit the URL to visit non-accessible pages.
1,"librarian is able to access admin page using admin URL. ""/admin_dashboard""
getting error when trying to signup using facebook. giving credit as it is at least redirecting me to facebook page but i am not able to test this in deployed application.
Good coding practice is followed. Happy to see such modular code. Good work!!"
1,Nicely implement important methods inside the model and not inside controllers.
1,"Code written looks good to me. There is lot of commented or dead code which can be removed, team may have saved it for future use i guess. for some of the things we dont have to create separate controllers which may make code less DRY. Logic seems pretty straight forward to me. Naming conventions are used in good manner, although we can improve in some of the cases. MVC structure is been followed."
1,The code is of very high quality. All names are accordance to the discipline and all codes are explicit and easy to understand. It can be seen that they have a very good habit on writing Ruby on Rails codes.
1,Yes. I like the fact that the controllers to be changed are parts of the diagram.
1,"Design looks fine to me. Only thing I would change is to split up the ""status"" field of reviews into two boolean variables, ""private"" and ""selected"". This makes the design more clear since you no longer need to enumerate them."
1,"The design document has a great Use Case diagram which is minimal, yet very helpful in understanding the flow of the changes to be made to the project. The 2 user roles and the common tasks between them are clearly depicted in the diagram and how they lead to the common controllers where the changes will be implemented."
1,"The design appears to be very simple and concise. It is straightforward and includes only relevant information about the issues, the planned changes and the Test Plan.
The natural flow of the design document is very helpful in following the project. Every section builds on the previous one and adds more to the document and connecting more dots as the reader moves on.
The diagram certainly helps with understanding the issue at hand and the indexing of the steps in the scenarios of the Test Plan really make it very easy to follow the logic behind the tests."
1,"The design appears to follow appropriate design principles and appropriate patterns.
The team states its goal in the 'What is this project adding to the reviews?' subsection in the Implementation Details section.
The design has a Introduction section which introduces the topic around which the problem statement is based i.e. Reviews. The Problem Statement then describes what is actually to be done in the project by introducing the reader to the issues at hand. All the issues in the Problem Statement are concisely stated.
The Implementation details section, DB design and Design pattern sections give more insight into the planned changes that the team wishes to enforce once they actually start implementing their ideas."
1,"The authors have explained the changes to be made to the system very well in the design document.
They do so by including an Implementation section which lists and describes in detail the 5 major changes that the team will be implementing over the course of the project.
By also including a Files Changed section, the authors do a good job in explaining the localization of all the changes to be made.
The changes to be made to the DB pattern are also clearly stated and the choice of Delegation Pattern as the Design Pattern also give a very good understanding of the thought process of the team behind the changes to be implemented."
1,"Yes, the team was using the UI testing to checking the functionality, another recommendation would be doing some automatic testing to make sure it will work correctly in future updates"
1,"The visualization is very easy to understand, however, the UML diagrams fail to explain the whole structure of the project, there is only a diagram indicating how users working with the backend"
1,"Yes, the solution was clearly explained and very easy to understand"
1,"Yes, the wiki properly listed the design patterns"
1,"Yes, the proposed implementation is very clear and possible files are listed and implementing methods are indicated"
1,"Very well out lined test plan! This is what I wanted to see, detailed steps (actions) to be taken by each role. Having this listed in words helps implementation in great deal based on my experience, I am glad this team did this."
1,"One graph is listed in this wiki, though the change involves way more content, for example data flow between models, interactions with controllers etc.. They already listed the files to be changed and this really wouldn't be that hard."
1,"Changes, listed in this document is completed. Though I am still not certain about the revoke access in the future part of it mentioned in #2 above..."
1,Great utilisation of the use-case diagram to demonstrate the functionalities of the system.
1,"Yes, the design is simple and easy to follow. I particularly like the fact that they have mentioned the design pattern they're going to follow - Delegation pattern"
1,"Yes, the design appears to be sound to me. They have done a good job with implementation details. I just think renaming it to ""Implementation Plan"" would be more appropriate."
1,"Yes. Other than the test plan, I think everything else is quite elaborate."
1,"Yes. It's neat, elaborative."
1,Neat and understandable visualization.
1,"Yes, they are following the principals and it is sound."
1,- A well laid out test plan is provided. They have provided proper steps for each type of user.
1,- The visualizations are great but I do not see anything related to what they will be doing. It explains the changes which have already been implemented.
1,- The document is easy to understand and the visual aid helps. The only issue is that they have just a refactoring task and there are not a lot of details related to that.
1,"- They have mentioned the design pattern i.e. Delegation design pattern but I do not see any proper reasoning for using this particular design pattern. An explanation of why this pattern would be useful here. Writing ""code reuse by inheritance"" is a very generic statement."
1,- They did mention that they will refactor the code as the code is already implemented. They do not provide details related to the changes they will be making and have just explained what is already done.
1,"The test plans provide all the outlines to test each basic scenario. However, they have not mentioned any edge cases in their design document. They can possibly also test a scenario thus:
What if a student decides to change his already selected and sampled review to become private? The change should now be reflected in the sample reviews option for both the instructors and view sample reviews page/link."
1,"Along with tables, the team has also added a user model flowchart to the design document. This really helps others understand what their project does."
1,"The project is simple and concise. The code changes are explained logically and the flowchart does a great job of showing the design. Overall, it is simple enough to be easily implemented."
1,"The design has been well thought out and they address each scenario to develop. They have also specified the design pattern using - Delegate pattern, which I think is the correct choice for this project."
1,"The changes have been adequately explained. The wiki documentation page will undoubtedly be updated as the project progresses. For now, this much seems enough."
1,Good amount of details of testing have been provided. Most of it is going to be manual testing from various perspective. They have not mentioned abut writtng any new test cases.
1,They have given a UML diagram mixed with flow chart. The diagram does explain things they are trying to achieve but it still does not follow any conventions of flowchart or UML.
1,"No design is not that complex, they are going to add checkbox on the screen and rest of the manipulations will be doing on basis of that. not much is going on which can make it complex."
1,"yes design is good. They are going to use delegation design pattern but it would be nice if they can explain how they are going to implement it, because they have mentioned problems and their solution but more information would be good to have."
1,"Yes they have given good amount of information about the changes they are going to do, just a better and more formal visualisation would be good."
1,"They have included the test plan and have explained the test strategy for each individual scenario. If given the explanation as to which functionalities they are trying testing, that would have been even better."
1,They have provided the UML diagrams to describe their plan of work. Which is quite easy to understand.
1,"Yes, the design doesn't appear to be complex as understood from the UML diagram. Could have provided a clearer written explanation."
1,They have mentioned the use of delegation design pattern in their project. It would also be more understandable if they said where exactly are they employing it in their work.
1,"The authors have explained which are all the areas they would concentrate on and work on throughout this project. They have provided the problem statement, implementation design and also the files where they wish to make changes."
1,The visualization is helpful.
1,The design is simple to implement and understand
1,"The team explained the changes made in the previous implementation of this project, they do not explain in detail the changes that they will be making on top."
1,"Test plan looks okay, but RSpec changes are not proposed, they are necessary to test the functionality."
1,"Yes the design is simple, one thing to add here is that 
Add a feature for students to toggle the visibility of their reviews. When reviews are marked 'public', instructors will have the option of adding them as a 'sample review' to any assignment. When reviews are marked 'private' they will not be shown to other students as a sample.
In the above feature, the toggle button should have a default value so that if student do not want to change it then it can the default one."
1,"The write up explains the design of the students could read through some sample reviews, in a very clear format. It's simple and elegant."
1,The writeup clearly explains what has been proposed as part of the design changes. It's to the point.
1,The visualization used was good enough to give a decent overview of the where is the problem focussed on.
1,"Yeah, the design appears to be simple although testing is lengthy. It could be cut short to what was required rather than explaining all the steps. Problem Statement is clear and concise."
1,"They have clearly explained the changes to be made to the system. and the files which will be modified as a part of this project. The complete project flow was described in the test plan. Instead, two different columns should have been created."
1,"The user story chart explains the project pretty well, however, the UML diagram and work flow chart is missing, I think the UML and flow chart could help readers to understand the whole process clearer"
1,"The code design is clear and DRY, one thing that missing explanation is that how the team gonna making changes to the db"
1,The explanation of the proposed approach to the project is very clear and easy to understand
1,"Yes, the design corresponds to the project requirements"
1,"Looks complete, they even mentioned that the project needs to care about removing the consent to share as well."
1,The use-case diagram explains their approach effectively
1,"1) No, I don't think there are any issues with the location of the proposed changes
2) Too early for me to say as it depends on how the team goes about whatever they've proposed
3) No, its not complicated
4) No, the response time should be the same
5) The document is good enough"
1,They have provided good explanations in the implementations section of the writeup. I think they should rename 'implementation' to 'proposed changes' since this is a design document
1,"Yes, the document addresses all the functionalities listed in the design document"
1,The proposed testing plan should've included RSPec and SimpleCov too
1,UMLs are present. They are clear and elaborate.
1,"1. The author is on the right way.
2. Don't think so.
3. No.
4. Maybe because of the database interaction."
1,I believe the proposed solution should satisfy the requirements.
1,Covers most component of a proper document.
1,"- Use case diagrams are a good addition. They are easy to understand and make it easy for the reviewer/reader to understand.
- If they are really sure about the delegation design pattern I would love to see some explanations in the form of a UML diagram to support their approach."
1,"- Reading the doc it looks like all they have to do is code refactoring. If that is the case then they should have mentioned the problem areas in the previous code and their solution to it.
- They mentioned that they are going to use the delegation design pattern but I do not see anything which justifies the use of this specific design pattern."
1,"- They have given a detailed description of changes that needs to be done in the code showing that they have planned ahead.
- It is mostly code refactoring so I would love to see some pointers of the problem area in the previous code."
1,- Very well written wiki. They have written it well to make a reviewer understands what they are trying to achieve.
1,- The doc is very detailed except for the part they are supposed to do. They covered the part which is already done but didn't talk a lot about the change which they are going to do.
1,"The diagrams are neat, easy to understand and portray the essence of the project. So no complaints there."
1,"In the documentation they've mentioned adding in the CAKE type as a star rated question, could this be more intuitive? A 5-star rating doesn't let me distribute them evenly, say between two members. Could I rather put in a percentage number directly? Not sure how if this can be done, but try show the previous rated contributions as well with the member names? More details needed on how a warning would be displayed on the UI as well."
0,yes test cases were added. test cases were added for the response controller. newly added tests pretty much cover the entire range of this project.
1,I suggest adding comments to the testing code. It's difficult to tell why some code is needed.
1,Lot's of code added with very little explanation of what the snippets are supposed to do. This should be addressed as this makes the wiki unreadable.
1,"1) Add some negative test 
2) add tests where new bookmarks are added and it get reflected in other pages"
0,"No, I think it is a good starting place for a future team to pick up, but I do not think it is ready to be deployed. There's still some problems which I mentioned above need to be fixed."
0,"Yes, they kept working on the project during the 2nd round. However, some of the commits look like useless. 
e.g. On Nov.6 and Nov.7, there are two commits are respectively ""delete an extra if"" and ""Editing comments"", and the change is from ""method to check"" to ""check"" and delete a line of code ""if ..."". it not necessary that you do the commit every time even if you only change just a word."
1,"Based on the explanation of the current problems and what they wish to improve upon, the proposed changes seem logical and are coherently described."
1,"The document is well-drafted and has all the appropriate sections including File Changes, UML Diagram, DB Changes and Future Test plans."
1,The doc seems to be complete. They can update the doc with their test results during the later stages of the project.
1,UML diagram should be more descriptive and provide program flow as well. UML diagram does not follow conventions.
1,"Explanation is clear and easy to follow, author has mentioned what changes are required and where it should be implemented."
1,Yes design incorporate what is required to be implemented in this project.
1,Most of the things are covered in the document only a bit more effort in UML and scenario where a student submitted a public review and want to make it private should also be added with details.
1,"In our approach, we will modify the code to work on the reports that already existing in the assignments.
modify could be elaborated"
1,design is complete
1,"Though the authors talk about the designs,they donot specify as to which methods they plan to add,in what class etc.So, that can be explained better."
1,"The author has tried explaining the changes that he proposes with diagrams and flowcharts.But,it could have been a little more briefly explained"
1,"Yes,the design includes the functionalities required as part of 'to be done'."
1,"Though the design document talks about what the project is about and what are all the functionalities are to be included,the methods to realise these functionalities are not talked about"
1,The visual aids are helpful in understanding the functionality required.
1,The methods to be added are planned to be added to right classes.
1,"The approach they are using is changing/refactoring the preexisting solution, So the design document should have also talked more about the problems in the solution code in detail and the changes they plan to implement. The code is probably already implemented in delegation pattern which they plan to refactor, so essentially they are not implementing any pattern as such."
1,"Missing parts mentioned earlier, existing document is very good and descriptive, but incomplete."
1,The design proposed in the Implementation Details section clearly explains the stuff. The design does not intend to potentially increase the response time of the system.
1,"As per the design, everything seems good and the changes are placed at right places. The steps are clearly explained."
1,"The design incorporates the functionality - ""If the students could read through some sample reviews, they would gain a better understanding of how to write reviews. This project aims to do just that"". This functionality is very well designed on wiki."
1,"The design document is almost complete, just adding a few more diagrams could have been better. The steps are clearly mentioned."
1,The rationale behind using the Delegation pattern was not specified.
1,A few of the points mentioned in the Project Description were not given in the Wiki Page such as also showing ratings along with reviews.
1,Test Plan was well written and adequate.
0,"(1) What will happen if the admin tries to delete a book that is issued?
The checkout feature is not working. So this edge case does not work.
(2) What will happen if a student is deleted who had books issued and there are other students waiting for the same book?
The checkout feature is not working. So this edge case does not work.
(3) Can Admin account be deleted?
No, it cannot.
(4) What will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted?
The checkout/request feature is not working. So this edge case does not work.
The README.md should also cover how the system handles edge cases.
The README does not cover how the system handles edge cases."
0,"The admin user was not accessible in round 1, hence creating books and libraries was not possible. The author seems to have fixed the issue.Now that it is accessible, all functionalities work perfectly. 
The book checkout feature is not available. A student cannot check out any book regardless of special collection status."
0,"In general, the team kept on submitting their changes throughout the project and made a lot of commits which is a very good practice.
In round 2, the team constantly committed changes as well (16 commits)."
1,"- The admin, while changing the status of a librarian, from unverified to verified is made to type the password of the librarian. However, as per the requirements, the admin is not expected to know the password of the users but just the basic editable details like name, university, library etc. In other words, there is no need to re-enter password of the librarian for just updating some fields.
- Also I don't think there is a double authentication required just for editing the user profile. If a user has signed in, he is the correct user in the first place. Or for that matter, even if an impersonator would have signed in with the correct user details, authenticating again would  not prevent him/her to change the user credentials. Hence, I feel that putting in the password again for changing credentials would not serve any purpose."
0,-The team did push the changes on git as and when required but I couldn't see much changes pushed after the first review mainly because most of the functionalities were working even during the previous review.
0,Seems to just be the generated testing.
0,"Yes, for the most part. Like most projects I've seen, things should be moved out of the model and into a helper or into the controller. The code tends to be clean and methods tend to be single-task. There are not too many nested blocks or anything else."
1,"1) The book is still deleted if it is issued by some student.
2) If a student is deleted still the count of book is not increased so other students cannot get the book.
3) Admin account cannot be deleted.
4) If an admin tries to delete a student with a pending book, the student is deleted and the book count is not increased."
0,"Yes, the team did submit their changes throughout the project"
1,"(1) When a book is deleted, the hold request on it is not deleted. 
A student creates a hold request for a book, and then Admin deletes that book.
However the hold request for that book doesn't disappear, which means the hold request isn't deleted.
(2) When a user is deleted, the borrowing relationship is not deleted.
A student borrows a book, and then Admin deletes that student.
However Admin can still see the borrowing relationship in the checkout list page.
(3) Because their models doesn't have dependent :destroy validations, so destroy operations will cause a bug or even make the system crash.
So almost all tests for edge cases that destroy one of a relationship pair will not pass."
1,"(1)The attribute Published for book doesn't mean the publish date but the Press which published this book.
You can see this on the library website of our school (library.ncsu.edu)
(2)We cannot see the image of a book.
Only creating a book with an image, we can see this image. For existing books, we cannot see their images.
(3) Admin cannot borrow a book.
 (4) Admin cannot bookmark a book.
Admin can do anything student/librarian can do as written in the documentation.
My suggestion is that we can create two entries for admin to borrow books or bookmark books. As you use User model, it's much easier to add these abilities to Admin role.
(5) Admin cannot approve a unverified librarian.
When we sign up a new Librarian, this account is unverified.
Then we login as Admin and edit this new account(librarian), we want to change its status from unverified to verified.
However when we click update, error notice comes up saying that ""password can't be blank"". This is because the password is lost when we edit an account.
The point is that Admin doesn't know the new librarian's password, so Admin cannot update(approve) this librarian.
My suggestion is that you can make an entry for approving librarians other than editing a librarian status attribute.
Then Admin can click a Botton for approving librarian, and the codes will help us to modified the librarian's status from unverified to verified.
 
 (6) No notice for making a hold request
The document require us to inform a student whether this book is unavailable or this student is at max borrowing limit when he/she wants to create a hold request.
As written that ""Inform the student that the book is unavailable or max limit reached.""
However your system only tell the student that ""You can not order this book. Please raise a hold request by clicking""
Student doesn't know what's going on.
My suggestion is that you could add more if closures in borrow method to react to different situations, and then render different notices.
 (7) Admin cannot approve a hold request for special book.
Admin can do anything as librarian can.
(8)Student cannot see their profile.
When we click  ""view profile"", we directly go into the edit page.
 (9) student cannot borrow a same book twice.
A student has the ability to borrow a same book twice if this book is available and this student doesn't reach his/her max borrowing limit.
(10) Not properly creation of hold request.
In the document, student create a hold request only if he/she cannot borrow this book.
However when we login as a student, we can create a hold request for the book that we can borrow..
The point is that if we can borrow this book, why do we need to create a hold request for it?
 (11) student cannot borrow a book after returning two books.
Create a new student, email: test@ncsu.edu name:test, education level: bachelor, then login.
We can borrow at most two books. After borrowing two books, we return them all.
However, when we want to borrow other available books, the system says ""Sorry we cann't process this order now""
The question is that now this student have no checkout books(he/she returned them all) and he/she wants to borrow another book but gets denied.
My opinion is that may there's some bug in returning module, when a student returns a book, he/she will have a ability to borrow more books."
0,"Test cases are executed thoroughly.
Student cannot register using same email -id. No two books can be given same ISBN number."
0,"Yes, the team kept pushing changes throughout the project.
Only some (not many commits) were made during the 2nd round."
0,"yes, the system handles the 1-to-n and n-n relationships properly. The library-book relation is 1-n, The university-library relation is 1-n, The university-student relation is 1-n, The library-librarian relation is 1-n"
0,"The code quality is reasonably good. One method only handles one task, There is no bad naming."
1,"All contributors have committed frequently throughout the duration of development of the project.
It could be better if the following suggestions are incorporated into the project.
Suggestions:
1) The commit messages should have a meaningful description of the added code/functionality in that commit.
Instead of using one or two words, use a couple more words describing the exact change made."
1,"The university model and controller have been tested thoroughly.
Suggestions:
Consider adding more thorough testing to the university model."
0,"The UI is easy to use and navigate through. The README is also informative with all functionalities mentioned for each user type.
Suggestions:
1. Add screenshots to make the README more intuitive about navigating through the app."
1,The changes made to git have been thoroughly pushed on git however I would recommend that the commit names be specific and not general. For instance replace 'bug fixx' with something that was actually fixed. This would not only help to keep track but also make it easier to refer the log files.
1,Usage of Bookmark.create! Using banged create should be thought of again as banged methods are dangerous.
0,No new method added. Only basic modifications are done. The changes are self-explanatory.
1,"No, some edge cases have not been handled. Admin is able to delete books which are checked out, delete libraries that has books checkedout. 
Admin account cannot be deleted, expected."
1,"-The User Interface has made sure that the elements are placed correctly on the web page however I would suggest to make use of some better color templates to make it look much more professional as well as enhance the user experience (something like blue and white or black and whilte)
- You can also display the name of the user in the top right of the navigation bar when logged in.
- ""Hello user_name"" is unnecessarily big in size and is occupying more pixels even when not needed.
-Also the login and signup could be improved by scaling it down since both username and password would not exceed 20 characters in most cases."
1,"-The code looks like it follows some ""good ruby on rails"" practices however, I would also recommend that you add some useful comments in your code which would not only make the code much more intuitive for the new user but also make it faster for you to add new features as and when required.
- Since some functionalities are common among users, using helper method would be an efficient way of reusing stuff rather than rewriting those lines of code."
0,The wirte-up is not well structured. It explained the problem. But the approach is not mentioned.
1,while the static code changes seem to be appropriate. the Travis build fails. please look into it
0,Seems to.
1,When adding a book the fine tab sends an error that fine cannot be empty though I entered it which doesn't let me add a book.
1,the build didn't pass. the team needs to look into Travis CI log
0,"Wonderful ruby code, easily to read and understand, and learned a lot from your code!! Thanks"
0,The team has 95 commits
0,"It looks like at least one model and controller have tests, though I'm not familiar enough with rails to know how much is generated."
0,Not clear from the writeup
1,I tried making bookmarks and used the url of the current page but it wasn't accepted. Maybe the ip address made it fail. I noticed bookmarks with same name can be created. When I changed my score of a bookmark to 0 the average shows '-' instead of '0'. It doesn't do this for numbers 1-5.
0,1. The application seems to be bug free.
1,I noticed in the average_based_on_rubric method there is a magic number 5.
1,"1. Followed the good Ruby practices, such as use of ! while calling a method, used blocks for loops etc.
2. Models are used efficiently to validate data and to set up some default values such as max books allowed, overdue fine etc.
3. Models are also used to increment or decrement available number of books."
1,"Not able to create new libraries. Shows a validation error, even though the values have been entered. Shows that the fines should be numeric when it is numeric. Not able to see newly created student and librarian accounts as well."
1,The test plan could also cover how will they ensure that they have written all test cases for their code.
0,Their approach seems to be pretty simple and clear.
0,The design appears to be pretty good.
0,The hace provided a good explanation in their wiki doc.
0,"Design seems to be simple, and the changes on the views seem to be user friendly."
1,"The organization of current implementation, problem statement and improvement seems good. The goal of conveying what the problem is, what the approach would be and what the desired outcome should be is clearly conveyed. The methods to be added should be named better. More details on the anticipated code changes could be included."
1,Expected results and current implementation has been the focus of the team and these sections have been written well. However the actual implementation plan and testing plan needs to be mentioned better.
0,"Yes, well explained."
1,"The author's proposal of changes is well described and depicted through UML flowcharts and UI mockups. The problem statement is described in a simple manner and its easy to follow. Not sure how the ""toggleable column"" to show the ratings and average rating would work on the UI, I think this is not shown in the mockup."
1,The test plan could have been more descriptive and more test cases could have been included.
1,"It appears so. Most of the problems to be solved that are described in the problem statement have corresponding solutions in the proposed approach. However, The test plan could have been more descriptive and more test cases could have been included."
1,"The design appears to be sound. Design description could probably have included more data about the design patterns and the flow controller in the controller because functions themselves are not descriptive.
-The design doc is pretty well explained. The project purpose is listed in an easy to understand way, and changes proposed for views and controllers look comprehensive.
-The spec test cases could have been defined in more depth. 
- Not sure how summary of reviews is fetched, apparently it already exists. Could have dwelled upon this a little more to give a glimpse of the design."
0,The design includes a test plan using Rspec to test the functionalities.
0,UML flow chart has been used to describe the project flow.
1,"The authors have adequately explained the changes that would be made to the system. However, the test plan should have been more descriptive covering all the steps to cover edge cases."
1,"Yes,  their design did have the test plan, however, it is too simple to implement.
They should mention more detailed test cases in the design doc."
1,It is simple and easy to read. But it looks like the doc is too simple to explain their whole design of this project. It would be better if there are more detailed solutions.
1,"Yes, changes are explained adequately, however, I think it is too simple, they should mention more detailed solutions and test plans."
1,"the design does include a test plan. but automated testing and coverage of testing could've been explained with more details. ""The coverage of Coveralls bot will be filled after our finish all our work"", didn't exactly understand what this statement means in coverage."
0,"yes, the design appears to be as simple as it can be. clear and concise"
1,"the design document appears to be decent following all the principles and appropriate patterns. but has few necessary sections like ""code changes"" which don't provide any information."
1,"The design doc included the test plan.
This team localized specific files to do the test plan and they will really test the functionalities."
1,"Yes, there's a good test plan. They showed what they will do in their test in detail.
issue#1384

Login as an instructor
Edit the course settings of other stuff
Recording a video to show how the homepage change"
1,The test plan section is really impressive. They have complete test section including all cases with really details explanation.
1,They have not shown test plan for there implementation. They showed test plan from past implementation doc which has no relevance.So I would suggest them to add test plan for the changes they made.
0,Does not include a test plan.
1,"Yes, they have test plan.
More info of your each test plan is needed. The test plan is too short for each case. And bound case if you have any."
1,Plans for UI testing have been mentioned for most issues. I would suggest to think more about edge cases for each issue and add some Rspec tests.
1,"Yes, a detailed test plan is included. Although the issues were fixed last year, they lack tests and hence the team has appropriately included a list of tests to be carried out."
1,Diagram of UML is good. But I want to see a user diagram which demonstrate your functions and relations in the flow.
0,The design is straightforward to be understood. I can totally understand what they have written in the writeup. Good job.
0,"Pattern is good. They have problem statement, design pattern, improvement, and test plan section. Flow is pretty complete."
1,"They have completed all the test plans for six issues. But among the first three, there are only steps to test on the basic functionalities, thus shown to be shallow. They did not consider possible edge-cases. Thus the tests would all be easy to pass and hard to fail."
0,"Yes, the changes looks good and should work."
1,Test plan looks okay. They have given steps for manual testing only and have not mentioned about any new test cases that they will be adding
1,"The team has identified the controller they need to make changes to. However, what changes and how they will try to accomplish them are not stated. Please provide what changes will you make in which controller."
1,"They have clear user diagram, but no UML diagram. UML diagram can show the clear relationships between classes, and the functions between methods. You have better have one in the design section."
1,"Test Plan has been improved and now includes automated Rspec testing along with the TravisCI.
However, the Rspec testing is abstract at this point and ""We will add a Rspec test in each controller which tests our new methods, such as have_file_added and have_link_added."" is too vague. They have identified an edge case that assignmentID exists, but I think this is already being verified in the code base."
0,"The flowchart detailing the computation done by their code as well as the progress through the views on each action by user is good enough to explain the approach
 
The use of screenshot of expertiza to show the problem is trivial"
1,Ample diagrams and flow charts have been used to convey design the changes done and design strategy respectively.
1,"Screenshots have been added for Round 2, but their size is simply too big and distracting to focus on the content written above and below the same. Please resize the screenshots and include more explanations to convey better.
Also, the diagrams contain too little information to be of much value, same depiction could be achieved using the text. Please include more information in the diagram to make good impact.For example - ""Show"" in #1384 does not have significance on its own, you might want to replace it with ""Show the icon on homepage"" or something similar. Same goes for the diagram for #1430"
1,"The authors don't detail any proposition for code changes or testing. It is all pretty abstract at this stage with no mention of controllers or methods to be added. Code-Level specifics including proposed files to be changed and methods to be implemented is required.
Design Pattern to be implemented needs to be decided.
Test Plan has been improved and now includes automated Rspec testing along with the TravisCI."
1,"Yes, they have clearly listed all files to be modified among the first three issues.
 
Since the last three issues only need supplementary tests, there is nothing to be modified so far."
1,"Team has given visualisation of all of the 3 issues they are going to solve, flow chart are giving enough descriptions but they could have been better."
1,"1) The design looks reasonable and does follow appropriate principles
2) However, no design pattern was used"
1,"Use cases for #1384 and #1354 could also be included.
The team has mentioned ""what"" they have done to fix an issue, more details on ""how"" they are fixing the issues would be helpful. Example: ""During changing the assignment, first we ask which course an assignment is a part of, and then list only those courses that the instructor or TA has access to. So the TA and the instructor can only deal with the courses they related to, but not the irrelevant courses."" How are you checking whether a TA is part of a course and how are you determining whether he/she has access to the same?"
1,"I can follow the flow charts of the design strategies of first three issues to catch their design logics of related functionalities. All include necessary steps and show simplicity.
And they have listed all test steps of the last three issues as well.
 
One problem is that there lacks the flow chart of issue#1354. It looks like they have successfully implemented this issue. But they should have made clearly statement on this issue."
1,It appears so. Most of the problems to be solved that are described in the problem statement  have corresponding solutions in the proposed approach. The test plan could have been more descriptive and more test cases could have been included.
1,"The design document has become very unorganized to follow through efficiently, post changes made by the team for round 2. Request them to structure it in the way it was for round 1. I would suggest to include more details on the design strategy.
The results seem to be incomplete. I am not able to understand what the team wanted to achieve by looking at the screenshots."
0,Ample uml diagrams are added.
1,"design document looks good, its easy to understand, although they have given alot of details which are not required for a design document. But good thing is they have mentioned about all issues in assignment , related all of them from expertiza github and gave solution/ approach to solve all of them, which makes it easy to understand and not get confused."
0,The diagrams in the document are all helpful for understanding the goal of the work.
1,The images are too big and the ext between subsequent image is really small.So it makes hard to read the doc and if we are already making video about showing our implementation why show images?
0,The explanation makes me easily understand whole process.
0,"Yes, the design incorporate all of the functionality required."
1,"Yes, the authors have adequately explained all aspects of the implementation/testing that needs to be carried out."
0,The changes proposed by the authors are thoughtful and well put through.
0,The authors have explained the changes quite well.They are easy to follow and understand.
1,"Design document looks good, it is very descriptive, they can improve image sizing, images are really big and they have pasted al lot of code which is not required that much, it is just giving extra information to the page and making it long."
1,Changes being done to Controller should be more descriptive. The proposed changes are bullet listed and do not explain the functionality in detail.
1,"All are helpful and useful to take a clear look at the correspondant content.
One advice is that, because the main reason of showing the current view is to compare with their expected view after implementing, it would be better to place the figure of current view right next to the figure of view after improvement."
1,"They just mentioned what to do with the current view pages, including adding a toggleable column, and another column of additional file or link, and applying other improvements.
But no applicable strategies on how to modify which codes have been specfied. So they still have a lot of statements to write so far."
1,"They did draw the diagrams for each issue, but there are some suggests.
1. For issue #1430, the diagram they draw is not so necessary.
2.  issue #1430 should not just have use cases diagram, but also need the data flow diagram."
1,"The requirement of this project is mainly on adding a new feature of feedback to instructor interface. And the wiki comprehensively overed the description and strategy on how to implement the features of ""average ratings"".
Besides, they decided to implement an additional feature of ""a table of all ratings"" to this section. Thus, their documentation actually exceeds the requirement."
1,Yes the visual aids are properly done and self-explanatory.
1,"As mentioned above, their design strategy seems to be kind of shallow, and did not cover how to implement on specific files or codes. However, the documentation is comprehensive in general."
0,their design is pretty well. It looks very clear and does not make the code be complicated or increases the response time of the system.
1,The flowcharts and the use case diagram are very descriptive and helpful. The overall quality is pretty good.
1,All diagrams appear to be useful and helpful for understanding the correspondant functionalities. And they have created diagrams for each issues to be done.
0,"Yes, also they have put in a lot of thought in coming up with a scoring system which was commendable."
0,The proposed code changes were explained visually which was very unique and easy to understand
1,"Most parts are pretty good, they have all the parts including problem statements, project design, code change, and test plan.
The thing I think they could do better on test part,
e.g. they should write more detailed steps about the manual test."
0,"Yes, they have identified all their tasks and come up with proposed changes."
1,"The new design of this group is very good.thy
1. they give correct proposed solutions to fix the bug, and the new design looks good."
1,the diagram is clear but need to scale bigger.
1,"1.on method add to a wrong class
2.there is no prove that the code will be ""smelly""
3.design part is good for me.
4.it will not increase the response time.
5.yes, the test plan and code changes is need to improve."
1,"The project design is well explained, but the project design diagram is too small to read.the code changes part is not clear."
0,"yes, all the introduction, implementation, and problem statement, design, is covered, however, more detailed about test plan is welcome."
0,all part included in the design doc
1,"Design is overall good however in issue#1430 does TA's list where they will perform lookup will contain only present course TA is the instructor of or it will have list of course  the person has TAed.Because it might give unnecessary access to the TA of there past course.
Also in issue 1384 instead of having a boolean variable for every icon they can also have bitmask where every bit represents whether to show the icon or not."
0,Implementation strategy mentioned in the design appears to be good.
0,Graphs and tables are good. They screen captured the necessary steps. UML diagram clearly states the inner conditions.
1,"Design seems okay, could use little more details. It would be help to mention what they want to change in which code flow."
0,"Explanations are clearly written, with good grammar and wording."
0,"The design documentation is well done, including all the sections, graphs, descriptions. It is clearly explained."
1,The test plan should include automated testing as well as manual testing. The test plan provided is not sufficient it just gives list of scenarios. Include the test files which will be modified and also different scenarios for testing.
0,Well completed. All sections included.
0,"Yes, the design appears to be simple and the code change flow diagram is helpful in understanding the solution."
1,"The team has made good use of visual aids. They has used 2 diagrams, one is the flow diagram and the other depicts how they plan to implement the changes. I feel the other diagram is a little high-level and does not provide much details regarding the changes. For instance what do you mean by ""Visualize the result""? Please add more details to the diagram."
1,"This team gives the proposed solutions and diagrams for each issue, however, they did not describe each issue clear and detailed.
Also, they should give the data flow diagram of the issue, not just the use cases diagram."
0,"1) Looks like they've identified the class they need to make changes to.
2) The design doesn't look smelly.
3) They have incorporated gems that make the code simpler.
4) I think the design could increase the response time of the system.
5) Sufficient effort has been put to identify the changes. More clarity will be achieved when they start implementing those changes."
1,"Yes the changes the authors gave are easy to follow,but sorry for nitpicking but there is a grammar mistake I think in Problem Statement section where the line "" Firstly, a TA can unassign an assignment from the course which him don't belong to"" I don't there is word ""unassign"" and it should be he instead of him."
1,The overall design looks good and follows all the appropriate principles but does not mention anything about the design patterns to be used for the implementation. Please mention the design pattern which they are following already or you are planning to implement.
1,The changes proposed by the author are pretty much the changes recommended in the project document. Nothing different was evident from it. I would recommend you to add more low level details regarding the changes you're proposing.
0,The team has made good efforts to incorporate all functionalities.
1,"Rest of the document is okay but I feel, the Test Plan section could be improved significantly. Only 2 lines have been written about the unit tests. You could include all the details regarding the test cases. For instance, when you say ""We will add a Rspec test in each controller which tests our new methods, such as have_file_added and have_link_added."", add details regarding what these tests will plan to validate?"
1,"They could have added more test cases. eg - the composite score should be displayed on View scores page, alternate view sis displaying heat map of scores"
1,"They seem to mix the design pattern of each funtionality and the design on how to fix bugs or apply implementation together. Although they mentioned mostly all the changes to be implemented, it is still not good to only include this in the part of explanation of flow chart. They should have used another subtitle to record changes to be done."
0,The design appears to be sound
0,"Yes, the design includes the test plan and it seems quite necessary."
0,"Yes, the design is sound and follows appropriate principles."
0,"According to their explanation, the design seems simple but practical."
1,"Proposed solution should be more descriptive, they should also mention in proposed solution what changes will be done in which class or file."
1,"The tests are shallow, and hopefully the team will incorporate the RSpec testing too, once development has begun. (or already done so, if development has begun)"
0,"From the look of it, yes the design does appear to be as simple as possible, since specifications for the same on the code changes flow or in the write up have been specified."
0,"Yes, the design does seem to be solid and uses the right methods/files involved for designing the project."
1,"Yes, the design of this project incorporates all the required functionality.
They mentioned three issues and give the proposed solutions to each one."
0,"Yes, the necessary changes that will be incorporated have been mentioned, including things like formula being used, and the team also has narrowed down the files that are to be changed/involved moving forward."
1,"More details could be included on how the team actually plans to implement the solutions. Lots of step by step details are included for the manual testing part, which makes it clear for the reviewer to expect such kind of test cases. Appreciate the flow diagrams as well, although in issue #1430, I believe that whether the TA has access or not must be checked before he/she is allowed to make changes to the assignment (the action should be a click on a button perhaps, instead of remove assignment from course, as that is what we want to restrict) . Perhaps some rephrasing would help."
1,"Yes, according to the project requirement, all three issues along with other three from the PR of last group have been added into their wiki page."
1,Document mentions three issues that need to be fixed in this project. First issue language is little confusing and could be explained in better words. Rest of the problem statement is easy to understand.
1,"This team did very well and has a great design doc.
The manual test description is very clear to understand.
Just add more details about descriptions of issues and modify the diagrams."
1,"More cases need to be considered to find the problem in issue 1354, I think there might exist some more scenarios where an assignment could be dropped automatically."
0,Yes. they have adequate visual aids
1,"The authors don't detail any proposition for code changes or testing. It is all pretty abstract at this stage with no mention of controllers or methods to be added. 
What is toggable? Do you mean toggleable?"
0,"They have used Activity flow diagram to explain their logic.
There is no need for UML diagrams for explanation.
The use of screenshot of expertiza to show the problem is trivial."
1,"The documentation is very comprehensive. It covers all six issues in thei tasks, three of which are to fix bugs and implement those funtionalities, and the other three come from the last group requiring furthur tests. The design pattern and test plan of each issue have been fully included."
1,"The explanation is easy to follow however, the wiki needs to be re-organized.
The tasks are not highlighted and detailed description is starting just right after.
The easy language coupled with the Flowchart and project design is enough to understand the task description as well as the proposed solution."
1,"Code-Level specifics including proposed files to be changed and methods to be implemented is required.
Design Pattern to be implemented needs to be decided.
Test Plan is vague and details only the use of Travis CI."
1,"As far as I can understand there are only 2 major task:
1 Combine author feedback data with review data
2 Create an interactive visualization
The problem statement is mentioned on the wiki, however detailed description on each part and organization is not done properly."
0,The code changes flow diagram shows the files they plan to change and their work order. And the use case diagram describes what student and instructor can do.
1,"Design document is well written only few details are missing like what specific code flow need to be changed, or where to add changes. Other wise document is easy to understand and contains proper details."
0,The design is as simple as possible. There is no plan of change that is unrelated to the project.
1,"1) The diagrams are good and really helpful
2) Each diagram does follow the conventions and essential comments are also provided
3) The Project Design diagram could be separate to a general one and specific ones for each part"
1,"The code changes flow diagram shows the files they plan to change. But they can add more details about how they plan to do the work. 
For example, ""Display the composite score on the “View Scores” page."" is the result. It would be better if they write specifically how they plan to display the composite score."
1,They have a code change flow diagram that shows what files they plan to change. But they didn't write how to change the files and what method they plan to change or add. It would be better if they write more details about how they plan to change the code.
0,The design is simple enough to highlight main point. But it's not too simple and I could get the system structure and the relationship of different table.
0,"The design appear to be sound, following appropriate principles and using appropriate patterns. The design document contains Problem Statement and Overview, Code Changes Flow, Use case, Current Process, New Process and Test Plan."
0,"Yes. Authors have adequately explained the changes to be made to the system. The design document contains Problem Statement and Overview, Code Changes Flow, Use case, Current Process, New Process and Test Plan."
1,"1) They have not mentioned about methods' modifications
2) The new design looks good and does not seem to make code ""smelly""
3) The design is simple and clear
4) Since there are new features add to the system, the response time could increase a little
5) Generally the design is good, just minor improvements needed"
1,There is no mention of how the test plan will be carried out. Appropriate mention of patterns along with screenshots of the system could be more useful to understand.
0,Yes the visual aids are used effectively.
0,Yes the design is simple and clear.
0,Yes the design is sound and appropriate.
1,"1) Changes they proposed are mess
2) For the front-end, the description is not elegant and hard to catch the point
3) For the back-end, only few files mentioned that may need to be modified
4) It would be better if they could describe changes generally then separate to front-end and back-end"
0,detailed The test plans are described in good way in documentation.
0,"Yes, it is as simple and easy to understand."
0,the design is good and followed all pattern.
0,"yes, the UML diagram and other figures clearly describe the changes to be made to the system"
0,"Yes, multiple models and controllers"
0,"(1) The book can be deleted
(2) Books aren't automatically checked out for other students
(3) No it can't
(4) The admin can delete such a student, the reservations aren't updated"
1,"Cannot add librarian
Book count is not implemented"
0,"Yes, changes were committed regularly"
0,Code is readable with enough comments
0,"yes, the authors adequately explained the changes to be made to the system"
0,Yes tests have been thorough for most controllers and models.
1,Student is deleted and books issued then student is deleted but book never gets available.
0,Everything is working fine. A few problems like after checkout of the book when i click back it goes to books home page but thats a very minute change. Rest all are implemented perfectly.
0,All good practices are followed .
0,"Yes, the team has thoroughly tested books model."
1,"Admin can delete a student who has books checked out.
When we sign up with google oauth, and admin deletes this user, I am unable to login again using oauth.
Admin account cannot be deleted."
0,"Yes, the visualizations are properly inserted with suitable content."
0,"Yes, it is as simple as it can be."
1,"1) They covered all the functionality required in the document
2) They also take previous implementation of this project as an example
3) It would be better if there could be a work follow showing the current implementation"
0,"Yes, the design is good and they have followed all patterns."
0,"Yes, problems found in first round have been fixed.
In the first round, on update profile page, user had to enter a new password. This has been fixed."
1,"1) Almost everything was covered in this design doc
2) I think a design pattern could be used here to help implementation
3) The methods may need to be modified should be more detailed"
0,"Yes, the mapping has been maintained."
0,"Yes, the team has committed changes in round 2."
0,"Proper coding conducts have been followed.
Code looks clean and readable."
1,I don't find any specific tests apart from the auto generated code.
1,"Some of the observations are:
If the user is book is deleted then that book is removed from the checked out list of the users.
If the same book is available in different libraries then the book can be checkout only once, not sure why the user cannot checkout the book in the other library.
Multiple copies of the same book are being assigned to many users. Not able to see the quantity of books available actually to see the count getting reduced or increased.So, even though when we delete the user, we will not know what is happening with the book.
Forgot password is not working for some reason. The page not working error is displayed."
0,"The test plan is exhaustive, but the plan is very abstract and can include some details here"
1,"The team has implemented the feedback properly. Some of the functionality naming is not done properly in UI perspective last time but it is perfect now.But when the user logs in, we are directly take to the edit profile link forcefully and even though if we change nothing, we have to click on the save profile etc. which has not yet been implemented. But overall the basic functionalities work well."
1,"All the 1-n and n-n relationships are handled properly by the team. We can see that a library can have many books, users can borrow many books, many books can be bookmarked etc. All these can be seen in the migrations as well as models folder."
0,The team worked everyday on the project and kept pushing their changes onto git.There is a clear clarity about the work progress and work division among the team members.
1,"Code is readable and understandable by the users.
There are some parts of the code where we can find the lengthy methods continuously checking various conditions which can be avoided.
SOLID principles can be followed by seeing that one method will handle only one action.
For example, in the contains controller, we can see that the the name doesn't suggest the proper functionalities related to that controller.Maybe this can be avoided.
Including the comments will help the reviewers understand what is going on."
0,Yes the team has done the testing of model and controller
0,Yes the explanations are adequate
1,"1. Checkout Request was raised by the student for one of the book but Librarian was not able to see the request.
2. Librarian was allowed to checkout the books
3. Search by date functionality - If a student puts any date - all the books show up, the search by date functionality is not working.
4. Admin was able to delete the student with Book checked out.
5. Error Flash when a librarian tries to delete the book - Student cannot edit books!"
0,"Yes, most of the functionalities are corrected in round 2 which is amazing. However, few of the functionalities still doesn't work as expected (but these is very small task and can be corrected easily):
1. Librarian - Did not see an option to add a new book created by Admin to add into my library.
2. Librarian - Was able to sign up and then login without the approval of Admin
3. Admin - Add new student and Add new librarian option is not a hyperlink but just a simple text"
1,"I feel the design flawed for calculating the self score
 
In the Document following is mentioned
""The self score is an indicator of how much you know your work. Basically, self score of 1 means that the
Average Ratings matches with the Self Review Rating. It is worth noting that Self Score will be out of 1.
The lowest Self score can go is 0. This will happen when one of the score (either the Average Rating by
Peers or Self Review Rating) is 0 and other one is Maximum.""
 
The bold part is what concerns me, formula is self score = 1 - (avg - self) / max rating.
Since it is mentioned that either avg or self ratings can be 0, let's consider the scenario where only avg is 0 this means  the self score actually increases.
If only self is 0 then self score is 0 only when avg rating = max rating. 
 
Hence i urge the team to look closely into the formula if what they want to achieve is mentioned properly 
 
Moreover I feel diving by avg rating will be a better choice as it'll be a wider distribution"
0,"Yes, the system does handle the associations properly. A library is allowed to have multiple books."
0,"Yes, the team did keep on committing their changes to the repository. Also, changes made during the round were kept on committing."
1,"Did a complete test, and authorizations have been properly dealt with. However, a student was able to visit the page of editing something but he/she was not able to destroy it. I think visiting that page should be blocked as well."
1,"2. Cannot delete student.
4. Cannot test as the student delete functionality is missing.
can issue new book if count is less than 0"
0,"Admin cannot delete library, book, user, librerian"
1,"I do not see test details in their readme.md file.
Only auto-tests in the test folder."
1,"Hold request not yet implemented correctly.
Book not assigned to user who has request a unavailable book when a book is returned.
Book count can be negative number in library.
ISBN validation not added."
1,"This system has improved a lot from the first round. They added many function including librarians. Checkout book and return good. 
Student dependent destroy implemented.
Hold request not yet correctly implemented. Admin cannot approve a book request.
Admin create users not yet implemented."
0,"Necessary relationships added.
Admin cannot delete a university, and destroy dependent objects.
admin cannot delete a library, and destroy dependent objects."
0,"The group made 174 commits throughout the entire working period.
Everyone committed to the repository.
They work through round 1 and round 2."
0,"Code is clean and readable. No redundant code.
A method implement only one function."
0,The design document incorporates all the required sections. It covers all the functionalities as well.
1,I cannot find their tests.
1,"1. The routings confused me, I can login after I sign up as a librarian, and can edit my profile, but after submit, it shows me to wait for admin's approval.
2. Admin cannot add books, it shows ""something went wrong"" page.
3. Admin cannot add new students.
4. Admin cannot add new librarians.
5. Librarian cannot view book history.
6. Librarian can add books that not belongs to his library."
0,"I cannot find clear relationship between some models, such as librarian and library, book history and books."
0,"yes, they keep on submitting their changes."
1,"Some methods are too long, such as show_lib_book method in contains_controller.rb, and I cannot find some important methods such as add bookmark or methods related to book histories.do not ex"
1,They only test the controller. But they seem not test the model at all.
1,"(1) What will happen if the admin tries to delete book that is issued?
The admin can delete the book successfully. However, when a student try to see his checkout list or hold request, the page will go wrong.
 
(2) What will happen if a student is deleted who had books issued and there are other students waiting for the same book?
The other student will still wait for the book. As the checked out record seem still here.
 
(3) Can Admin account be deleted?
No, admin account cannot be deleted.
 
(4) What will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted?
As the ""Viewing hold request"" are broken, I cannot test this edge case."
1,"The admin's function that ""View Checked out Books"", ""View Borrowing History"", ""View Hold Request"" seems not work.
As a admin, when I want to new a book, I should choose which library it belongs to, rather than ""add book to library"" separately.
As a librarian, the function ""View Checked out Books"" and ""View Borrowing History"" doesn't work as well."
1,"They treated the library-book relationship as n-to-n. It means they think a book can belong to many libraries, and a library can have many book. So I think this is a small bug they should reconsider it."
0,"Yes, they kept on submitting their changes throughout the project, and they still commit changes and polish their functions in round 2."
1,"1. admin cant delete a issued book
2. not able to find the student which issued book in the user list in admin section
3. can't create a waitlist for a book if all books are issue this functionality is not implemented.
4. Admin account can't be deleted
5. cant test 4th use case because newly created student are not appearing in user section in admin"
1,"There is an entrance for Google login, however when I choose my account, the notice will show ""User was not found"". So the extra credit seems not work.
 
The code quality is good. One method only handle one task. There isn'y any too-long function. And all functions are named well."
1,"1) Only one copy of a book can be created.
2) When a book is checked out, the user can't be deleted - edge case satisfied,
3) Also, an issued book can't be deleted. - edge case satisfied"
1,"(1) What will happen if the admin tries to delete book that is issued?

I wasn't able to issue a book from student's log in, so cannot test this functionality

(2) What will happen if a student is deleted who had books issued and there are other students waiting for the same book?

I wasn't able to issue a book from student's log in, so cannot test this functionality

(3) Can Admin account be deleted?

No admin cannot be deleted

(4) What will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted?

I wasn't able to successfully place hold request for  a book from student's log in, so cannot test this functionality"
1,I couldn't see the thorough testing of any single model or controller. More unit testing could have been added for taking care of special cases.
1,"1) Admin was able to delete a book that was already issued. However, as a student, there doesn't seem to be any functionality available to see their checked out books. As an admin, the record for this book was deleted from checked out books list.
2) Deleting a user who had issued books and other used waiting for the same book does not assign these books to the waiting students. They still appear under hold.
3) Admin can't be deleted.
4) Deleting users who have pending book requests also deleted the requests."
1,"Most of the functionalities works as it is supposed to be.
 
Improvements:
> Search functionality seems to be working now. However, there could still be some improvement like not making it case sensitive or ""contains"" search.
> Back button has been added mostly but I could still spot some places where it was missing. For example the ""show bookmarks"" page.
> Missing features have been added. For example: bookmarks etc.
 
Issues:
> Negative book counts. This was highlighted in the first review however team hasn't yet fixed this."
1,"No, we can change the approval request of librarian sent to admin and change its role to student. It is mentioned in readme.md, but it's better to remove the dropdown menu. Book search doesn't work. ISBN validations are not there. Show all users doesn't work properly. The UI is too flashy fo"
1,"No validations when creating library: accepts negative overdue fines.
New Librarian not listed in approval list. 
Creating a user is not intuitive nor easy from the admin page.
New books don't show in the index view of books. List of books is not complete.
Search book feauture doesn't work: error view.
Student cannot shoose level.
Cannot checkout books!
Student cannot visualize hold requests."
1,"I can create books without linking them to any library.
I could not see any db relationship mapping table.
Books count keeps decreasing to negative. This seems bizarre.
I could link same book to multiple libraries. Also, for the count part, I could select values like -5 and -0 and it still submitted."
1,"Working features
1.Admin can add new book
2. student can request a special book
3.student can bookmark a book
4.student can checkout a book
5.student can return a book
6. admin gets a approval request for signup of new librarian.
Non working feaures
1, admin not able to see checkout history of a book
2. book search functionality not working for admin
3.Librarian is able to see books from other libraries which belongs to other University
4. Search book functionality is not working for librarian
5. librarian not able to see history of a book
6. Librarian can edit libraries from other universities which should not be possible 
7. Student can see libraries which are from other universities which is unexpected
8. student can checkout books from libraries which belongs to other universities
10. not able to see new user in show all user option in admin account
11. student has duplicate entries for each book he/she checkout ie. for every transaction getting a record in overdue fine section which is unexpected for books which are checked out and returned there should not be any entry for overdue fine. overdue fine should be calculated only for checked out books which are not returned.
12. not able to see any overdue."
1,Yes. This team continued submitting their changes through out the project and specially after the 2nd round. I see over 170 commits which shows the amount of work done!
1,"1) I was not able to see newly created users as the admin and hence can't edit, delete or approve (admins) as an admin.
2) Search Option was given but the functionality was not working
3) Also while signing up, there is no option for educational level for student and library id for the librarian, also that's present when a new user is created by admin
4) I was able to check out some books, but not others which I should have ideally been according to rubrics.
5) I was able to delete user accounts from the user account, using /users URL 
6) Most of the time, the links in the redirection page are taking me to non-existent pages"
1,"Most of the basic functionalities need to be implemented. I am documenting some of them here:

Librarian


Librarian can sign up. When I try to sign in, it says Librarian is not yet approved(correctly as specified in the requirements). But the librarian is not reflected in the admin's approval list, so a new librarian can never login.
I tried to check back in the librarian controller from GitHub repo, that is when I found out that the librarian controller is empty.
So none of the librarian functionalities can be tested.


Admin


A book can be successfully created and updated but cannot be deleted. It throws the error: ""We are sorry something went wrong""
No way to see new librarians signed up.
Checkout history of the book cannot be seen. Clicking on it throws the error: ""The change you wanted was rejected""
A new librarian cannot be added even from create user in admin's section
No other functionalities are implemented


Student


A student can successfully bookmark his books but cannot checkout or request.
On clicking checkout or request, it throws error: ""The change you wanted was rejected"""
1,"Code quality appears to be fine. 
> Methods haven't been cluttered with loads of tasks and are specific to the one they are supposed to perform.
> Naming conventions have been taken care of and the code readability is good.
> Methods are usually short and properly commented."
1,"They defines many 1-to-n relationships well in their models. But I have not found the relationship between books and libraries. In this design, we have to make sure that books can't be created before libraries."
1,The design doc requires addition of proper UML diagrams and elaborate more about the test plan.
0,"Yes, the commits are frequent and incremental"
1,"On deleting the library, corresponding books of that library do not get deleted. Also, librarians should get deleted. There is no library attached to show for librarian"
1,"Some releationships have been established properly, however book class, for example, doesn't have relation to Library."
1,Code would be more readable if there were more comments
1,"Yes, the relationships have been properly specified between different entities of the system.
e.g: one user has_many :books, dependent: :destroy has been specified in the user model"
0,Yes enough github commits.
1,Admin has been implemented in a great way.Except for the edit.
0,Very nice UI.
1,Admin not able to edit his profile.
1,"Yes, the team was very organised and worked consistently on the project pushing code day by day from the moment they started delivering small chunks of functionalities."
1,"Their code is somehow clean. But there are some functions such as the fuction which deals with borrowing, it handles the whole progress. It would be better that it is divided to some small functions."
1,"The team did not implement the extra credit functionalities.Also, very basic test cases can be found for controllers. Models are not tested but the files are created.Some of the test case scenarios can be the following after testing the UI:
- Login functionality for different users.
-Forgot password functionality and reset instructions to mail.
- After clicking on cancel account, try logging in.
-search functionality without entering any filter criteria.
-redirection to home/ back button testing in various scenarios.
-admin approval of librarian account"
1,"The functionalities in the UI are designed very well. The readme file gives the clear understanding of what to expect and what is yet to come. Pretty clear.
Some observations regarding the UI are:
-The moment the link is opened, the user is restricted to login until then no functionality is shown. Instead, a good UI page welcoming the user can be designed and give a user basic understanding of what the website is and what to expect would always give a good look and feel and this will be useful for general users who just want to surf the site.
-After signing up, displaying a good dashboard showing different options the users can make use of will be really nice. Restricting the user to definitely edit profile is like leaving no choice to the user.
-If the user by mistakenly clicks on edit profile and wants to go back, there is no home button. He has to click on save profile which is when he is taken back to dashboard. Having a home button there or cancel update button would be nice. The cancel account button is quite confusing whether it is cancel update/delete account which can be improved.
-If we click on cancel account, we are still able to login and after logging in no options are displayed. Not sure what is happening.
Overall the functionalities are easy to understand and working fine but UI can be more user captivating and user friendly."
1,"A lot of controllers defined and are highly decoupled. I think those controllers, models which can be merged should be merged and the functionality can be given through using policy gems, etc."
0,"-Comments in the files can be included for developer understanding.
-appropriate naming of file. For example, there is a file called static_pages_controller and going in we can see functionality of pending approval lists for admin.
- We follow DRY (Don't repeat yourself approach). In the registration controller.rb, we can see redundancy in sign_up_params. If appropriate, can be corrected.
-We can follow the SOLID principles while adding methods in the controllers, by taking care that one method does only one function - single responsibility principle.
-Also, keeping more logic in controllers instead of views.
Since, most of the code is scaffold-ed, it is perfectly according to the standard."
1,Github repositories seem to be updated regularly by multiple users throughout the project period.
1,"There are quite a few commits and the commit messages also signify what feature/bug fix is being pushed. However, peer review and pull requests were not used in the team. There are no pull requests created in the Github project, which can be improved moving along. One good thing that I found was the use of Github Project in the repository, however, not extensively used but still is a positive aspect."
1,"The User Interface has been beautified with HTML and CSS and is very intuitive, showing all the fields correctly in place where it is supposed to be. The home page button is available to easily navigate, also the services available to the student is shown clearly."
1,"Yes, most of the things are done. Some of the functionalities I was not able to find out where they are displayed in the front-end."
0,yes the design is simple and clear.
1,"The code is well maintained and the business logic is kept separate from the Views and Models. This brings the good practice implementation in the code. The code has been well intended. However, more comments could have been put in place to make the code more easily readable to other users."
1,"1. No, The Student model has all functionalities to be yet developed.
No Checkout, return, hold functionality added. The link only shows the list of books. The student can permanently destroy a book from the libratry(This needs to be fixed). No functionality for calculating overdue fines.
2. Librarian Model is almost complete but as end to end flow from student to a database update is not complete. We cannot fully test if a book is actually added in the hold list. The databases are populated in different views, but that is not sufficient to guarantee a particular function works as no end to end implementation. No functionality to view overdue fines of a particular student."
0,"1) The design is simple and easy to follow
2) The explanation is elegant enough and comprehensive"
0,No Third party signup
1,They start to push and commit 7 days ago. there are two weeks between they did no work on the hw.
1,No self test. Only auto generated tests written.
1,The applicatoin is deployed on Heroku. The user interface is easy to understand and use.
1,"The outlook is good. Very neat framework, coded front-end layout. Clear buttons for linking to main pages and function pages."
1,"Although the user interface is intuitive, it is difficult to navigate and view as there is no border or margin spacing and it sticks to the left o0f the screen. I suggest to add some CSS and improve the UI by adding margins and padding appropriately."
0,"Files, to be changed, are added."
0,"i can not login using their pre-config admin username and password, so cannot create librarian role and test profile changing function."
0,Yes they plan to make adequate changes in the system
1,The user experience is self-guided and easy to use.
1,"It is well defined where to implement the next operation. The UI looks clean. sign_out button is displayed on every page, which is kind of convenient for the whole test process."
0,- The changes are listed out very well. They know exactly what files need to be worked on which is definitely a good thing.
0,"Yes, you can see it from git commit."
0,Their stusent model is doing good.
1,"I believe you guys did a good job, so please provide the link to github next time."
1,"Yes, however I think the anticipated code changes are too broad and should have been further narrowed down."
0,good interface.
1,"many functionalities are missing.
student is able to add new books, which means that testing is not done properly."
1,The code on Git looks clear and well organized. And also the coding standards are well followed.
0,Good interface.
0,"Yes. Overall, the doc is comprehensive."
0,good coding practices followed.
1,"Yes, all functions are easy to find, except some function have not finished.
Besides, I think the function of add new books seems strange, as I can only add counts. I cannot add a new book for the library I want as an admin. That seems a small bug."
0,This team tested several controller thoroughly but not any model. They can polish their test afterwards.
1,"Yes, the user interface is easy to use. And I can find some the instructions from the README as well. However, there may be some function they have not done, so I cannot find the entrance. I think they can point the functions they haven't finished in the README as well."
1,"I cannot find how to create students and librarian accounts as an admin. There is no such link on admin's dashboard. I cannot find any instruction in README as well. I cannot see the borrowing history of a book as an admin or as a librarian. I cannot see the students who have overdue books as well. And the function of viewing checked out books and books in hold request is missing.
I cannot borrow books as I want, as I cannot find the book I just add as an admin."
0,"1. The team did push their changes but mostly during the latter part of the project period. They could have started a little earlier.
2. Most of the changes appear to be within a week from the deadline. But I can surely see continuous commits since then."
1,"1. None of the extra credit features were implemented. A student can create book by changing the URL. (HINT: Try exploring the ""before_action""  filters for implementing this.)
2. Thorough testing is not provided. Most of the code was the default that one gets using ""Devise"" etc.
3. The signup integration with LinkedIn, Facebook etc. can be done using Rails OmniAuth. The team can try exploring that."
1,"The user interface looks intuitive enough however I did find some things can be fixed.
1) Some of the pages, I couldn't find a back button. For example: When you click on show books for an individual book, I couldn't find an option to go back. I could always use the browser back button, but this won't be consistent with the application overall.
2) The search functionality could be merged with the books view instead of having a separate module for it.
3) Also, the search functionality seems to be broken. I kept getting ""something went wrong"" error message."
1,"Overall the code looked good. 
1) The indentations were properly made.
2) Instead of ""for"", the team has mostly used ""each"" which is more readable and better practice.
3) Redundancy has been mostly avoided.
4) The team has followed the ""Fat models, skinny controllers"" guidelines."
0,"Yes, the design incorporates all the functionalities mentioned in the document"
0,The design by the team appears to have been carefully thought out. The functionality isn't so complex and wholesome that they might require a Ruby gem.
0,The screenshots and diagrams in the document are instructive.
0,"Yes, their design document have incorporated all of the functionality required."
0,Very complete and wholesome document.
1,"In the Use case section of the wiki, more specifics would've definitely helped in understanding the big picture. The current diagram does give a brief high-level design but things like the self-review has to be done before the user can view the other work, and the formula being used to calculate the overall grades could have been mentioned, to help the user understand the overall flow much much better.
As for the code-changes flow, more specifics in regards to what happens on the arrow when traversing from one method to another, would've helped in understanding the overall idea, and the technical changes proposed."
1,"Yes, the wiki does cover all aspects of the design that is to be changed, and includes all the functionalities that are to be achieved. One of the requirements was also to avoid the use of global variables in the code, and I feel that the new instances or instance variables that will be introduced can also be mentioned in the document. This would definitely showcase how that specific requirement is also being fulfilled. Maybe this could be incorporated in the ""Code changes flow"", wherein, instead of just arrows pointing to the data flow, it can also show the variables being introduced."
1,"More details on the UI would've been nice. By this I mean, more insights as to how exactly would the design be achieved from a user's stand point? Would the others work be disabled or not shown to the student, until the self review is completed? If so, then how is this going to be achieved on the UI? A wire frame for the same, with more technical implementation changes would've helped in understanding the end to end picture of what exactly is going through the authors mind, when designing the project. 
But otherwise, on a high level, the overall picture seems to be clear from my point of view."
1,"As I have mentioned above, the changes can be made in test plan and they can add the files they are planning to change or any file they will add."
0,"They have a code changes flow that shows the files they plan to modify and the relationship between those files. The diagram is clear and helpful to understand the project. 
And the use case diagram shows how self-reviewing is created and performed."
0,They have a code changes flow diagram to show how they plan to change the code and what files will be modified. I think they found the right files and right class to change or add code.
0,The design incorporates all of the functionality required in the given document. The functionality required includes three main points that are all described in their design document.
0,"The design document is complete. It includes the problem description, their plan of work, some visual aids helps better understand the project, test plan, and their plan of the formula."
1,"Their introduction of requirement and the method to accomplish function is great. But their test plan is synoptic. I think they should add more detail. For example, they could list the test cases."
1,"Code changes flow is a little hard to understand at first. I would suggest to put some explanation on how and what should be changed in the code file. Also, how they propose to change the files is not mentioned."
0,Yes They have incorporated all the changes.
0,Diagrams are good and quite easy to understand.
0,No new code was committed.
0,No new tests were added in this round.
0,Looks like no new commits.
0,"- No new test cases added
- Refactoring project"
1,"The write-up details all important aspects of the project. however, there are certain problems with structuring.
The only changes made are new automated Rspec testing and references. The automated Rspec testing is also trivial as being a refactoring project they don't need to add any.
There are a lot of unnecessary images showing the code being execute, travis build, etc.
The Code and flowchart both are flowing out of screen. Also I would suggest rearranging the refactoring changes into categories of similar problems:for instance abc complexity.
The authors have also included certain unnecessary sections like the Travis-Ci build testing which is redundant. The screenshots for Rubocop testing can be aligned in a better way to include side by side sections for code and results"
1,"While there is no link for testing from user interface, pulling their github repo and rebuilding the expertiza into vcl I was able to test the functionality. I would suggest the authors to setup a VCL instance. 
Also in the video all rubocop tests are passing."
1,"Yes the code has been commented as suggested in review one.
New methods for logic has been created instead of having one long method.
get_awarded_review_score: The new variable TeamID is confusing with another variable team_id. I would suggest using some other variable name. In case the var name is localized, include a comment to differentiate. 
There is a new concern about variable name num_rounds in review_mapping_helper. I would suggest num_review_rounds. However, this issue was not present in review 1."
1,The code looks ready to be deployed. Some more testcases would be really good.
1,Test cases are added. But coverage seems to be falling due to new helpers not being tested (app/helpers/review_mapping_helper.rb)
1,"Though I still disagree with the obtain_team_color and get_team_color naming, I couldn't find any other issues in the code."
1,"The test plan shows more results than implementation ad design of the tests, should include them before showing the results. It mentions that changes were made to the existing RSpec tests but doesn't mention any examples of such test cases and I see only one file changed in the repository so how and where are the test cases changed."
1,Writeup is good. Doesn't provide test case details only displays results upon running them though.
1,"The test plan is not very detailed, but given that it is a refactor feature, it is good enough."
0,"The quality of the explaining issue is good.
The explanations are concise and clear to the point.
Also the method of explaining new formula in Doc is quite good."
1,1) The flow of their approach to solve issue is clearly explained but  the testing Plan and how what are the final result that will be outcome of this changes should be explained in more detailed way.
0,- There are comments indicating the function the method is performing
1,"- The writeup explains most of the details
- The document doesn't explain why particular approach was taken; only how the refactoring was done"
0,Test cases have been passed.
0,"Comments like this - # checks the submission state within each round and assigns team colour, properly explains what needs to be done."
1,"The code refactoring of certain methods like get_review_team() does not include comments detailing the functionality. Suggest commenting the code
get_awarded_review_score: The new variable TeamID is confusing with another variable team_id. I would suggest using some other variable name. In case the var name is localized, include a comment to differentiate."
1,"The code refactoring of certain methods like get_review_team() does not include comments detailing the functionality. Suggest commenting the code
Also suggest add a line of comment for new variables created and their functionality."
1,"The team has done a good job of documenting the proposed changes along with the reasoning behind the proposed changes.The code embedded using pre tag in the expertiza wiki runs over the page and is not  visible. I would also suggest setting the flowchart image to center of the page. I would suggest to combine the refactoring changes for same reason eg: Abc complexity, into one group as this would simplify the reviewing process even more."
1,"The write-up details all important aspects of the project. however, there are certain problems with structuring. The Code and flowchart both are flowing out of screen. Also I would suggest rearranging the refactoring changes into categories of similar problems:for instance abc complexity. The authors have also included certain unnecessary sections like the Travis-Ci build testing which is redundant. The screenshots for Rubocop testing can be aligned in a better way to include side by side sections for code and results"
0,Team presented documentation with proper diagrams.
1,"The writeup explains all the methods that the authors refactored. There is a seperate section for showing the comments. They have mainly refactored using .dig() function and by creating sub functions. They have written the abc size complexities and the cognitive size complexities before refactoring, after refactoring, it is not mentioned."
0,Problem explanation is given for the problem and proposed solution. Various diagrams and flow chart makes it easy to understand the problem.
0,"Yes they have considered all the functionalities mentioned in the problem statement and came up with justifying solution to this problem,"
0,Documentation looks good to me.
0,The diagrams are good and follow the conventions.
1,"All of the system design things are explained in the flowcharts and uml diagrams. But, more textual description to describe would be better for the reader."
1,Yes it is explained well. The documentation is pretty thorough. There were some unnecessary images which caused the doc to bloat up.
1,"Authors could have included a gist of formula proposed so that reader has the option to choose between reading the entire document, currently readers have to read the document to understand what's going on."
1,"I see comments for new code which was added, maybe they could be more descriptive but they describe the functionality well enough."
1,"In my opinion, get_team_color and obtain_team_color mean almost the same thing, so maybe obtain_team_color could be better named to reflect its functionality, or maybe rename both. Other than this issue, the code seems good."
1,"The design document includes a very detailed Test Plan which has multiple scenarios listed that will the test the flow of the changes to be made.
For each scenario, the team has included indexed steps of the flow that will effectively test the given scenario.
The team has included 2 scenarios for Students and 2 for Power Users (TA/Instructor/Admin/Super Admin)."
1,"Great! another team which specifically mentioned what design pattern they are going to use! While comparing to the previous they did not mention which specific file (object/class) they're referring to, but I'll give them a pass"
1,the previous solution utilised delegation pattern on top of which the current team will be making changes to.
1,"The proposed changes look good.
The changes right now do not look smelly. Though the code to improve upon last sem's code would be worked upon while the project is ongoing and it will be checked later on.
The checks look sound enough. No need for new gems, I think.
The expectation is that since they are improving on last sem's code, the response time will same or less.
The design has been well thought out and seems appropriate enough."
1,"There are UML diagrams used to explain the scenario and also there have been explanations provided accordingly.But,there could have been methods mentioned as to implement certain functionalities"
1,"The coverage decreased. Yes the team added test cases in the rspec file, and the test cases do cover the entire range of this project."
1,Code commenting is missing. But the code is written cleanly making it readable.
0,"Coding is really clean and good refactoring. Coding standards have been followed. Some code commenting is needed.
Build seems to be failing due to some code not implemented yet. Test coverage seems to reduce, so some new testcases need to be written for the parts that are working."
1,There is no explicit test plan section. But the write up has good details about how to test the functionality they implemented. Some screenshots would make it perfect.
1,1) Refactoring need to be done in average_grade function.
1,"Add comments in method average_based_on_rubric.
Though it is self explanatory(the process), but still adding comments is good practise"
1,"In the form for adding bookmarks, when user enters invalid url then it flashes notice then it is invalid.
Functionality is fine but instead after invalid form message user should be provided original form to edit the url which is not shown here.
It will me much more intutive."
1,No. test cases for issue related to bookmark page back-link.
1,"The writeup well explained issue, solution and how one can check/verify the solution with steps.
But it does not include the screenshot and test section.
Also, discuss the way you come up to the  solution."
1,"Th design appears simple as the requirement is broken into pieces and resolved,but the design could haven been explained using UML diagrams or flow charts for better understanding"
1,"No UML diagrams are used to describe the flow. However, UI screenshots are relevant and helpful."
1,"It includes UI based testing which is shallow testing, but test plans for specs should have been added."
1,"as it is UI improvement project, there might not be any rspec test. but yes they can write some capybara test cases to test what they have modified."
1,The documentation does not include a UML flow diagram to describe a project flow.
0,The authors have explained it reasonably well.
1,"The test plan includes the steps to test the application flow. 
Nothing was mentioned about the tests the team will be writing to cover the bugs they are going to solve.
May be some of the tests can include:
- checking whether the anonymized names are getting generated or not.
-Placement of checkbox or the space adjustment for different features etc.
 
-"
1,"The team included the snapshots of the issues that are expected to be solved.
Apart from these there are no visual aids for the reviewers to understand the classes/ entities involved or the flow diagram.
May be a few of them can be included if felt appropriate by the team."
1,"The motive of the team is pretty clear about what needs to be fixed and is clearly mentioned in the wiki page.
But there is not much discussion in code point of view on the wiki page so not able to comment on the design patterns/principles that the team is anticipating to follow.
May be the code snippets of the issues where the team expects to make changes will give an idea about the work that the team will do and will be easy to give suggestions.
And since, the project is all about bug fixing, there can't be much design patterns involved as the team will fix the bugs on the existing code."
1,"The team listed the files that will be modified.
Also, mentioned in few places the code variables which will be corrected.
Apart from these nothing much was discussed.
May be a few code snippets of the areas where the anticipated changes might take place will give more clarity for the reviewers since the project exclusively deals with only issues and not new enhancements."
1,"no URL image included, just text description"
0,"yes, text with an image is good"
1,The test plan is basically program flow. Although a few more edge cases could have been included.
1,"It would have been even better if the test plan can be explained as a flowchart, it would be easy to understand and comprehend"
0,"Yeah, Explanation was clearly given for whatever stated."
1,Test plan cab be improved. Right now test plan is very abstract and does not indicate the components of code which are going to be impacted by the proposed code change
1,No use of class diagram and UML diagrams. It will improve the readability of document and will help to understand the flow of proposed work in better way.
0,The changes are clearly.
0,Yes it includes.
1,"Yes, it includes a test plan. But they have just mentioned the steps needed to test the plan. They could focus on the corner cases which may not be discovered easily and test the system on that. Explanation on these should have been provided."
1,Yes. The design can be understood easily. The explanation provided for their approach is clearly expressed. They seem to have a clear idea of what they have to do with the project.
1,"Yes, they have explained their approach neatly. In addition to that, they have added the table to further illustrate the design. They have studied the code base and have suggested relevant changes in the appropriate files."
1,"Yes, the changes are well explained. They have used screenshots and tables to juxtapose the given problem and how their solution solves it."
1,"Yes, their test plans are included. But only some step by manually to check whether their function works.
I think they should also include their Rspec test cases.
They can also list some screenshoot for their manually testing expected output."
1,"Yes, their design document includes appropriate principles and using appropriate patters."
1,"Yes, they have explained a lot about their changes. 
But I think they can perform better if they include more details about how they will change the related controller and view.
They can include more details about their test plan as well. Which has already mentioned in the test plan review answer."
1,They did not make use of UML diagram but they did make use of mock view of their implementation which looks easy to understand.
0,Design appears to be appropriate.
1,"Yes, it describes the complete functionalities along with which files need to be modified and a brief description of their implementation strategy."
1,Changes proposed by the authors are good but not descriptive enough for every one to understand the proposed changes thoroughly. they did said which files they are going to update but did not said why that file and that method in particular.
1,"overall, proposed approach looks practical from my point of view. I can not find any specific pitfalls in given approach. But yes they are trying to fix the column length which I believe can be made dynamic based on the content present in that column."
0,I believe from the problem statement that they are covering almost every aspects of the requirement.
0,The explanation was not very clear
0,Issue-based design strategy was not explicitly given
1,"UML Diagrams have not been used to explain the issue, however snapshots of the issues have been attached in the document."
0,The authors have described both the issues assigned and the proposed solution in detail along with the design document.
0,The design document incorporates all of the functionality required.
1,The authors should have included UML diagrams to explain the flow.
1,"no URL images, which make me hard to understand. so I need to read all the text dexcription for a long time to fully understand what they try to do with these issues."
0,"almost good, but lack of design pattern and image description (like URL)"
0,Test Plan is also clear.
1,More pictorial representations can be used to present information properly. Please add more flow charts and UML diagrams.
0,Document looks good to me.
0,It is drawn in good quality! good job
0,I think the author had made a good plan of it.
0,It is in good explaination.
0,They have completed all the parts in design doc.
1,No high-level diagrams used. Though the text is intuitive it would have been better if they could have added some basic UML diagram like a use case or activity diagram
0,"They are adding changes to the relevant files. Also, they are doing some refactoring as well by removing the duplicate header lines. The design looks simple to implement and easy to understand."
1,They have suggested good changes to improve the user experience and effective utilization of the web page space. While the first three points in the description seem easy to understand the last one seems a bit insignificant. They could have provided more explanation on it.
1,"Yes. They have given good screenshots of the current situation of the page and how they can improve it. Also, they provided a four-point implementation plan for the functionalities. The last point ""Get rid of Review Round 1"" is a bit unclear. They could probably shed more light on it. I think the existing one looks better."
1,Only UML diagrams are missing. The rest of everything is covered.
1,They only use some mockups of screen. But I think as their task is up to 10. Table may be necessary for them list all tasks and solutions clearly.
1,"They gave out several solutions for a task, and said that they will see which is better. I think they should give more effort to compare the results after they finish the whole document.
And in the summary page, the design strategy part, there is a typo ""conmment"". They may mean ""comment""."
1,"Yes, they analyze five tasks for main page and five tasks for summary page. They also listed design strategy for all the tasks."
1,"The project purpose, project design and test plan are all stated. But I think their test plan should include more details about Rspec test.
Beside, they combine the project statement and project design together. If they splits them up, it will be more clear."
1,The code is written nicely. Standard naming convention and Ruby style guidelines are followed. It would have made the code much more readable.
1,"Yes, a lot of changes have been made during round 2. Almost 40-50 commits have been done during round 2. Looks like a lot of efforts have been given."
1,The build passed the Travis CI. All checks have passed and there are no conflicts.
1,"Yes the team has added test cases. But, there is a small improvement which can be done in the test cases. The test cases written in the file ""assignment_participant_spec.rb"" are too long. Instead the team could have divided the test cases into smaller parts and to test each small functionality individually."
1,"Yes, the system works perfectly when tested from the UI. I appreciate the how to test section in the documentation which helped me a lot to easily test the functionality. I got an email when I added myself as a participant from CSV file."
1,"The writeup is very good and explains almost everything which is required to understand the project and the work done. The ""How to test"" section was very helpful for testing at my end. But I have found one problem and I would like to make a suggestion for that. In the ""Solution and code changes"" section, rather then quickly going to explain the code changes, it would have been better if the team had explained a bit more about their approach. It might have helped in understanding the code easily too."
1,"Yes, the code looks like ready to be deployed when merged. The checks are passing and functionalities are also working properly when tested from front end and rspec."
1,"Yes, I think the code is ready to be deployed onto the production server. No the project need not to be done from scratch."
1,"The team has done good job with the write up. However, write-up needs to be formatted a bit."
1,Yes the feature seems to be working as per the description.
1,Yes the team has added one test case and updated the other. The new test case cover pretty much for the work team did
1,Yes the build pass in Travis CI. No there were no conflict that must be resolved.
1,Yes I can see new commits . The team have updated test cases in 2nd round
1,The team has come updated the code and implemented the feedback provide in the 1st round.
1,"Yes, the code is ready to be deployed onto the production server, the code also contains comments which explain the flow really well."
1,The writeup is really good and each step to be followed while reviewing explains well. The writeup could have explained a little bit more on the test cases as what test cases are doing exactly.
1,Yes the system operation from the UI works as expected. The project does not require any refactor or fixing. The issue is fixed and the features work as intended.
1,I checked the pull request and the Travis CI build passes. There were no conflicts for the pull request.
1,"Yes, there was a new code committed during the 2nd review."
1,The code is written well which follows good naming and does not contain complicated functions. The code looks dry and also contains comments.
1,I think the code can bed deployed on the server after adding some tests cases for csv upload and mail check functionality.
1,"The write is pretty verbose and clearly states the reason behind the project, and the test plan."
1,Yes the system works as it is supposed to work.
1,The test cases cover the functionality.
1,The pull request passed successfully. And there are no conflicts
1,They have added new comments. There are no coding guidelines violation.
1,There is significant amount of work which has been done in round 2. I can see many commits for round 2.
1,Build passed and there aren't any conflicts.
1,Test cases have been added. Coverage decreased but as far as i know coverage is not accurate always.
1,Yes it works as intended. Team has given all the necessary steps to test in the test plan and it really helped.
1,One of best writeup among all the reviews. They have covered all the necessary details in the wiki doc.
1,Absolutely. This code looks good and can be deployed. All the test cases were passed in the build so it can be deployed.
1,I think it might be ok to be deployed.
1,yes it worked
1,yes they passed it
1,"Yes, I think some part of their code is ready to be deployed onto the production server."
1,I checked their wiki page. The writeup is good.
1,"Yes, everything works."
1,"In the first round, there were only manually tests. But this time they added rspec test and passed the build."
1,Their build passed the Travis CI.
1,There are many commits after the 1st round. I see they were trying to pass the build in Travis CI. And they did. Great work.
1,I got an email when I tested by adding a participant to an assignment
1,No design pattern used but code is readable.
1,The task seemed to be complicated but apparently a simple if statement resolved the issue. The identification of the root cause of the problem is praiseworthy.
1,"As such, the team did not have to change or add a lot of code. Code which is added is fine and readable. Variable names are also good and understandable. But, I would like to give a small suggestion. In file ""app/models/assignment_participant.rb"" on line no 203, the variable name is ""attributes"" which should have been more descriptive name (like ""student_attributes""). Maybe ""student_attributes"" can be wrong, but I couldn't understand what attributes they are by looking at the code."
1,"1. No method is too long. Actually, no method is added by authors.
2. Maybe the functionality of the if condition in file ""app/models/assignment_participant.rb"" on line no. 201 can be shifted to another function.
3. Code is good in terms of readablity.
4. The code follows ruby style guide and looks DRY."
1,"I tested by adding a participant to an Assignment. Then I got the email in the entered email address. So, the functionality seems to be working."
1,"The team did not have any method to implement. The if condition which they have added, doesn't require comment as it is intuitive by reading."
1,They have not used any design pattern but the code written is readable and understandable. It explains what authors did and why they did. The code was not hard to follow.
1,"Yes, the ""Brief Introduction"" and ""Problem Statement"" sections are well written and they explain what problems authors have tried to solve. I could understand the scenario in which students were not getting e-mails.
They have also mentioned what is the outcome of their work (i.e. e-mails are now getting sent upon account creation using anyway)"
1,"I didn't find any comments for the changes made. Also, I feel that since the changes were made in between the functions and were already explanatory, comments may not be needed."
1,"1. Function length is good
2. No, the code need not to be extracted in separate methods
3. No
4. The code does follow Ruby Guidelines
4. No"
1,"The authors have not included about any Unit test, functional test or automated test in the plan. However I believe that the user will include those in next round."
1,The feature does work as expected. The email seems to be working when user is being created both from list and by adding them as participants to an assignment.
1,"I couldn't find any test plan. Moreover, I was able to see that some test failed on pull request."
1,The team has explained pretty well on what the functionality is. I didn't find any reference on wiki about the design pattern used. The functionality and wiki is self expalanatory.
1,"Write up is good. But I feel that there are lot of unnecessary screenshots in the write up. Instead of it, if it would have have Change Flow graph, it could be better. Like wise, author'c could paste the code and explain in the wiki.
Moreover I cannot see Author's name in the wiki"
1,No tests added. I think adding automated tests will help test the feature better. It gives an idea of what test cases we have to implement.
1,The code added by them is very small. The code has been written well and it follows the ruby style guide. Adding comments for the lines will improve the readability.
1,The naming of the variables and classes looks good. The pull request failed the Travis build. I cannot see any additional tests written.
1,There are no comments for the code. The code looks easy to understand but having the comments gives more clarity as you have added a few lines. Each line can have a short comment which gives more clarity.
1,"The writeup explains the problem clearly but they could have explained a little bit about the present implementation and they could have explained their intentions more clearly. Yes, I can understand what the project does."
1,"They have mentioned steps to test the feature. The steps give good clarity but the link provided for testing the feature does not respond. They did not cover all the cases, what if the CSV file has an invalid email id. Does it import the CSV or it gives an error."
1,The method are pretty descriptive themselves. Being modular they are easy to understand. I think that they could have added a comment or two for assignment_participant import functions
1,No functions are of correct size and they have followed dry principle.
1,No new test case have been written. Could have aded a test case for csv upload and mocked mail behaviour or added mail check in existing test scenarios.
1,Yes the authors have considered different edge cases and conditions. They have include null checks in the code.
1,The wiki page page clearly explains the background and what needs to be done. They have added screenshots that clearly shows the new functionality.
1,The wiki page is pretty explanatory with images to shows details.
1,"Bug is fixed and it's working. I couldn't think of any edge case here, so looks good. 
Automated test cases is also one of the requirement for the project and no work has been done upon it. Please write automated test cases for this."
1,"I've tested the code as given in the wiki page for assignment - Final project (and design doc), and faced the issue below: 
The following errors were encountered during import.Other records may have been added. A second submission will not duplicate these records.

Mysql2::Error: Incorrect string value: '\xEF\xBB\xBFRam' for column 'handle' at row 1: INSERT INTO `participants` (`type`, `user_id`, `parent_id`, `handle`) VALUES ('AssignmentParticipant', 7625, 834, 'Ram')

I did receive an email, but don't see the participant in the list of participants, as expected."
1,"Though what exactly has to be tested has been clearly shown with screenshots, the RSpec file that is used to run the automated tests is not present in the document. Maybe adding that will help in running these test cases to check for consistency in the code, and also coverage?"
1,"1. The functions/methods don't seem to be long
2. The code is clean, and I believe doesn't need to be extracted into separate methods
3. Instead of commenting existing code, maybe delete that code and mention the changes in the document? That will help in keeping a track of changes rather than adding commented code per se into the file. 
4. The code follows Ruby Style Guide and is DRY."
1,"Comments are missing, and I believe would help in understanding what each method call is doing and why existing code has been changed."
1,"The naming convention seems to be alright, as whatever has been refactored has been done with existing code, thus making the author not liable for names being used."
1,"Though a Test Plan section is not present, the manner in which the project has to be explained is clearly written with screenshots. Pre conditions, such as the csv file and sample data is also being shown, which helps in testing. The only issue is the RSpec file used for testing the application is missing in the document, which would've helped. Also, mentions such as what happens when anything other than an email is passed, and what is the exception handling being used could've been mentioned as well."
1,"The author clearly shows screenshots of the code changes after pull, showing the code has from what it previously was. The problem is also explained briefly before digging into code changes. But a more descriptive explanation of why such changes had been done to those specific files would've helped in the reviewer understanding the code, and the approach taken to solve the issue. Like for instance, why a line has been commented out in the mailer.rb and not removed completely? So, in the writeup instead of just mentioning file changed: <<file name>> , more description in regards to the same would've been nice."
1,"The scope of the project is understood from the document, and how to test it on a high level is also clearly shown with screenshots. My only issue is the specifics. Code changes and why code has been changed the way it has, can be more explicitly shown, which will help later down the line, when the code is merged into production. Also, maybe explain on the line you have mentioned in the document below: 
""Issues were found in some parts of code as highlighted by the snippets shown below""
What issues were found and how were they fixed? That would definitely make the document more specific to the issue being solved."
1,"1. There is no comments for each method.
2. They do not explain clearly what the method does."
1,"1. The write up is less than passable.
2. Less than half of code changes are explained
3. Very little explanation is given for the approach they used."
1,"1. They do not have test plan.
2. They do not consider different pre-conditions, edge cases, invalid input values, and other possibilities."
1,"1. There is no test plan in their writeup.
2. They do not explain how and why the do the work the way they did.
3. They do not have a video to show their test."
1,"1. The writeup indicate the functionality the work is related to.
2. I cannot understant clearly how they did the work."
1,"No comment here. Eventhough the code is clearly, but I think it will be better if they write some comment here. Well done !"
1,The naming is good :)
1,I can not see the test plan here. But the screenshoots seem pretty good.
1,Yes they have written the wiki correctly and so detailed.
1,The write up is clearly enough
1,"Before methods, they have comments."
1,"Yes, they explained the work they did on their wiki page. They provided a log of screenshots. More comments and explanations would be great."
1,The code is readable and well-commented. No DRY problems were found.
1,The code passes all Travis build test and there are no conflicts with the base branch. Lots of commits were done to pass the build test. May be could have been achieved in less no of commits.
1,Many new test cases were added. Some old ones were also modified. Don't know why there is a blank line in spec/models/user_spec.rb line 35 and in config/routes.rb in line 6. It can probably be removed. The coverage was found to be decreased by 2.6%
1,I got the email for account creation and csv upload worked perfectly well.
1,The writeup is very well written. It was very easy to understand because of screencast video and how to test the changes section
1,It work wonderfully. Good job!
1,"No test code. Also, the failed the ""Participant#email sends an email to the participant"" test case"
0,Detailed test plan included
0,"Document contains the relevant diagrams such as flow chart, execution flow, etc. to clearly describe the intended change"
0,The proposed design is to-the-point and accurate.
0,Document contains the appropriate software principles and patterns.
0,The changes are appropraitely descibed and mentioned in the document.
1,"Yes the team has added test cases with different edge cases. Just one thing, the team could also explore the automated testing using any of the web browser testing tools like selenium."
0,They have added the flow diagram for different functionalities/cases.
0,They have used the existing function/made to changed to the existing one which will help to dry code.
0,"Yes, test plans are thoroughly"
1,"The flow charts explain the solution pretty well, however, there is no UML or class diagrams that describe how the classes work together"
0,The design appears very simple and clear in flow charts
0,"The team listed the proposed solution and the files that likely to be changed, which is good"
0,"Yes, the design is complete and sound."
0,Visualisation is clear and easy to understand.
0,"Yes, the test plan is clear to understand."
0,The document presents the design in a way that makes things really clear to the reader.
0,No problems with the design.
0,Every change proposed has an explanation to support it.
0,Yes the design is simple and easy to read
1,The design is well documented and consist all the section with well description
0,yes the do
0,Yes the figures are clearly described.
0,It appear to be simple and easy to understand.
0,It is sound and appropriate.
0,The authors adequately explained the changes
1,"The test plan seems comprehensive. However, the authors have mentioned edge cases at 3 places viz Anonymised view for students, Impersonating students using anonymised names and anonymizing team names which shows that those functionalities will be thoroughly tested for functionalities."
1,The design is crafted using object oriented programming paradigms. The design would have been better had the authors described the design patterns that they are planning to use .
1,"The design seems well thought-out, but still vague in some areas. While they talk about where they plan on implementing changes code-wise, they don't refer to it file-wise."
1,"I think the explanations are good, barring the one thing I mentioned in additional comments (which is not even necessary so it's fine)."
1,The team gives detailed steps on UI test. They also need to get the Rspec included.
0,"Yes, it is well designed"
0,The design appear to be as simple as possible. There is nothing in their document that is unrelated to the project.
1,"They can write more details about the ""Wrong Anonymized Names"" section. They can list which files to be modified and what method they plan to add."
0,"1) The design is simple and clear
2) It is easy for reader to follow
3) Diagrams also elegant enough"
1,"1) The design appears to be sound
2) They do follow appropriate principles
3) No pattern was adopted"
0,They have added flow diagrams to explain the flow.
0,The methods given in the wiki looks fine.
1,The write is pretty good. My only suggestion is to remove the code and add more description in its place.
1,"They have added the necessary details. Just one thing, more details about the anonymised view functions can be added."
1,The existing flow charts are very easy to understand. It would be better if the team can include a UML diagram explaining the whole structure of the files that this project associated with
1,"Everything is pretty completed except for the User flowchart and design part, the flowcharts are stated in above sections so its good, so the team should do a UML diagram to explain the whole structure for easy understanding"
0,All the necessary visual aids are present.
0,"1. Yes.
2. No.
3. No
4. No.
5. No"
0,The explanation is not hard to follow.
0,The design is complete.
0,"The flow chart added in the wiki, which look concise and simple, and excatly tells the reader about their design strategy."
0,They give the solution of the each issue and they all make sence. The solution they make is just precisly fixing the problem.
0,"The design doc is quite comprehensive, since it's include the design strategy, test plan, user cases and etc."
0,There are visual flowchart representing the flow of the problem
0,The design document is well made and include everything
0,No problems. It's all done.
0,It is written in gooe explaination
0,Yes it incorporate all the parts.
0,Well done . It's in good completion.
1,"The authors have incorporated all the functionality that have been mentioned as a part of design document . The descriptions in the problem statement are crisp, however, these descriptions can further be improved to include the importance of the functionality to the users and the potential effects or in conveniences faced.Eg in Anonymised team name section, the authors can mention about the reason why anonymizing is required and how it not implementing it can breach privacy."
0,It seems to intend to implement complete functionality.
1,"The visual aids are good. From my personal perspective, the second graph are not necessary."
0,"The Wrong Anonymous View solution is not specific enough. The Anonymizing Team Name solution are not adequate enough, it is a little bit too hard to understand the solution."
1,"Test plan are not complete. Besides, it will be better if they can imply the files need to be changed."
1,"(1) They added methods to correct classes.
(2) I don't think the new design may potentially make the code ""smelly"".
(3) The new design is simple enough.
(4)I don't think the new design will add load to the system.
(5)Their design is good enough."
1,"1) All diagrams do help reader understand how their proposed implementation works
2) They even considered fetch ip from redis to achieve their idea, cool
3) Anonymized Team Names should also have a diagram"
1,"1) Overall is very good, each part has been explained in details
2) It would be better to have a diagram for the whole solution
3) Anonymizing Team Names could have more explaination"
1,"1) The design covers all the functionality required in the document
2) Each problem is explained in simple and elegant words which are easy to understand"
1,"1) All requirements are covered and explained with details
2) Test plan is also covered, but would be better if they could propose plan to add RSpec tests
3) There should be a design pattern to help implementation"
1,It mentions they will have automated tests but don't say how. I'm curious how they plan on automating testing for checking if a user spent more than 3 minutes looking at something.
1,"The test plan says, they need to add test cases to the previous code{Too vague}
Test to verify information is correctly displayed to user{info taken from database and displayed. you don't test rails}
To check if onFocus/onblur is working/popup is working --> Might not be possible to automate"
1,"The design does include a test plan. But it lists the scenarios or cases for which the tests will have to be implemented. They could at least specify the rpsec files which their codes would be affecting as they have identified the controllers which they would be modifying.  
For example; they said they would be modifying the response_controller.rb and the response_times_controller.rb. Hence any modification in these files would require handling of the corresponding/new test cases for the functions in it. Like the response_controller_spec.rb is a test file which they will need to modify."
1,"Yes, the design doc includes a test plan, the authors plan rspec tests and manual UI testing, and yes they really test all the functionalities."
1,"The flow chart is very clear and easy to understand, another recommendation would be to include a UML diagram for readers to understand the whole project easily"
1,"The team has implemented 2 flowcharts, one from the student's perspective of how the individual times are calculated and saved, and the other from the instructor's perspective of how s(he) can view the total time spent on a review. Both these flowcharts are very self-explanatory. They properly describe the working of the system and I cannot find anything wrong with it."
1,"The flowchart clearly indicates the flow the reviewer is supposed to test.
Also, the flow chart incorporates the changes that are going to take place.
The snapshots also indicate the changes that are going to take place in the UI ( such as a clickable link for the popup)."
1,"A very thorough diagram, pretty helpful in understanding the flow. Promising flow, good research behind."
1,"Yes, the authors have made use of flowcharts which are understandable and clearly describe the functionality and the changes that need to be made to the system and are necessary."
1,I personally find their design really modular and having less interdependency. They have broken down the main problem into 3 subproblems and have explained the proposed solution for each. The solution also contains the possible files that can be modified.
1,"Yes, the design is pretty clear and the work the team is going to do in the coming future is also clear.
There are flowcharts that indicate the design which looks pretty simple to figure out what changes are gonna take place.
Since, the project is going to be built on the existing one, no drastic changes to take place. Model,view and controller are going to be created for this project as mentioned by the team but not sure whether a new model / controller is needed or not.
Can't this be integrated in the existing code?
If a new files are going to be added then tests needs to be written for them which might be needed to check the correctness.
So, design seems to be little complex."
1,"They've demarcated the changes well enough, and stated exactly how well they'll proceed with every change. The problem statement itself is demanding enough, and that makes the implementation complicated as well."
1,"Yes, the design is quiet simple and with minimum complications and easy to understand. The authors have made use of flowcharts which helps a lot"
1,They have provided the Use Case diagram which helps understand their work
1,I really like the design and especially appreciate the table showing proposed database changes.
1,"Yes, pretty elaborate documentation. Including previous/other projects under current implementation was a good point."
1,"Yes, the design appears to be sound, following appropriate principles and using appropriate patterns. The design looks to be correct and understandable."
1,yes all the changes have been proposed correctly. it if easy to understand all the code changes and Why those changes in particular.
1,"Yes, the authors have adequately explained the changes to be made to the system. They have made use of flowcharts which clearly explain the functionality."
1,The diagrams are great! I especially like the sample page changes.
0,The flow chart is great. It easily conveys the logic of tracking the time.
1,"The flowchart, screenshots are adequate enough to explain all the details associated with the functioning. All the diagrams are necessary. The diagrams follow all the conventions and provide enough details."
1,The team has used flowcharts to show their workflow and also their plans. The visual aids are properly made which helps in understanding the project better.
0,It's hard to determine whether these problems exist because there is too few explanation.
1,"I just have one doubt; whether an entirely new controller will be really needed to handle only the pop-ups. Unless it's going to handle more functionalities, I think that function can be integrated with the controller that currently handles the amount of time spent on looking at the expertiza page and external links. The other changes seem sensible."
1,"The design look pretty good. There are no methods being added to the wrong class, the new design doesn't see smelly, the new designs are simple enough and do not need gems. The design does not seem to potentially increase the response time pf the system, the efforts given seem good enough."
0,"Authors are approaching the problem in very efficient way. Although they are going to use already implemented code, they are not blindly copying it. They proposed to do all the changes that are required."
1,The explanation is easy to follow and written in a lucid language. The tasks are highlighted with detailed description below them. The easy language coupled with the Flowchart is enough to understand the task description as well as the proposed solution.
0,The proposed implementation is quite vague.
1,I found the explanations really lucid. They decomposed their entire problem into 3 parts and talked about the current scenario and the proposed solution for all these 3 parts. The explanation was very easy to follow and the  changes proposed also seemed sensible.
1,"The change that the team proposed seemed reasonable.
-It is easy for the user to just have a concise report of the time spent on reviewing instead of navigating through numerous pages.
-Also, the time spent on external links apart from those submitted on expertiza is unnecessary. So, the team's proposal of reducing it is a good idea as it increases the performance of expertiza.
-Also, the Onfocus and OnBlur events are worth mentioning as the reviewer will get to know how the team is planning to work on it.
The explanation they have given and the way the idea is put forward is pretty clear and proper."
1,The changes that the authors have proposed seem good enough. The overall quality of the explanation is very understandable and expressive. They have used flowcharts to explain their functioning which is quiet helpful. The anticipated code changes section also looks fine.
1,I think this solution tackles the given problem very well. I especially like the solution of a timeout timer which times out if the user is idle.
1,"Based on my understanding the functionalities to be implemented in the project are:
Track time spent on Review page: Mentioned
Track time for external links and downloaded files: Mentioned
Track time for externally hosted submission: Not mentioned
Show time on review report page: Mentioned"
1,"Interesting project. Seems tough. Do you have a clear plan for 'For other files that need to be download and open locally, we can only make an approximation for review time.' ? How are you planning to approximate some downloadable files? 
Also, you suggested that you will display a pop up to test if the reviewer is still reading. Great idea. You mentioned that you will create a pop up every 5 minutes right. Something that can make reviewer's life more difficult is, displaying this popup at random intervals of time ranging from 1 to 5 minutes. Just an idea. Can make the system more robust!"
1,"Yes. By reading the Google doc and their wiki page, I can see that they have systematically broken down their main problem into 3 subparts and explained briefly, the current status, and the work to be done, for each of these subparts. It is in sync with the problem statement mentioned in the Final Projects Google Doc."
0,This design document is incredibly thorough and descriptive. Great work!
0,The design plan should be more concrete.
1,"Everything that is mentioned on the wiki page gives complete information about what is existing and what will be done. Crystal clear.
It would be more informative if the team could have actually included the code snippets they have studied as every student who reviews it will get to know that this cool feature is implemented and the team got a chance to work on improving it.(Not mandatory)."
1,"The design doc is complete. The authors have added the test plan, anticipated code, purpose, project design etc."
1,"I cannot say for certain since I have not tested their UI operations. But on the basis of the code that I saw during their commits, I can say that all the changes made, seem to follow the modular and compact structure of the original code. And hence if the UI is working properly, it can be ready to be deployed onto the production server."
1,"I'm sorry but I am unable to access the link that they have provided (http://152.46.16.57:8080/). I'm receiving a ""This site can't be reached"" error, so I cannot test the UI operations."
0,I feel like RSpec tests could have been written for this project - but I understand why they weren't.
1,"Yes, I think they have done a good job, The only problem is that they could add more tests to their code, because right now they only use UI test."
0,no. there's no test. the coverage decreased.
0,2 new commits.
1,They did not added any test cases in this submission and coverage did not increase. I understand this was UI change functionality but still they could have compared the flow that does both views of score report and review report are rendering from same template.
0,"No, automated tests are missing"
0,The got some UI testing for their project
1,I would recommend adding more code for helping following their changes
1,"Yes, the review report function works as intended. But the problem statement also says that they have to build a functionality for users to search between reviews. I do not know whether this is a mandatory or an optional functionality but either way, I do not see that implemented in the write-up nor in the video."
1,"As far as I know, UI is generally not tested by any testing tool. The test plan of this group describes a sequence of tests to test the UI which I think is good enough to check that their functionality is actually working properly."
1,The naming and functions here are good written. But the test coverage decreased as same as most other students.
1,"They have solved some bugs like ""checkbox question not showing"" but did not put any comments that can help understand the changes done to solve the issue. They even converted haml to erb file ""team_users_popup.html"" but did not put any comments or why it was needed."
1,"Overall, they have included all the necessary steps in the test plan to test the changes easily. There is one scenario which could be included in ""Test UI for Student Login"" section which shows reviews which are given by the student to particular team :-

Click ""Other's Work""
Click ""View""

Then they could compare that view with the view they changed for review report."
1,"Overall, the write up includes all the necessary sections which are easy to follow. Only, there are few things which are hard to follow in ""Purpose and Scope"" section:-

It has one line ""score report and review report use different code so UI is non-orthogonal"". Now they have given overview of what ""review report"" is in that section but ""score report"" term has no background in that section.
The section at the end discuss about scope of their work that their ""functionality will help user to search through all reviews for specific problem they are focusing on"". It does not mention how this can be achieved by their functionality."
0,"Yes, the test plan is there with a scenario."
0,"Yes, their test plan is very specific, they will really test the functionalities."
0,The document includes a well defined test plan using Rspec covering possible test cases.
1,"Yes, they included a test plan in the second round with a cursory overview of how they'll be using RSpec tests"
0,The test plan specifications are quite reasonable and cover pretty much all the scenarios.
0,"In the previous review, the team was missing test plan. Now, they have come up with an extensive test plan which looks great."
0,"Yes, the team has done a very good job of describing the test plan thoroughly."
1,"> Test plan has been provided in the the design.
> RSpec test details have been mentioned for the scenarios.
> I would also suggest adding some negative test cases.
> The mentioned tests will test the functionalities properly."
1,"As compared to the previous version, they have added a solid Test Plan and have also mentioned the plausible files affected. This time they have identified the cases in which testing will be required and described it in detail."
0,There is an elaborate test plan for Rspecs. UI testing plan is missing.
1,"Yes, the team explained the scenarios where the bugs exist and the test cases they are going to cover for each of the issue very clearly.
Looks like the test cases will cover the bugs they are going to fix.
But since, there is a new addition of column to the model, test cases for that needs to be written carefully without breakage of code. 
Otherwise, everything is fine."
0,Enough test cases are written under the test plan to test the given functionality.
0,"Yes, the sequence diagram is describing the proposed changes."
1,Maybe it would be better if you add more diagrams in your 'Design - The Gruby Details' part.
0,UML diagram/Sequence diagram describes the flow of the project appropriately.
0,I love the way they've used the sequence diagram to illustrate the entire process.
0,The sequence diagram presented in the documentation properly explains the approach.
0,Th sequence diagram provided very clearly explains the flow of control throughout the life cycle of the feature that the team will be working upon.
1,> A sequence diagram is added however it has not been explained. Without the explanation its a little hard to follow through at first.
1,"Like before, they have kept the same sequence diagram (which is good because I had given it 5 stars in the first review too.) It is really self-explanatory. It covers the cycle right from creating a conference type assignment to sending the link to authors and letting them add co-authors. It covers the entire functionality needed."
1,The team has done a good job on depicting flows in the sequence diagram. The DB interactions could also have been graphically explained.
1,"The wiki page is mostly theory which in fact conveys the point the team is intending.
There is a sequence diagram indicating the flow which is kind of hard to follow. May be a better diagram can be given like use case etc for clear understanding of the reviewers at a glance.
Also, the diagram states the flow and not the changes to be made to the system."
0,"Only sequence diagram is described as part of visualization, however, the sequence diagram is very descriptive."
0,"Yes, they use a sequence diagram to show their logic, it's simple and easy to understand."
0,The design appears to be simple and logical.
1,"Yes, the design appears to be to the point and logical. However, as mentioned in the first round, I think big changes like ""bypassing approval from instructor"" should be decomposed into smaller ones"
0,Yes the design appears to be simple. They have properly explained the  changes to be done and also the files associated for the same are specified.
0,The design is simple and straight forward.
0,"Yes, the proposed plan is simple and very clearly explains the changes that the team plans on doing."
1,- The design seems to be bit complex as the team plans to bypass instructor approval to add new co-authors on the assignment
0,"> Yes the design seems to be simple.
> The changes considered seems to be minimal and most optimal.
> Also it has been explained very well in the documentation which is appreciated."
1,They do have many nested conditions but this is a part of the problem statement itself. I feel that this is the best that they can modularize it without making the code too complicated.
1,The design is fairly simple. The flow where co authors already have an account is missing from the sequence diagram.
1,"Looks like the issues are a bit intricate. Take time to understand the requirement itself.
Since, it is needs thorough understanding of the account creation, instructor activities, then author activities etc. the changes proposed may touch several files in Expertiza.
Also, there is an addition of column to a model which means there will be migrations involved. So, design will not be simple I suppose.
Better test cases should be written for a fine work."
0,"The explanation is given in steps it is easy to understand. Also, the explanation is reasonable and comprehensive and easy for the reader to follow. The design appears to be simple."
1,They did not write what their design pattern is.
0,The design appears fine.
0,The design appears to be sound and follows appropriate design principles.
0,"Yes, the design doc seems to be sound and follows appropriate principles and patterns to describe how the team will be addressing each of the issues."
0,Yes the design appears to be sound and seems to follow appropriate principles.
1,"> The design does appear to be sound and detailed enough to cover all the requirements.
> However it seems to follow the principles and patterns but nothing has been explicitly mentioned about it in the documentation."
0,Well constructed design.
0,"Yes, the design appears to be sound. However, no specific patterns have been used as such."
0,"Yes, their design seems to be good. A good description of the problem statement and the proposed solution. The design proposed appears sound."
1,"The design seems okay. However, like I pointed out in the previous review, a new co author will be assigned as a student which doesn't seem right to me. Maybe the team has spoken with the mentor and decided to go this way. It is also possible that the team has been instructed not to create a new role. I have rated accordingly."
1,"The design is clear. There is no code snippet included which highlights the location the team is anticipating the changes.
Cannot comment on the design patterns/principles followed by the team as nothing of that sort is discussed on the wiki page.
But anyway the changes proposed seems reasonable."
0,The design is decent.
0,"Yes, file names are there to be going to change."
0,"Yes, they adequately explained the changes to be made to the system."
0,The authors have explained the changes made to the project reasonably well.
0,"Yes, I think the changes proposed by the authors are well thought of and adequately explained."
0,- The doc adequately explains the changes planned by the team
0,"yes, the proposed changes to the system are adequately explained."
0,Very well explained. I see no issues.
0,"Yes, the authors have done a really good job of trying to explain the flow and the changes that will be required to incorporate it in the existing system."
1,"> The proposed changes are pretty well explained.
> I would have appreciated a bit more explanation to the sequence diagram.
> Also the files to be changed could also add a section for what exactly needs to be tweaked in that class for covering the required functionalities. However, the explanations are overall good."
1,"Yes, at first glance the problem statement itself seemed complicated. But they have broken down the problem into 3 subparts and have explained each individually. They have given an overview of the changes required for each of these parts which makes the flow of the system clear for me."
1,"The changes have been explained in sufficient detail. The file changes section mentions coauthor, that could be rewritten as coauthor (role = student) as the team is essentially just creating new students and not coauthors (this role does not exist)."
1,"Yes, the team has clearly stated the changes they are going to make. 
The requirements they are going to work on and the test cases they will be covering is also stated.
The new additions to the model or the fixing to be done in the existing code files is also explicitly stated.
May be including the code snippets where the appropriate changes are anticipated would give a more clear idea.
Otherwise the intention of the team can be clearly seen."
1,Yes the writeup is well written but as i said in previous round they only added screen cast of 1 st issue not of other two;
1,"My biggest concern with the code is the decrease in the overall code coverage of the project. There are no automated test cases, so in future if something new comes up which is dependent on this functionality, there will be no way to check if the existing functionality works correctly or not."
1,"The writeup is good, but it can have less number of screenshots. I don't find significant changes done from the first review."
1,"On following the link, it does not work correctly for step3. On clicking view submissions, it does not work correctly for it."
1,"Yes, the build did pass. The pull request was from owner's master to source beta. From what I know and was informed by my mentor, it should be from beta to beta"
1,Ready to be merged but Travis CI not passing
1,Travis CI was passing but now it failed
1,"1) Maybe some UI based testing is required for issue realeted to missing header
2) and some more rigorous test related to dropdown menu
 
Otherwise it is ready to be deployed"
1,"1)they pushed new test case into new commit
2) but the overall code coverage is not increased
3) overall it decrease by 6.2% but after adding new commit it increases the code coverage. (before 13.2%   and     6.2% after)"
1,"Code follows Ruby principles and DRY principle also very well.
The code is self explanatory but still some comments in commit related to issue 1312 is required"
1,"- Too many commented lines of code in the PRs. This PR needs refactoring before being merged to avoid the future task of refactoring.
- I am not too confident about adding another column like use_dropdown_instead I suggested in my previous review to get rid of DB changes as another column dropdown is already available. They also didn't explain the need to have this redundant column.
- The name with postfix instead is confusing as it suggests that there is another column like do_this for which they have do_this_instead
- Also, the column name should be a noun"
1,"- The writeup is good. They have added a test plan now.
- They lack the explanation for creating a new column instead of"
1,"- It works fine.
- Just a small suggestion, in the show header issue they can do some string formatting to make it more visually pleasing. Eg: instead of show new2 they can camelize and add spacing `New 2`"
1,"- Test cases were added but according to the PR, the coverage decreased. Also, they don't have any mention of coverage on their wiki page."
1,"- The last commit build didn't pass but before that, it was passing. I have given them 3 points as I am not sure whether failing of building necessarily their fault as the test cases running during the build is randomized."
1,- Too many lines of commented codes instead of removing it altogether
1,"The code is almost ready but Fix Issue #1312: Assignments with “Use dropdown instead” cannot be saved is not working
I remember this working in the last round so i'm not sure why it is not working anymore"
1,Fix Issue #1312: Assignments with “Use dropdown instead” cannot be saved is not working
1,The team has added 2 test cases but one of them is commented completely
1,All of the checks have been failed but there are no conflicts with merge request
1,Code follows almost all standards but does not include documentation and commented code is not removed so deducting 2 stars
1,"I don't think this code is ready to be deployed on to the production server. Because there is many error in Travis CI, their code may not be compatible with the repository."
1,"They have only one automated test. The rest of test was completed through UI. It should increase the coverage. But in their pull request page, their coverage decreased."
1,No. The build didn't pass in Travis CI. All check were failed.
1,Comments are not there for each method just the issue they fixed is there on comment not what logic they used or what they did there is describe.
1,Yes thee writeup is written clearly but the screen cast is provided only for 1 mini task they solved not for other.
1,Methods are concise. Adding more comments and adding some tests for database changes will do.
1,Most of methods are self explanatory. However keeping comments would be good.
1,Functional test cases are missing in the writeup.
1,Comments have not been added to the methods.
1,The writeup does not include the Test Plan. The test cases for the functional testing are missing.
1,"The writeup describes the issues and its fix in a great detail, along with a snapshot of each. This is by far the best writeup I came across."
1,"Methods like change in drop down model are self descriptive.
But still giving description would be better."
1,"- The code was not working but it looks like it was not due to any file they changed.
- I really liked the way they solved the 'p' tag issue. They probably read the documentation of that plugin and used the available options instead of creating their own functions and monkey patching things."
1,"- The screencast was of only one issue.
- The files associated with the test case shown on screencast not present in the pull request."
1,"- It needs more comments on what the line is doing.
- Added new column in the table which should have been the last resort for an app already running on production. There is a column dropdown that has a boolean value as well. They should've tried to use that field only and try to fix the issue of why it was not working. Instead, they added on to the code.
- If there was a reason which they faced while using the same column they can write that in the wiki for future reviews."
1,"- I saw a test case running on the screencast but the associated files have not been added in the pull request.
- Only one bug has test case which was shown on the screencast."
1,"For most part functionalities work just fine, but when i clicked view submission for new4 the website crashed.
 
I am not sure if this is an existing issue or something induced by the team"
1,I cannot see any test case being included in the committed code
1,The write up contains a brief explanation of what has been done. There could have been screenshots with regards to travelling in the UI as it took me some time to figure out where to go and what to click.
1,"Every method has comments, but it did 't descriptive enough to tell what the method does, and how it does it. Some comments only describe what their job is."
1,They clearly explain how and why their job were done. But they didn't mention anything about design pribnciples or patterns in their wiki page. Maybe they should add some descript sentences about it.
1,"The authors have done an excellent work of using visual aids for describing the proposed system . It helps in getting a clearer view of the proposed system behaviour. The flow chart however, does not mention about the the changes that will be made to the system. This could have been done using UML diagramd"
1,"They visualized the workflow. However, they mentioned a lot of edge cases which would've been easier to comprehend if they were illustrated using a use case diagram"
1,"Yes they have written the test plan. They could have added more test scenarios, like when the answer tagging will be marked as unreliable. Just one more thing, they could add mock object for answer_tag with different time stamps. It would make the automated testing faster."
1,"Yes the proposed solution looks good. The team has explained the design and what changes they are doing. But how exactly the different scenarios are handled is confusing. For example if they are using update_at to find the gap, so if a user tags after a gap of say 2 days how this particular scenario is testing."
1,"As stated earlier they have explained the changes but the exact implementation is little confusing. They have written that they will be using ""update_at"", but how they are creating the matrices in step 2 is not explained clearly."
1,Yes compared to previous submission it is much simpler but still they could have removed verbosity to great extent than the present one. They could have used bullet points to explain the design approach which will make things easy to follow and simple to understand.
1,"The overall design is good. But it lacks in some ways:

The design proposed in the diagram does not mention clearly about how they will clock the time between two successive tags. They just mentioned in their approach that they will be using 'updated_at' field in answers_tag model to calculate gaps but did not divulge any further that how they will use that to calculate time to tag as according to me ""updated_at"" would only contain value when user has already tagged the answer and is now updating the same answer.
On what basis they will decide the ""threshold"" of useful or not useful tag. Also, in the diagram they are displaying the tagging report. They have not mentioned much about the details of what that report would contain apart from tagging time. What will be the metrics for line-chart. How they will display the tagging information as they are using line-chart will it contain information of individual students or all at once. Because the instructor may wanted both the type of graphs for overall insights to assess individual student and to assess quality of whole class whether to evaluate the tagging process does really help generate useful information or not."
1,"Overall, they have explained the changes upto great extent. But, they have not exactly revealed why they have kept 3 minutes threshold. And how exactly they will be clocking the time between two tags is unclear."
1,The visualization is good. They can add some texts to explain the graph.
1,It just simply explained what they want to do. It can be better if the team can illustrate how these approaches will implement the requirement step by step.
1,Yes. The design includes a test plan. The team explained why the automated testing is not available for this project and decided to test the function through non-automated ways. More details or explanation about the test plan are expected to show the details how it works and how it will be executed.
1,"There are 2 diagrams of the flow through the system, a flow chart and a use case diagram. Both help me visualize the process of tagging reviews. I would like to see a UML diagram though in order to better understand the system at an object-oriented level."
1,"Yes, the general design appears like it will work. However, there isn't much explanation outside of the given requirements that details how the design will work. There should be a uml or a list of what classes should be changed. The requirements document simply has suggestions from the teaching staff."
1,"I think the authors have done an alright job of explaining what changes the system needs. There are a few elements of the design that seem up in the air, rather than concretely defined (we  propose to use `updated_at` in `answer_tags`). Nevertheless, the general picture of what must be done is there."
1,"The test plan section describes all the test cases but more details could be added for every test case. For instance, adding details like what will be tested in those test cases."
1,There is just one diagram which gives a brief on the proposed flow. There are no screenshots and mockups. No use of UML or ER diagrams to give the reader any details.
1,The descriptions are very brief with a complete cursory view of the topic at hand. A lot more details should have been put into making this document.
1,The requirements are mentioned in the doc. But there is no real analysis done for the issues at hand. There is no detail regarding how the existing system works and what they are planning to do to implement the requested change.
1,"The design document is very verbose and included just one flow chart diagram and it also mentions high-level details and does not involve different entities that could trigger the flow. Moreover, other than the only diagram they did not even used bullet points that will be lot easy to follow and be less verbose."
1,"Overall, the design proposed is good and nicely structured. But, there are certain gaps that I would like to mention

The design does not much say that what approach/metrics they will use to track time. They just told they will add new fields to track the time but did not disclose further about the number of fields or will they use any existing library functions to track time like ""Time.now"" class or will implement their own class to track time with different helper methods.
Also, what if user clicks on new tab in middle of tagging activity. According to flow diagram this situation cannot be handled as it may happen that user spends less than 3 minutes actually tagging but overall spend more time in viewing other tabs. You could track if user moves to other tab by tracking the focus of the window. Refer link https://stackoverflow.com/questions/10338704/javascript-to-detect-if-user-changes-tab
Also there is nothing mentioned on the reason behind keeping the threshold for 3 minutes."
1,"There are some design decision which I think might make code smelly like the loop in the flowchart to check if is any tag tagged is done in javascript frontend or they check it using querying because that would put a load on the server and will make website slower.
Also in testing they said about gaming the timer like the opening website and doing other work in a different tab. This can be done by checking if the user is in the tab or in another tab.
I found a nice StackOverflow link which might help you https://stackoverflow.com/questions/23690666/check-if-my-website-is-open-in-another-tab
This data might ensure that the user is paying attention to tagging and not using other tab or spending time on other websites."
1,The syntax can be arranged better to make it easier to read. There shouldn't be any introduction on expertiza. It is better to have UI test.
1,"There is a flow chart provided to explain how the design/change will work. As a diagram, it is clear and understandable. However, if more details or explanation could be provided for specific steps will be better."
1,If the team could provide more details or information about the code they will work on will be more helpful. Since the details of the code change is not provided. The questions above is not able to answer properly.
1,"All required parts such as project purpose, project design and testing plan is provided. For most parts the explanation is provided which is very helpful. If more details, explanation or description for the flow chart will be better for others to understand."
1,From the flowchart explaining the logic of how times will be saved I don't understand how it works. It seems it only checks if things were tagged once at the top then there is a loop at the bottom that resets the timer without checking on whether or not things were tagged.
1,There is not a design proposed outside of the approach proposed in the given requirements. There should be a design section that talks about what classes and methods will be updated/added. This will need to be more than part of the requirements; the design should talk in detail about the plans for implementation.
1,I liked the high level flow chart because it helped me understand the flow of the system with tracking the time students clicked through tags. I think it would be useful to add a UML diagram. This would help readers better understand the class level design.
1,"The doc is off to a good start since it talks about purpose and a testing plan, but it doesn't have a section that thoroughly talks about the design. It needs a section that talks about what changes to classes should be made."
1,"1) Looks like they have found the classes to be changed.
2) I don't think the new design will make the code look smelly.
3) The new design cannot be solved by any gem as far as my knowledge goes.
4) The new design may increase the response time of the system since timers are activated and saved all the time.
5) More efforts will be required to implement this design."
1,The team looks to have identified the problem and the solution but failed to articulate it in a better way. It would be helpful if you could articulate the thought process behind the solution.
1,"Just one paragraph has been written regarding implementation of all the functionalities. It would have been better it this was better organized. Also there is no mention for how these functionalities will be implemented, just a vague description is given. Please mention any design principles or some logic for it."
1,"I think the image for showing what files need to be changed is unnecessary, you can juest type it, and maybe you can add some visual aids along with your ""Design - The Gruby Details"" part."
0,The sequence diagram is added.
0,UML diagrams describes the flow well.
0,Excellent use of the sequence diagram to explain the flow!
0,- The team has used sequence diagrams to explain the flow of their new implementations which make understanding easier
1,The aids provide good amount of information. I am not sure in a sequence diagram if we can work from right to left. The communication between coAuthor and controller is from right to left. Please check.
0,The sequence diagram included helps to understand the flow clearly.
1,"> Sequence diagram has been added as a visual aid and is detailed enough.
> I would have appreciated some use cases, database design or class diagram too.
> The only diagram added seems to follow the conventions."
1,"They have provided a sequence diagram. It sequentially describes the flow of the system, and it easily helped me understand the functionality that they are going to implement. The diagram is really good and self-explanatory."
1,"The given diagrams make sense, however no UML diagram has been provided for the DB and the relevant tables."
1,"-The team came up with a sequence diagram. It indicates the flow between different entities. But it is pretty difficult to understand what the entities are.
-May be a better UML diagram can be included next time like the use case diagram for more clear understanding of the reviewers.
- Including of pictorial depictions makes it easy to understand."
1,"There's a sequence diagram alone, but is pretty detailed. However, a diagram related to the DB design should also be included."
0,A sequence diagram has been provided which is useful and is easier to understand.
0,I think they did not specified what design pattern they would use.
0,The proposed changes should fix the issue
0,The new design seems fine.
0,"1) I think they have mentioned the appropriate controllers for the proposed changes 
2) To early to judge
3) The new design doesn't seem complicated but the project is vast enough to make things complicated so the team should be careful
4) No, I don't think the new design will increase the response time
5) Not needed"
1,"- I see that the proposed solution allows adding student bypassing approval from Instructor
- This seems bit unsecured as the instructor may have no control on whom the author adds as a co-author, checks must be in place to verify if the co-author added belongs to same course"
0,The design and implementation plan looks fine.
1,The design does not look like it will make the code smelly. It is well thought especially the part where co-authors' emails will be recorded so that only the intended people can join the assignment.
1,"1) The classes mentioned for changes seems to be appropriate. However, I would have appreciated more text describing the change and the need for it.
2) I don't believe the new design would make the code ""smelly""
3) Design doesn't look complicated
4) The new design would server the functionalities required but I don't see the reason behind any performance improvement yet.
5) A bit more granular detail on the changes proposed to each file would be appreciated."
1,"A good thing is that they are thoughtfully adding new methods in the appropriate existing controllers and views, unlike what the previous team had done. I feel that the methods that they have suggested (which are not a lot), seem just enough for the functionality to be implemented without making the code too complicated."
1,"The proposed changes plan to add coauthors as a student which is probably because all the student methods are supposed to be used. Instead, a new subclass that inherits from student can be created and used for the proposed changes."
1,"The team gave a high level understanding of what they want to add and in which location. 
But could not get what they want to add in terms of code perspective. Is it the controller/view/model they want to add or just the code tweaking etc. Not able to comment on it as it needs some more clarity."
1,The reason of doing code changes in StudentTeams controller is not justified properly in the document.
0,No designs have been proposed by the authors.
0,They clearly stated what files need to be modified.
0,Proposed the changes with good explanations.
0,The authors have explained the proposed changes covering all the issues that need to fixed.
1,"The changes proposed by the team are well thought of. I think some big changes like ""bypassing approval from instructor"" should be decomposed into smaller ones"
1,"- The changes proposed are explained efficiently
- Some features such as creating account if the user is not yet registered, seems to be implemented already and I believe should not be included in the scope"
0,Thre was adequate explanation on what changes the team wants to do.
0,"The explanations were pretty clear for the most part. However, there was some repetition which can be avoided."
0,"> The explanation looks very adequate. They have given a pretty elaborate design detail.
> The file changes description could be expanded."
1,"The authors have given an in-depth explanation of the proposed solution right from the files to be changed to the sequence of actions. Each file to be modified has a corresponding elaborate explanation. Though, they have not mentioned any test file that will have to be modified/at least affected, in this process."
1,"Most of the changes proposed seem fine.
However, when a coauthor doesn't have an account, he will be redirected to /users/request_new?role=Student according to the wiki, the role for coauthors should be different than a student."
1,"-The team listed down what needs to be done and where they will be changing based on the tabular column of their wiki page.
-But Not sure whether this base functionality exists and the team is building upon it or is it a complete new enhancement.
-The wiki page is of complete theory which makes it difficult to grasp quickly what the project is about."
0,The existing changes are explained in a decent manner.
0,The authors did not seem to have proposed many solutions as they could not be understood very well.
1,"I think that this code is ready to be deployed onto the production server for the OSS project
I do not have any concerns about the project.
The project need not be redone from scratch using a different approach or picked by a different team. As it is a refactoring project & the team has already done all of the work required."
1,"The authors have done a great job on the write up of the project.
They have added screenshots everywhere it is necessary.
All the required subheadings have been covered in the writeup.
Test plan has been thoroughly covered with all the screenshots.
Before & after code has also been added with the required explanation and need of the changes done."
1,"The team has added any new test cases.
Existing test cases were refactored and in 2 cases test cases were moved from one file to another to match the proper Rspec testing standards. 
the newly added test cases pass the build as well.
The code coverage did not increase, it decreased by -6.1% to 24.35%
There are newly added test cases, so it does increase the tests covered range of the project but the code coverage seems to have decreased."
1,"- The documentation is explanatory and describes approaches taken by the team
- Lots of additional details like the Work plan and flowcharts reduce focus from main changes made by the team"
0,- Not many changes were done after first submission deadline
0,- Code follows many good coding principles
0,No code was added.
1,They have clearly written the writeup. They could have included more images showing details of the scenarios.
0,"The team had added test cases in the past, but the coverage didnot increase."
1,Some functions could be sub divided into smaller functions. They have moved the functions to helper class. Apart from that they could have also modularised the functions to further increase the code readability and maintenance.
1,"the app is deployed on heroku, but it shows
Heroku | Welcome to your new app!

Refer to the documentation if you need help deploying."
1,"the write up was well written
But theses functions can be elaborated
15. Extracted a method make_review_strategy (from automatic_review_mapping_strategy) that returns a review_strategy based on the values of num_reviews_per_submission and num_reviews_per_submission.16. add_calibration is a method that changes the attribute of a ReviewResponseMap and has little to do with Review Mapping. So it is now put in a separate controller named ReviewResponseMapController."
1,They have improved the writeup significantly post the first review. A descriptive test plan has been added and the overall writeup is very informative and lucid
1,"Yes. Since it's a refactoring project that has been tested exhaustively, I think it is ready to be deployed onto production"
0,The code was very well written I was not able to find any problems with it.
1,"This is a refactoring project and the link provided for the deployed application is not working. However, they have very well explained in the wiki the changes they have made and have also added appropriate screenshots. But I am still not sure about the functionality as I am not able to test it."
0,Includes detailed test plan.
1,The team has documented the test plan. It involves manual testing as well rpsec testing . However the team could have elaborated some more on the implementation of the rspec testing and which features would be tested in each of the stated files.
1,"The figure show the flow of ""review update and notify reviewer"" clearly.  But it seems that there should be a line between the ""Author"" and ""Review"" since the author can see reviews related to the work."
1,They have good use of visualization. It can be better if they can rearrange the size and location of  the graph
1,The class diagram does not show that much amount of detail and is not very informative.
1,"The user diagram could be made easier to read, in my opinion. I believe leaving feedback on it in round 1, but I cannot specifically recall. The numbers can be quite confusing and the way it is structured (visually) makes it clunky to read - not to mention the graphics themselves could be done much better in a program like lucidcharts or draw.io."
0,It's a fairly okay work
1,"There is a very helpful use case diagram that shows the flow of a user through the system. This only shows the relevant parts of the system, which allows me to focus only on the new changes. This is very useful. Despite this, I would be able to understand the design a little more easily if there was a UML diagram of the planned code changes. They also use markup diagrams of the UI, which helps drive home their point for why the changes are necessary."
1,"Not very simple. In order to make it more clear to others, they provide much information about their issues, plans, tests, designs and so on.
My suggestion is that maybe you can make it a little simpler though it is good enough."
1,Yes they have not localized the changes to be made but it is a good design
1,"It could just be the project itself, but I don't quite get how the score calculation and the email parts of this project correlate with one another. Regardless, their approach seems solid. The reason I gave this a four rather than a five was due to the fact that they didn't list any of the existing specific functions that needed modification, only the files they were located in. I believe some pseudo code or pointing out existing code would have been a great resource for reviewers."
1,Some explanations are not detailed enough. It is better to be specific to which function to be modified.
0,The code changes as well as the visual changes required in the application have been appropriately stated by the authors in the documentation with the help of use case diagrams and test plan.
0,The team has segregated functionalities and tagged files to be changed with each functionality. This makes it easy to understand what's going to happen where.
0,Yes it looks adequate
1,"Yes, the authors have thoroughly explained the problem, what the solution must be, and how they will implement it. They walk through each feature that must be added, and detail what files will need to be changed. However, a few features don't mention what files will be updated (i.e. Sending an email when the submission parameters don’t change). These should have the files mentioned in them."
1,"They add a visual aid to their profile email preference problem to explain how it works. It is clear to understand. But I think a line between ""Author"" and ""Review"" should be added since author should see reviews. And they can add visual aids to their other problems to explain their plan more clearly."
1,"There could be more visual aids, honestly. They describe a lot of stuff thoroughly about the existing design but having visual indicators would be helpful to those less familiar with Expertiza."
0,"UML diagrams are good, precise and easy to understand. All conventions were followed."
1,Some explanations are not detailed enough. It is better to be specific to which file and which method need to be changed.
1,"It was easy to follow and understand. The explanations were adequate and to the point. They want to test the functionality by writing test cases once to see if it is working correctly or not, which is good. However, what if it is not working correctly, what will be the solution? or what will be the course of action? This has not been mentioned.  In general, when we submit a review in expertiza, it can't be updated. if authors plan to create update button, How will the review reopen? what are the steps associated to reopen a review? What are the files associated? has not been mentioned in the document. I would suggest to add up those two things in the document which will make it more precise and robust."
0,Adequate Explanation
0,Very  clearly explained
0,Complete Functionality
1,"It is better to have team members included. By the way, there shouldn't be any introduction about expertiza."
1,"I think they intend to implement everything, the only thing I'd like to see is more before screenshots, like I mentioned before."
1,Everything except DB and relevant tables UML diagram is present.
0,"Overall, it was decent."
1,"The writer not only made changes very clear and easy to follow, but listed things needs to be cautious about in side notes. I am happy to see this work."
1,Changes are adequately explained.
1,"Yes, in their Proposed Solution section, they have clarified five steps on what to be done as their task plan, including all modifications to the functionalities and tests."
1,"The authors have done a very good job of describing the changes to be made to the code and hence the system.
They do so in the Data Flow Diagram where they classify every action/change into either a minor or a major change.
This really helps in the understanding the impact of every change made and the overall data flow."
1,The diagrams are beautiful and clean.
1,The team could've done a better job at explaining the use case diagram. The data flow diagram is on point and does a really good job of walking one through the requirements.
1,Good use of UML and Design Diagrams.
1,The proposed designs are really good for a first draft and seem to cover all the requirements.
1,"The flow of this new functionality looks good, if specific controllers could be mentioned then it'd be better."
1,"Although the authors have not specified the exact file names which will have to be changed, they have done a great job at explaining the approach they will be following."
1,"brief and concise description, can fully understand what they are going to do."
0,The points explained in the Goal of the project are more of a problem to be tackled with than a proposed solution.
1,Yes it did cover all of the functionality listed
1,I think so. It does.
1,"Yes, the design document incorporates all of the required functionality."
1,Yes given document incorporate all the required changes.
1,I think it's a highly completed design doc. Really good example for us to follow!
1,The design document is really well written.
1,Document looks complete to me. Nothing is missing. Test plan can be improved and more corner cases can be included in test plan.
1,"need to add files which need to be modified and added;
test plan should include more details."
1,"Missing Functionalities:
Books: Image is not there
Admin: 
View special book borrow request  Throwing error
Cannot manage student and librarian accounts
Cannot edit the profile of his/her account
 
Librarian:
Couldn't test hold request module as book cannot be checked out. 
Student:
No action to checkout books"
1,"Have tried fixing the issues from round one. But,When the admin adds books,the published date is considered as a string,which could have been handled properly,as published date is required in the search as well.Also,the special borrow request view page throws an error in Admin's"
0,The extra credit features have not been implemented.
1,"1. Admin can delete the books which are checked out by students. 
2. Student can perform the approval of librarian and editing other students.
3. Student is not shown the option to edit their profile.
4. A single student can request the same book multiple times increase the count to n."
1,"Most of the major problems were fixed, however, some of the functionalities are still not working as it was expected to be:
1. Book Search by date functionality have not been developed.
2. Librarian was able to perform some functions before the admin's approval.
3. Student is able to approve a librarian by visiting - http://iwolflib.herokuapp.com/librarianrequest"
1,"Most of the features were taken care of , however, Authorizations have not been properly dealt with. Student is able to perform admin's and librarian's functions if they have the URL with them.
Facebook or gmail logic has not been implemented"
1,"1) Because there is no association, even if the book is already checked out, it doesn't stop the admin from deleting the book and it still exists in user return management
2) I was not able to check out some books even if they are not in special collection and have enough count and do belong to the library which is in the same university the student is in.
4) Reservations are not deleted, the is_returned status has not changed and is still false.
3) No, but the password can be changed."
1,"1) The UI is a bit hard to navigate 
2) When the user-created is a  librarian, I am not seeing the library option in the UI or at least the Education Level doesn't go away
3) A student is not supposed to update his education level.
4) I was not able to see any option to select a library when logged in as a librarian. 
5) /book_requests is not working.
6) Normal Book borrows/bookmarks are working fine.
7) Admin is able to see the borrow option and bookmarks option, which was intended for students."
1,"1) There were very few associations mentioned, i.e. librarian belongs to the library. 
2) Associations between bookmarks & books, library-books, book-history - books can also be specified."
1,"I think there are a lot of controllers defined, they can be cut short by enforcing policies or restrictions in the same controller or view itself. And not very DRY"
1,"1 The book history for that book is deleted.
2 Student cannot be destroyed no matter what (regardless of book issue status)
3 No
4 Admin account email should not be allowed to be changed (currently it does)"
1,"The book to library relation is undefined
The library to university relation is undefined"
1,"1 No the code does not follows the standards. There are separate functions for individual tasks most of the time, however in the scenario of returning the book, All tasks of book return, creating entry in history table and checking for existing hold request and issuing the book if request exists is all done in the same fns
2 Yes, A lot of fns such as (for bookmark)mark_book, unmark_book are named in ways which take a little bit time to understand
3 The book return method is really long and follows a complex flow structure"
0,Yes they have test thoroughly.
0,Yes they have the right relationship
0,Yes they are keeping commit
1,"Login model and controllers seem to be tested properly. Functionalities for registration, editing profile and logout working fine. But clicking on back button it redirects to login page so session is not handled"
1,"There's no separate login page for admin/librarian/student. But other pages looks pretty neat and clean, though styling has not been done but i think that's something which can be considered later once the functionalities are required."
0,Team has very actively pushed changes throughout the project period.
0,Seems like the books functionality is working great. Tests seem not to be implemented though.
1,"UI is simple to use, but due to lack of formatting, I am facing issues in understanding which link belongs to which record. Kindly change the formatting to bring a better impact on the user."
0,The team has pushed most of the code in 3-4 days
0,Team has tested one model and  one controller
1,"User interface is interactive,however the UI can be made more clearer look wise and adding labels"
1,"Code follows good Ruby and Rails coding practices,But the naming could have been done better"
1,"Functionalities can be checked in the test case - like - All Borrowed Books can be again borrow, hence giving a negative number. This can be easily detected in the test casees. Hence, testing can help in getting the model and controller function correctly."
0,The code written follows the Practice of MVC. All the logic is separated in controllers. Rails coding standards have been followed.
0,There are regular commits to the repository.
0,The test cases are covered as part of development and cover basic functionalities.
0,I don't see any test folder in the application
1,"The Codebase doesn't appear to be DRY. Instead of declaring three separate user types, a policy gem could be used to enforce restrictions."
0,"yes, they are keep working on the project 2."
0,No
0,Please add the profile part.
1,"The user interface is intuitive, however I feel you can use navbar to make your page look more cleaner."
1,"Most part is good
there are some suggestions: 
1. Add the ""back"" button on the all page.
2. Some buttons and information are duplicated. for example, there are a lot of ""new_user"" button on the user management page."
1,"It deserves further work. The project is obviously still ongoing, and most of the tests are still failing, so it is still premature."
1,"After I pointed out that there lacks the interior logic behind why they implemented as what they did, they made an update to the wiki page, which now contain the depicted project scope explaining precisely how the program works and what is the logic behind it. Thus the documentation now is complete and detailed."
1,They have followed all the guidelines properly.
1,"One PR is already merged and the other PR is having some issues. But since the team is having constant interaction with ""jdm"", I hope they will be resolved and it will be merged soon. If they are not able to do it, I suggest team to take these issues to the final project and complete those steps along with the subsequent steps of the project."
1,"The system operation cannot be tested from UI because this is a Mozilla Project. Their project was to fix/modify/add code such that WebAssembly programs can be compiled asynchronously. One of their PRs is merged there are positive comments on the PR which is not yet merged. This shows that the features are working as expected. However, the PR maintainer ""jdm"" made some changes in their code and it caused 14 test cases to behave unexpected. I suggest the team to review it ASAP and find the reason why those tests are not passing."
1,"The project is Mozilla Project and the team did not have to add test cases. Their code doesn't change any behavior and that they have tested by loading ""https://wasm.bootcss.com/demo/Tanks/"". They have also run servo-provided test cases all of which are passing."
1,"Most of the variable names and method names are readable but I suggested the team to change a few variable names like ""maybe_url"" which they have not changed. I feel this must have been their code's requirement to have such variable names. Other than that, variable names and methods are pretty straight-forward."
1,The team's project work is divided into initial steps and subsequent steps. The team have worked on completing the initial steps and have been able to get their code merged into Servo's master branch which is praiseworthy. The remaining initial steps' code is still not proper as the checks are failing and the code is not ready to be merged. The team should be able to complete their work given the way they have been working for this.
1,"The writeup is good overall however it would have been much more helpful if the team had included what exactly is WebAssembly and how it is useful in browser engines. Due to this, it was a bit difficult to understand exactly what they were trying to do. Also, the team could have worked more on explaining the code they wrote. It is not possible to understand the code by just looking at it. Other than that, it's proper."
1,The team has already written code to solve the initial steps partially. This code has been tested and already merged into Servo so it will definitely be correct. The new code that they are working on is currently not working properly since all checks and tests are failing.
1,"According to their Servo project page, it seems their steps don't require external tests to be added from their side. The Servo team has predefined test cases to check whether new code works or not. Since their tests pass, their code should have the correct behaviour."
1,"The code was properly written for the most part. It didn't feel that the code was long and redundant. However, the code definitely lacked comments. Too many comments are not allowed by the Servo team however, just 2-3 comments here and there in the function would have been enough to explain the function's purpose. Also, I felt that the naming wasn't good since it wasn't easy to understand the new variables that were defined."
1,They have provided steps to check the functionality and it works as expected. The project may not require any refactoring. The goal of this project was to support compiling WebAssembly programs asynchronously and this goal has been achieved.
1,The code was written well and they added meaningful comments so it was easy to follow the code. The code had no bad names or long functions in the previous round as well.
1,Just run test-tidy is everything needed.
1,"Maybe implicity is one feature of the servo project, so they did not write down any comments inside the whole block of codes they added. But I still recommand to add some comments as a special reminder in some cases."
1,"Yes, all the function names are very natural and easy to understand. All the names are accordance to the normal principle."
1,"No additional tests needed this time, and they have thoroughly run test-tidy."
1,"As mentioned in their wiki page, all their work focused on the implementation, and they have made statements clearly about what they have done and their changes to the codes."
1,"So the task involved is ""support asynchronous WebAssembly compilation"". On the wiki page, there lacks the explanation about how they realise that goal by creating the new structure and methods, which is precisely, the logic behind it."
1,"No long methods.
More comments are needed to explain the functionality."
1,"Since, this is Mozilla project, I cannot check the authors' work. But I can see that there are some suggestions on their pull request, which I feel they should implement early to make their pull request merged. The merging will be proof that the code works fine and functions as expected."
1,"Definitely more comments are needed to make the code more understandable and readable. Otherwise, the code is written using proper functions that are small and task-specific. The language is Rust and not Ruby. So, can't judge based on Ruby Style Guide."
1,"The test plan is not implemented but the authors have run two commands (""./mach test-tidy"" and ""./mach build -d"") that, as per authors, executed successfully. It means that the code is correct and the changes are passing standard tests and the code is able to get built successfully."
1,"The authors have mentioned all that they did in the scope section of the documentation. That explains all of their steps and their sequence. Their task and their approach becomes kind of clear after reading that. But, the steps should have been written in more human-readable language. Right now, they are too technical to understand for someone for the first time.They have also mentioned why design patterns are not applicable to their Mozilla project."
1,"Yes, the code is written nicely but I couldn't understand 100% of it since it was new for me. I suggest writing some comments so anyone can understand what the authors are trying to do just by reading the comments."
1,"Tests are not required to be written at this stage as can be seen from project page. The moz projects do have automated tests using python utility ""mach""."
1,Comments are needed which explain what the code does. Other things follow the style guidelines. The methods are short and should be doing what they do.
1,Names and methods added are proper intuitive. The code follows proper naming convention.
1,The test plan includes the details on how they tested their code. Tests aren't required so I would say that test plan seems sufficient for now.
1,"The authors have properly attached screenshots of the exact changes made in the files along with a brief description of how they added the code. Since the Moz projects don't include writing a brand new file, the aspect of design pattern cannot be commented upon. It would be good if the authors explained the parameters and stuff."
1,"The page is well-written explaining what their project is and how it integrates with the whole of Servo browser engine. They could have simplified the terms so anyone could understand what is web assembly compilation in browsers and why exactly asynchronous compilation is needed. Other than that, I feel they have included necessary details and linked to their project page for more details."
0,"Missing deployment link, project is not expertiza"
1,Make the writeup more descriptive and add each step and explanation for the step. I could understand what the project was doing but not completely. Add the existing system which improves the understanding.
1,Functions are sufficiently sized and no extraction is needed. Don't see any code smells.
1,The write up is well written and the scope of the project is well described. Authors could have provided some screenshots or screen recordings.
1,"The pull request is failing and the test coverage has not increased.Within the code, the naming convention seems fine. Although they have written code in unsafe block and allowed unsafe code inside the implemented struct. They have not added any comments as to why this was implemented. Allowing unsafe code will skip any all the checks that would normally happen and allow you to directly access the memory, thus, making the code poor. Had their been a reasoning of why that was implemented, it would have been better as a reviewer to judge there code, but without enough information in wiki and in code comments, it is difficult to apprehend poor code decision choice."
1,"The wiki seems good and explains the background and motivation of the task. However, the implementation is left for the user to figure out by providing the screenshots. It should rather have been explained about what approach was used and the reasoning behind it."
1,"the author shows us the data flow diagram and the use case diagram, they show the difference between the new system and the old one."
1,"the design appear to be simple and clear. we can clearly know their main goal of the code is to edit the rubric. There are 3 types of action: edit, add, and delete questions. We classify these actions into two types: major change and minor change."
1,the author describe the project from their current version to what they want to change. And also we can see their design pattarn form the design diagrams
1,"The test plan is really good, they have segregated their test scenarios into three parts - common cases, invalid cases and extreme cases. I really liked this division, helps the reader to gain perspective regarding the functionality."
1,"Although there is no any class diagram associated with the proposed design and solution, the other visuals(Use case diagram and Data flow diagram) make up for the same."
1,The design seems a bit intricate but they have tried to explain in the best possible manner.
1,The have explained the proposed design via a use case diagram and a Data flow diagram. Both of these diagram seemed good enough for explaining the design.
1,Design docs contain the proper test plan
1,Design doc contains relevant diagrams.
1,Design looks fines and contains appropriate principles and patterns
1,The tests have been well thought off and mentioned cases also consider edge cases but more can be added upon implementation.
1,The implementation of major changes and minor changes have been defined clearly and diagram represents them.
1,Yes the design is very simple and clear in its wordings and the implementation and method for applying changes has also been mentioned in a very clear way. The design is simple and precise to the point . They are not overly complicating the things.
1,The design document clearly indicate the path of action and also the impact of the associated changes in the application.  The design is sound and also the way in which they have classified things as major and minor is very useful.
1,yes there exists UML and such diagrams in the documentation that explain the overview of the proposed changes.The naming could have been a little more relavent
1,"Yes, they have carefully added comprehensive test plan in their doc, including common cases, invalid cases, and extreme cases. They have carefully thought about possible edge-cases."
1,"Yes, the flow chart includes everything needed, which contains all three parts to be modified - the edit, add, and delete actions."
1,"They have clearly clarrified all four goals to this project and sufficiently stated their design pattern. The flow chart of this functionality appears to be comprehensive. Besides, they have stated all proposed solutions step by step."
1,"The tests defined look great as they cover most of the scenarios leading to the issue at hand and show promise in testing the functionalities. I am very sure that the team might find more cases, specifically an edge case or two when they actually start implementing the changes in the code."
1,"The visualization included in the design is very helpful in understanding the flow of the changes that the team plans to make. The 2 diagrams, namely, User Case diagram and the Data Flow Diagram are also great visual aids in describing the user case and the data flow involved. The team does a very good job by classifying their changes/actions into 2 types i.e. minor and major. This helps in understanding the impact of every change to be made."
1,The design appears to be very clear and concise. It is straightforward and introduces and explains the team's project very clearly. The flow of the design is also very natural as every section builds on the previous ones and adds more to the design.
1,"The design appears to follow appropriate principles and use appropriate patterns. It does so by having a 'Goal to the project' section and a Project Description section, wherein the authors explain what the current implementation of the topic at hand is and how they plan to change it. The wiki also has 2 figures which represent Use Case and the Data Flow diagrams. The design also includes a Test Plan section which gives an insight into the planned testing for the issue."
1,"The solution that is being proposed is intuitive. This makes it easier to understand. Further, the presence of flow diagrams makes the proposed solution crystal clear"
0,Albeit explaining well. it is not very easy to traverse through the document.
0,"yes, the class diagram and other figures clearly describe the changes to be made to the system"
0,"yes, the design appear to be as simple as possible"
1,"The test cases are completed. I would add to that if some steps of testing, say a walk through of the process, for example "" instructor login - create assignment - enroll student ...."" could be listed then it would be better."
1,"The two graphs represents the implementation as well as user interaction well. Though one could, let's say add specific files (controllers) which react with the model in the path to better represent the change the project is going to make."
1,"The question is by nature hard, many things need to be touched, especially the ""when someone has already done the review and we have to ask them to do it again"" part of it. I believe the steps listed in this document is complete and not redundant."
1,"I do not see a design pattern specifically mentioned in this work, but the steps and resources (files) are pretty comprehensive, therefore I would say it is sound."
1,"Yes, the design includes a test plan which covers the different types of tests they will be carrying out."
1,"Yes, proper visual aids have been used to help user understand the flow."
1,"The design appears to be sound and complete. However, no specific design patterns have been used as such."
1,"The team got the test plan included. And they did very well since they discussed about three cases including common cases, invalid cases, extreme cases."
1,"They explained the changes to be made to the system clearly, but it would be better if they could give more screenshot to help understand."
1,"Yes, the design followed appropriate principles and used appropriate patterns. And they provided illustrations to help the reader understand the flow of the changes."
0,"Yes, it passed in the last commit."
0,Build is passing.
0,The pull request has passed.
0,Yes build is passing
0,yes the travis CI passes and there is no conflict with the base branch.
0,"Yes, the Build passes and there are no conflicts"
0,"Yes, it can be deployed. Yes, this is a good starting point for the future team to pick up."
0,Yes it is
0,Good to go.
1,"I think the code they have written is good enough compared to the rest of the code. However, the add_reviews method is very long and if they can separate out some portions of it to make it more modular it would be better."
1,"I think it is a good starting place for future team. I think so because the overall code coverage has decreased. My biggest concern is that, the team has not added any test cases. Overall the code looks good. I can't say much because the instance is not running in vcl."
1,I am not sure if the project has to be done from scratch or not but the UI just crashed so i don't think it must be deployed in production
0,The writeup is clear and complete.
0,The writeup is the best part of the whole project. It is pretty much detailed and well-written
0,It is well written and have improved previous problems
1,"The write up was not extensive. It only had screenshots of what they've done. No design, implementation, test plan sections. No description of problem statement or tasks. I have given this comment in the previous round as well."
1,"1) They have create a wiki page for their writeup
2) The writeup is not well explained, instead of explain everything in words or work-plan follow, they use a lot of screenshots
3) The code comes with enough logic explanation but no reason for why they do it in this way
4) The size of screenshots need to be adjust"
1,I think the server stopped. Unable to test it on the UI
1,Can't test as the instance in the vcl was not running.
1,"1) There project should be test from UI
2) Everything works and the part they implemented also works as it was required to"
1,"The team added has test cases,the coverage has decreased. So,there are not many newly added test cases,so considerable amount of test cases have to be written"
1,No new test cases were added as previously the test case for the functionality was already written. They didn't add a single test case for the project.
1,"The coverage has decreased but this might just be an issue with travis, as this has been reported by the TA.
The team has modified a test case but i don't see any test case being added"
1,"1) They have modified existing tests to suit their implementation
2) It seems they delete more Rspec test than add new ones, also the coverage drops
3) I could not figure out their test's relationship with their implementation since there is no comments at all"
1,"Yes, some new code was committed and TRAVIS CI failed for many cases, finally it worked"
0,The code is great.
1,"No, didn't found problems related to this during both reviews as the code written has not such major modifications."
1,"Overall the code has been written with ruby conventions.But,there could have been comments included in the code for easy understanding"
1,"1) No bad names for variables and methods 
2) There is no method too long and the code is DRY enough
3) There should be more comments about test part"
1,No comments in their test.
1,The code does not contain comments at all.
1,"No, there are no comments and it made the code difficult to understand."
1,"comments missing in the code, but the documentation covers that."
1,There has not been comments written explicitly when the methods have changed
1,They did not add comments which explained the code. They have some code that has been commented out left in the pull request in the spec/models/vm_question_response_spec.rb file.
1,There are no comments in the code.
1,Comments haven't been added properly throughout the code. Can be improved.
1,It is quite clear to see what the problem was and the proposed solution to address the problem.
1,"Unfortunately,though there have been several changes made in the existing repo,there have not been sufficient comments put as to why has the changes been made"
1,Everything is well formatted. Documentation is easy to follow. It was a little tough to understand at the start. I would suggest to to change the introduction because I had to read it 5 times just to understand the what the problem was.
1,"1) The writeup provides a user story and its background which makes it pretty clear to understand the problem
2) No design pattern was used"
0,Explanation is good in the write up and design pattern is followed properly.
1,They have a section called Tests other than Test Plan which did the same thing. The tests section could have been more detailed making reviewers could easily understand the major steps of the test.
1,The write up does nit include test plan section but does mention the work done. I also think there should be a ending section including the result and various commands to run the environment.
1,"There has been a test plan . Though there are testcases written to test,there are few redundant code lines that exist in response_spec"
1,No test plan but they did add tests as i can tell from their pull request.
1,"The write up includes a test plan and they have written many tests, but I can not see many tests on edge cases, almost all of the test cases are for expected scenario in normal conditions. Hence I don't think the test cases are complete.
More over i can see only one test case being changes in the pull request and none are added."
1,"1) They have modified the test files to test their implementation
2) The test is not enough, it does not consider potential edge/fail situation but only succeed situation"
1,"Yes, I can understand the functionality related to the work. However, more specific details about the test procedures and test results should be included."
1,"Need to add more information in the writeup. Such as design, implementation and test case related."
1,Write up is a little hard to follow at first. I think some of the sentences such as one in the introduction should be changed so that it becomes easier to understand.
1,Write up is elaborative and is adequate. It is easy to understand as well
1,"1) I could barely understand what they did from the writeup
2) The writeup is not adequate enough but give many words and pictures
3) The size of picture is too big to be shown on the screen"
1,The writeup is pretty informative but the only thing lacking is the user guidance to test the scenarios.
1,Need more clarity in comments and then everything is good.
1,"Yes, it works well."
1,The team has done a good job in completing the features and they work as expected in all cases that i could think of
1,"1) The cases seems to be working, but because the details were not clearly mentioned in the Wiki, it was tough to get it working.
2) Please add more details or maybe a video to your wiki so that anyone can easily login to the system and follow the instructions to test the features."
0,All the features work properly.
0,Everything is working well.
0,All of the above is proper in the code according to me
1,1) more comments are needed.
1,The functions are not too long and also the code follows the ruby style.But the code needs more comments
0,Good code
0,Everything in this section is proper and requires no modification according to me.
1,"The code is properly written, as mentioned before comments are not added and that is the only concern"
1,"1) Generally, it is very good, no long function, no too long code, does follow RSG and DRY enough
2) There definitely should be more comment to help read"
1,Not much code has been added and whatever code is added uses the existing variables.
1,The final commit representing the whole test passed the checking process. Names used in the test are quite reasonable and instructive.
1,The variables and method names are consistent in the code. Some variables like f_back doesn't seem well fitting.
1,"The build is passed but,the code coverage is reduced"
0,Yes all names are intuitive
1,Change some of the variable names such as f_back. It is hard to follow
1,"The team has not changed too much of code which is a good thing, whatever code has been added by them follows coding standards and variable names are intuitive, and standard.
 
The only suggestion i would have is, instead of participant = Participant.find_by(id: feedback.reviewee_id) they could have used reviewee= Participant.find_by(id: feedback.reviewee_id)
participant seems a bit generic"
1,"1) Generally, it is good since it's only a bug fix project, not much implementatoin
2) Some variables names could be improved like 'vm', hard to know what it means
3) Could be some comment for the code to help understand"
1,Class names and variables are used but variables name can be better.
1,The tests section is too concise. It is better that more details are give in this section corresponding to every test in the test file.
1,They seem to have added tests. Just check why the coverage is decreasing.
0,They have covered all the test cases and everything is working fine.
1,"I can see all tests being passed in the pull request. However the test plan does not discuss on in depth test plan, that might probably because of the less complexity of functionality"
1,"1) They have modified tests to fit their implementation
2) The tests is not enough, it only considers succeed cases, more situations should be considered"
1,There is no test plan but the test cases have been written in RSPEC according to the requirements of the issue which is valid and is explained clearly in the wiki page.
1,They are missing a few implementations but overall its all good.
1,"The team did give explanations on every issue. However, all the explanations are not specific enough. They give guide on how to solve the issue but haven't specified it to function and class."
0,No such problems so far.
1,"The design pattern diagram was useful, but it didn't help me understand how this pattern fit in with the project. The wiki says that there are ""multiple handlers with responses"", but I'm not sure what exactly this means regarding the project. It would be helpful to connect the pattern more to an in depth description of the applicable functionality. The code modified section lists what files will be changed, but not which methods. It should give more details about what the changes will be. This would let the reader understand how the design works with the code. For instance, what method will be called when the team reaches 50%? Since the new design is event driven, response time shouldn't be slow (polling isn't required to check the team's size constantly). Similarly, it doesn't look like any class changes will make the code smelly, but is hard to tell without details about changes to the classes/methods. I think the project is  supposed to focus only on assignments without topics. However, the project description states ""Assignments with or without a topic could be assigned with mentors automatically""."
1,"The UI screenshots, flowchart, and chain of responsibility diagram were all helpful in understanding the design. I would add a UML to help the reader better understand the intended code changes better. Since there are no UI changes, no new UI mockups are needed."
1,"Good visual aids, the text of the second graph can be larger."
0,It seems to.
1,More test plan can be added.
1,"Testing could be more specific, for example having steps of ""creating assignment, adding mentors to pool, insert team member, check if mentor is assigned."" Doesn't have to be complete, something that could point out the direction would be sufficient at this stage"
1,"The test section says that new Rspec and UI tests will be added, but there are no tests provided. These should be added to the wiki. Apart from this, the design, testing, and purpose sections all exist. I would just add a test plan that checks if mentors are assigned once a team has filled up halfway."
1,"Yes, the design includes the 'Test Plan' section. The section basically provide the direction what the team is going to do on this project but may need more details or explanation. More details may need to be provided for Rspec Test and UI test respectively."
1,"There is a test section, but it doesn't have many details. It just says that the team needs to update old RSpec tests, add new ones, and do UI testing. However, there are no lists of RSpec tests that need to be added. There are no UI tests either. It is important to have UI tests beforehand so that you can validate that you are creating the correct product."
1,"I feel that the test plan could be a bit more in depth than just a brief overview, but it at least covers the general of what needs to be done."
1,"Test plan is not explained enough in the document. There are absolutely no details for the UI testing and Rspec testing, what all test cases will be executed, how one can ensure that the project has been completed successfully."
1,"The team has identified the design pattern to use but no details have been given. They say multiple handlers are involved, but it would be great if they can be more precise on which handlers/entities are involved."
1,"The design appears to generally be sound. The team is using the chain of command pattern, as there are multiple handlers of trigger events. I find it a little confusing how this pattern fits in. Are the handlers the classes for the mentors and students? Or is it the flow through requirements and assignments, as in the flowchart? They do list what files they plan to change, and state what needs to be changed. I think the design is good, but more detail on the design pattern would be helpful."
1,"I think some more detail could have gone into the proposed solution, elaborating on each of the bullet points."
1,"The authors list what changes they need to make to the system. They also list what features they need to add. However, they don't really explain why the files they chose to change need to be changed. They explain their goals and what needs to change, but there is not connection between the two."
1,The team listed the files in controller and models that might be modified during this project which is clear. More details or explanation may be helpful if how they are going to modify the code or what will be added/deleted about the code could be provided.
1,"Yes, they use figures well. It is better if they can put the workflow diagram in the middle of the page"
1,Flow diagrams are clear and one can understand it easily. Class diagram can be added to the design as that will help what are the classes that'll be extended to achieve the desired functionality.
1,"1) book should have a 1-to-n relationship with book requests.
2) librarian should have an n-to-1 relationship with library and university.
3) library should have an n-to-1 relationship with university and an n-to-1 relationship with librarians."
1,"Pull request has been made since round 1, so I think it is good."
1,No conflicts are present. The latest commit has passed Travis CI build
1,yes the pull request passed the Travis CI build.
1,"All tests are passing. 
However, schema.rb was committed and wasn't reverted."
1,"Yes, the build passed in Travis CI. So there is no conflict to resolve."
1,I think it's ready to be deployed.
1,Not sure. The test coverage has decreased.
1,"Of course, it is good enough./"
1,It can be merged.
1,yes I think the code is ready to be deployed. everything looks fine and it passed the Travis CI build as well.
1,"Project can be deployed. 
Next team can pick up from here."
1,"I think they have done a good job enough to be merged into production server, because their code is clear and follows Ruby Style."
1,"Although all their changes seem easy to understand, but I think they still need some comments between their code."
1,"They updated more test plan, which is good. Really good write up."
1,It is elaborate and complete.
1,I think it is clearly and easy understandable.
1,Same comment as last time. Providing navigation to test the changes shall help understand better.
1,"the writeup is very well written. the work done is clearly explained, the problem, tasks, approach, deployment, and tests are explicitly mentioned."
1,The wiki is written in great detail and is contained.
1,"The writeup is easy to follow, I can understand their work."
1,"Their writeup is well-organized and beautiful. I like their code part in their writeup, as it is clear to see what they changed for their functions."
1,"UI works fine, except could test all the functionality in the given time frame."
1,UI is perfect fit the style of other part.
1,the project works as intended. all the features work as they are supposed to be.
1,"Task1: working as expected. Institution names appear in alphabetical order.
Task2: working as expected. New institution can be created
Task3: working as expected. Institute is displayed against instructors."
1,"Everything works fine to me, I check manually all the functionalities they implemented."
1,"Yes, their function works as intended."
0,The wiki page has plenty of details about the task and how they approached their solution. Good job on the documentation.
0,the tests are well written.
0,"The code follows the style guidelines, contains method of appropriate length and properly named variables."
0,No comments added
0,Code looks good.
0,The project itself was to write tests. No explicit test plan section
0,Writeup is detailed and nicely done.
0,Write up is clear and adequate
1,"the test cases cover most edge cases,
however this method handles duplicated edge cases



 


context 'and due_at value not nil' do"
0,the test-plan is not explicitly mentioned since the project is on testing.
1,"the code is well organised and contexts and it are covered appropriately
 but in topic name class



 


describe "".topic_name"" do


 
 
 context 'when topic name empty' do


 
 
 it ""return -"" do


 
 
 expect(student_task.topic_name).to eq(""-"")


 
 
 end


 
 
 end


 
 
 context 'when topic name empty' do


 
 
 it ""return topic name"" do


 
 
 



two different scenarios are provided for the same context"
1,"- even though most test_cases are easy to comprehend, some comments could be added to specify the function tested by each method
- Also the test_method names can be more descriptive, elaborating on what the particular operation is performed on
-"
1,"the method names are specified however the function and implementation details can be more broadly specified since. 
The method names can follow to the ruby naming practices, by inserting  '_'  between any 2 words within the method name.
For example, the method 
 

complete? can be changed to task_complete? or  stage_deadline_complete? 
Get_due_date_data can be changed to get_due_date_timeline since it returns the time_line specifically"
0,The code works well. There was no feature or edge cases because it was test case.
0,"There was no test plan. However, authors have tested most of the code in student_task."
0,"Everything looks good. They followed the ruby style guide with proper indentation, which makes it easier to read. The code is DRY. Functions are small and tidy."
1,"They have created variable named ""participant3"", ""response2"", but i can't find use of it in the code, so I would suggest removing the unused variables."
1,"They have tested pre conditions, but have not tested invalid input values and edge cases."
1,"It was clear to understand what they were trying to accomplish. They haven't used any design patterns, because they were writing test cases. There was no explanation of what Student_task.rb does, so it is tough for a reader to understand. I would suggest writing a short write-up on what student_task.rb does."
1,"Write up was good, I think there should be short description of what student_task.rb does and how it works on the project."
0,All the tests pass. There are no new features added.
0,All the tests pass correctly.
0,The test examples are all concise and easy to follow.
0,Yes. It describes each test case well in the .rspec file.
0,Yes. The writeup clearly lists the methods they intended to test and in the .rspec file each example is descriptive of what it's testing. It's easy to understand why each example exists.
0,"Yes. It is about increasing the test coverage of student_task.rb, and the writeup lists all the methods they wanted to test. They did it by inspecting the coverage report and adding test examples to increase coverage"
0,"Given that it only adds test cases, naming convention doesnt really apply. The test coverage has gone down according to the PR, So giving 4/5."
0,The code is not commented at all.
0,"While the code seems good, it is not commented. But because it is a Rspec file, it is pretty much self explanatory. Good job."
1,"As preemptively mentioned in the documentation, the test for reviews_given? does not work. Rest is fine."
0,The write up is quite informative and and has adequate descriptions related to all the documentation sections.
0,"Although they have added tests for various student tasks, but there are no comments associated with the test cases."
0,Yes they have covered all the test cases.
0,All the unit test cases related to the student tasks are passed.
0,"Yes, the writeup looks good with the test plans written along with the code provided for each section."
0,This project is mainly related to writing the test cases. They have covered good number and ways of scenarios to be tested. i do not have any critics.
0,"The project was to write the test cases and team has done good job. I have looked into the test cases, they have tried to cover many scenarios in the testing like  different stages of assignment, review deadlines, project deadlines."
1,"Write up is really good, i have given a review of adding description for all the test cases and to my surprise team has actually done it and i can easily understand now what they have done in test cases. team has given all the possible  details about the project like what exact thing they are testing in UI, how they are testing, where they are testing, where a reviewer can go and test, what was coverage before and what is latest coverage, Only this i felt is its too much of information, but team is not able to present it well, like make different heading and categorize things they want to show. its like placed little randomly or in a hidden way that a person have to dig very deep to find reviewer wants to know."
0,"Yes, these test cases make total sense to me and i think they can be put easily in production server."
0,"I'm not the best at writing RSpec tests, but it looks good to me."
0,"I am hesitant to say this covers all scenarios as there could always be some bizarre edge-case I can't think of due to the nature of expertiza, but as far as I can say the tests seem to be exhaustive."
0,"They have already completed their project in first round. Thus, no new commits"
1,- Code was written well but as stated earlier they haven't followed the convention of using '.' and '#' in the right places.
0,- The build is passing meaning that the new test cases added didn't break the build.
0,- The test cases mentioned in the wiki are working fine.
1,- As mentioned in the previous review that they haven't followed the convention of using '.' for Class method and '#' for instance methods in most of the places so I would want to get that refactored before merging to the main project.
0,- Written test cases works fine.
1,- Convention in `describe` not used in many places. They have used '.' in many places for instance method when they were supposed to use `#` with them.
1,"- Problems in naming convention in the `decribe` block. Should us '#' instead of '.' for instance variables.
- Increase in code coverage in the screenshot attached but the PR shows otherwise may wanna understand how they defer."
0,- They have described steps to setup and possible caveats.
1,"- Can add more details on what particular scenarios they are testing.
- Under the heading description of the current project, they can add little details about the scenario in front of their method name. Just a small description will do."
1,"- Very well explained but I am already using and working on the app but a new user may not grasp it so quickly. Adding more details about student tasks apart from their method name would really be helpful.
Example: xyz(): used to create a user"
0,There is no new commits during 2nd round.
0,"Yes, the build passes and there is no merge conflict."
0,The write-up was already well-written.
0,"No, I think the code is well written by following proper ruby coding standards."
0,yes a new commit was added during 2nd round.
0,Yes the Travis CI passes.
0,The wiki page is very well documented and can be understood easily.
0,"yes the build has passed in Travis CI, before the 2nd round."
0,"the newly added test-cases has increased the coverage of the specified project, but the coverage of the whole project has reduced.

Coverage decreased (-23.1%) to 7.341% when pulling d9dec9f on tusharkundra:beta into 28eb0da on expertiza:beta."
0,"the UI need nit be tested
The tests added"
0,"yes, the code is ready to be deployed"
0,PR already merged
0,Conflicts are resolved and PR's merged
0,Code coverage decreased by 23%
0,Detailed write up
0,"No concerns were reported in the first round, the same code exists now as well."
0,Yes there are commits after 1st round of reviews.
0,"Yes new test cases were added, but the coverage dropped after this PR."
1,"Given that this is a project to add test cases, the measurable output should be an increase in test coverage, but it has surprisingly dropped. I however dont think it is because of their code, but rather some issues with coverall (as some other teams too have reported issues with a drop in coverage despite adding new cases). So my only concern would to verify if the code coverage has increased for real. If yes, I think the code is ready to be released to prod."
0,"Suggestion was made to add comments to the code, changes regarding the same are not done."
0,No improvements were suggested in round 1.
1,"There are few test case contexts which could have been merged into one. eg. context 'when topic name empty'
There are two contexts with same description which is not self explanatory and could have been combined into one context. 
 
Comments are required as it was hard to go through the code."
0,There are no comments
0,"It is clear from the writeup about what they did in the project. However, it was hard to understand the need and the problem statement of the project from their writeup."
0,"Its RSpec testing, so though there are not comments, the way the tests are written are intuitive enough to understand."
1,"Judging from looking at their pull request, video, etc, yes. However, there isn't enough documentation to the tests in the wiki. I have to go very far out of my way to find this stuff when it would be much easier to just view it from the wiki itself."
0,Seems good to me. They talked about why they had to do it and how they were going to do it. A little more specificity on the cases that would be covered would have been nice.
0,yes they have converted all of them in test cases.
0,yes team has commented the test cases and give good description about what they are going to do and also name explains that too.
0,Yes they have increased coverage to 90% which team has considered as target from way beginning in test plan also. the have given good description to test cases and they are self explaining
1,"Yes, team has explained well about what test cases they are going to write, and why they decided to write those test cases. Though they have not used design pattern. And it would be nice if team can explain about test cases. because some test cases are hard to follow and in order to understand it you will have to understand the background of it. 
Example hyperlinks? what does current stage means?"
1,"Wiki page can be improved.,it would be nice if they can give project description and problem statement before sharing the test plan. Indentation can be improved, Team has used etc etc word alot that can be improved. They have give all teh details in references, team members and mentor that i like."
0,Edge cases are working
0,All the tests pass
0,No there aren't comments for methods
0,The test naming is done very nicely
0,Not a plan but a general description
0,Yes it is clear to follow what they did
0,Yes the write-up is pretty well written and explains the working
0,Test coverage decrease.
1,I think the test which submit last round is good enough.
1,The team has thoroughly tested the added functionalities. I see test cases for all the issues they have covered.
1,no new test cases were added and coverage didn't increase. but the old tests pretty much covers the project.
1,"The team has added extensive tests and seem through.
The coverage, from what I can see, has decreased."
1,"They add test cases for the code they changed. The coverage decreased.
There's no new added tests, so the coverage remains same as round 1."
1,"Yes, they have added test cases but the coverage doesn't increase. With their wiki, I think their tests they added have already covered the most common situation of their function."
0,I see only two commits.
1,"Yes, there are some new change has been made in 2nd round."
1,No new commits have been made during 2nd round. The last one was made on Oct 29th. Must be because the functionality is complete.
1,no new code was committed during the 2nd round.
1,There were 2 commit made after the 1st round.
1,There's no commit in 2rd round.
1,"Yes, they have new code committed after the first round submission."
1,I found a few places where the redundant code was present. Functions could have been cut to a smaller line of codes.
1,It looks good.
1,"Since the first round itself, there weren't any coding issues. All is fine. There were no comments, at all, but it's fine as the code and variable names are self explanatory."
1,"the code is well written. it has meaningful method names, following the DRY principle. but could've added more comments."
1,"The code is clean and DRY.
The only problem is that they can add more tests to it."
1,The code is written well but lacks comments.
1,Comments are present everywhere.
1,"Nope, but the code is kind of self-explanatory."
1,could've added more comments to clearly explain the functionality of the methods.
1,"There is only one method added and no, it does not have comments. However, the method is just a few lines of code and simple enough to understand so I think it's understandable to leave out comments."
1,No comments have been made for the committed code.
1,Yes they have comments for their code which is helpful to understand what they were trying to do.
1,"No, there are no comments. But for each task, they've only add a few lines of code, and they are easy to read. So I'll say no comment is fine."
1,Test plan looks complete and comprehensive.
1,Authors have considered all cases.
1,the test looks complete enough. tests for each of the tasks are included. all the possibilities were considered. test plan could've been more descriptive.
1,Yes. The tasks of this project are about some specific scenarios. The tests cover all of them.
1,The test plan section is just called test but has all the required information for test plan. The required tests have been mentioned in the testing plan.
1,Yes they have testing for all three tasks.
1,"No, there's no test plan in their wiki. But they've provided many Rspec test code in their wiki. Those code are easy to read."
1,"Good writting, really clear writeup."
1,"Please add link to your pull request. https://github.com/expertiza/expertiza/pull/1506 
Also please provide navigation for each task the reviewers should take to check. Shall really help. Rest all looks good to me."
1,the writeup briefly explains the functionality of the work. it pretty much explains what the project does and how the tasks have been implemented.
1,Yes. It's concise and descriptive of the project.
1,"The document has been written very well. From explaining the problem, how to solve it and how to test it, the document has everything."
1,the write has adequately detailed the project and the code is added. I would recommend not to include the instruction to Expertiza as it is redundant.
1,It would be better if they could add more comments in their wiki. Even though the code they wrote is easy to read.
1,Writeup explains everything in detail.
1,"The purpose of the work, how it is achieved is clearly stated."
1,"the writeup is very well documented. clearly explains the author's work. the problem statement, tasks, tests, project videos, and deployment are clearly mentioned."
1,"Yes. It's easy to read and explains the work clearly. It also includes the goal, the solution, the result, and the tests for each task. There are no specific design patterns that they needed to use to fix the features."
1,The wiki page is very well written with detailed explanation of whta needs to be done and how the team has done it.
1,Yes the writeup is well organized. Also the videos they provided are helpful for understanding what they have done for their project. I would recommend adding more something like  flow charts on their page so that reviewer can quickly follow them.
0,"Yes, in the wiki, they provide details about what they did, what the problem is."
0,"Could not verify the operation and testing as the deployment link does not load.
As this was a refactoring project, there was hypothetically no need for an actual deployment link, the team had still provided one and showed the testing on the deployed link in their YouTube video."
1,"I think that this code is ready to be deployed onto the production server for the OSS project
I do not have any concerns about the project, apart from the fact that new test cases have not been added. And no explanation of not adding new test cases has been given. 
The project need not be redone from scratch using a different approach as it is a refactoring project & the team has already done almost all of the work required. This may be considered a good starting place for a future team to pick up and add test cases for the code written or explanation on where any why i is no needed."
0,"last commit show is of 6 days ago, so i don't think team has made any changes after review 1."
0,Less commits in the second round.
0,"There was only commit during round 1, which was adding comments."
1,"This code did a good job of following ruby practices. For instance, many methods were renamed to not repeat redundant information (new_quiz was changed to new because it's in the quiz controller. Methods were refactored into helper methods to dry out the code (i.e. update_checkbox)"
0,No new code has been added in the 2nd round.
1,"All the new if-else conditional blocks are commented nicely, which help in understanding the flow in an even better way.
The rest of the changes, although minor should also be commented to help the reader understand the purpose of the changes."
1,Rspec was done throuoghly and code structure was followed. Although more comments could be added to specify the changes.
1,More comments could be added as to changes in the previous methods and the main functionality of the implemented method.
1,"Although self-explanatory, the team can do a better job at writing comments for the new methods created."
1,The test plan have been written as part of automated tests.But they could have been extensively written including the test cases
1,"(1) Long function issue has been resolved by the team.
(2) Code has been extracted to separate methods appropriately (as in case of create method)
(3) Comments have not been added when new functions are created. No new comments have been added by the team to make following the code easier
(4) The code does follow the Ruby Style Guide.
(5) Code is DRY & does not have any smells."
1,"Yes, the write up explains all the work done by the authors and also, why they did what they did and the way they did it.
The before & after of their code refactoring has been clearly mentioned.
Everything is easy to follow."
1,"The write up explains in detail, the functionality of the work done by the team. This being a refactoring project, the authors have provided sufficient details of what issue was there with the code previously and what they have done to improve it. I can clearly understand how & what the project does from reading the writeup."
1,"They did fix some problems that I mentioned in last review, that is good.
Suggestion:
1. The test video needs a permit and the viewer cannot see it.
2. Please paste the Rspec code to the wiki page, and give the comments."
1,"this team changed a little files and do not have comment.
e.g.
1. there is a new function average_based_on_rubric, and there is no any comment.
2. like this line: validates_format_of :url, :multiline => true, :with => /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/, they tried to set the limitation of url, however, they did not give any explanation and makes the reviewer be hard to understand."
1,"The wiki pages wrote about the precise procedure to what to do about the bookmark, that is great but There were too many words instead of the code changing and also I cannot see the video in the middle.
The wiki pages do not explain the way you fix the problem."
1,"1. They wrote a lot about what to do of the bookmark functionality, however, there is nothing about the solution and how they fix these issues. 
2. I cannot watch the video in which there's a video link on the wiki page.
3. Please add the code part to show what files you changed and the details about the code.
4. please add the test part like the Rspec test."
1,I think it's better to describe the problem first in your Problem Statement part.
0,"Yes, all the functionalities are there."
0,"Yes, the design doc seems to have incorporated all the functionalities of the conference/journal assignments from the requirements doc."
1,"- The document incorporates all the functionality
- It is unclear whether the feature is already implemented and the team is improving on it or the it is to be implemented from start"
0,"Yes, the design incorporates all of the functionality required."
0,"Yes, the design seems to incorporate most of the required functionality."
1,"> The design statement looks pretty detailed out and includes all the functionalities required.
> The sequence diagram gives a good understanding of what needs to be achieved."
1,"Overall the main functionality has been described properly.
The Google doc talks about two more things which were not covered in the Wiki Page:
1. A generalized review code has to be implemented/modified to let reviewers bid on papers (just like our normal project selection.)
2. What if a co-author clicks on 2 different links and becomes a part of two different conferences? The Google doc says that a team should be responsible for only one assignment. So a way to handle such a scenario should be thought of.
These topics are not mentioned in the Future Scope either. And hence I'm putting this problem down here."
0,All functionalities have been understood and a plan for implementing the same has been shared.
0,"The tasks to be accomplished section indicates the motto of the project.
The design lists all the steps needed to accomplish the tasks like the checking flow, what needs to be created etc."
1,They don't have a test plan and database design. Should add how they are gonna test the functionality and what will be the DB changes as part of this project.
0,Yes the design incorporates all the functionalities mentioned in the google doc.
0,Your design doc is missing test plan.
1,The document is missing the test plan that would be implemented to validate each fix.
1,"- Test plan must be included as the team intendes to add multiple features which may modify core features such as user signup
- Test plan may include tests for new features as well as tests for existing features if the are modified in some cases"
1,"The testing plan is missing. I know it is difficult to come up with test cases right now, but write few one-liners on ideas for implementing testing. Rest all looks good to me."
1,"Except for the test plan, everything else is included and is well documented."
1,"> Project description, purpose, design and changes proposed have been very well defined.
> However, testing plan needs to be included.
> Some use case diagram could have also been added. However, sequence diagram serves most of the purpose."
1,"I feel that they should have added at least the testing files which would be affected/which they would modify, corresponding to the controllers that they are planning to edit. For example, as they are planning to bypass admin approval for creating accounts, this will definitely affect the existing test case and they will have to develop new ones especially to handle the conference author & co-author case."
1,"Most of the aspects are covered. However, there is no testing plan. The team needs to add a UI and Rspec testing plan."
1,"-The intention of the team is reached to the reviewer but with a lot of effort. 
-The wiki page can be improved by adding pictorial diagrams and also code snippets where the team thinks changes to take place.
-Pretty confusing when we read for the first time like what needs to happen when the admin creates a link for the author and should the co authors be validated etc. Needed to refer the projects doc.
-Can include the important reference links that the team is referring to so that it will help the reviewers while doing the review."
1,The design doc should have been written a little more elaboratively as to describe the plan of work and what are the things they are exactly working on in brief.
1,All the feature works well .
1,Normal features work fine. Corner cases are hard to test manually.
1,"All the three tasks are working as expected. Universities are in sorted order, I am able to add new instructor with new university(Auburn), universities are listed in list of users page."
1,the features work as intended. all the three tasks work as they are intended to be.
1,Yes. The features all work correctly and there's no errors when I test.
1,"Task1: Alphabetically listing university names: Working fine.
Task2: Adding a new institution during creation of an instructor profile: Manage Users page doesn't load, request timed out
Task3: Listing of instructors should show their institutions on the same line: Manage Users page doesn't load, request timed out"
1,Yes all the features work pretty well as expected.  The institutions are listing alphabetically. A new institution can be added when creating instructor profile. Related institutions would be on the same line when I list the instructors.
1,"Yes, I checked the wiki page add see the work they need to do. They've successfully finished their job. They've handled all three issues."
1,"On a whole it's a nice code.
Functions are not too long. Need not require separate methods. Some comments might help, but not essential to understand. follows ruby style guide. smell free."
1,more comments are needed. though for some methods the method name itself is self-explanatory adding comments could've made things easier to understand and more clear.
1,It follows common Ruby style well and no functions are hard to read.
1,"The methods look fine and have separated logic as expected.
However, it is possible to refactor instructor_id method in user model."
1,"1. not too long;  2. no code needs to be extracted in to separate methods  3. although their code and the comment is readable enough, i think more comments would be helpful absolutely;  4. they followed the ruby style guide;  5. code seems DRY to me"
1,"(1) No, no functions are too long.
(2) Yes, in User controller, two create methods have some duplicated code
(3) No
(4) Yes, their code are following the ruby style guide
(5) No"
1,Variable names are relevant.
1,Test coverage has decreased a little. Naming conventions are all simple and understandable.
1,pull request is not given so cannot comment on the build pass/failure. the variable method and class names are appropriate.
1,"The naming is clear and descriptive. The test coverage decreased, but every team I have reviewed so far has decreased coverage, even with the teams that only added new tests and no other codes, so I think it's not their problem."
1,"No pull request has been created in spite of making the required changes and committing them.
The variable/method names in the commits look fine."
1,"The team didn't provide the URL of the pull request, so i couldn't check the build pass and coverage. Most of the names are reasonable."
1,"The variables, methods and class names meet the code standard."
1,"Yes, they have."
1,Tests have been added for every task.
1,all the test cases for each task have been converted into automated tests.
1,The tests all passed.
1,"The test plan has sufficiently well covering tests and these tests have been implemented as it can been seen in the provided videos.
However, these tests don't seem to have been committed as the code for some of the tests is missing in the pull request."
1,They got a detailed description of the testing.
1,"No, all test case passed."
1,i pulled their code and tested it manually and test cases are working perfectly fine and team has done very good coverage of test cases.
1,Their code seems good in the first submission. All the methods and names are in Ruby style. They have already did a great job. So they don't need to change them in this round.
1,"There is a link given in the document to another document which gives the details of Gale-Shapely (supposedly algorithm in question to implement). It would have been helpful if a gist of the document was mentioned in the wiki.
Team could have included a flow chart or a diagram explaining different domains and their responsibilities for all of the proposed changes.
Initially it was hard to comprehend what exactly their changes are going to be as the changes proposed are embedded in the problem statement and challenges"
1,The test plan is pretty solid but I feel it could add some additional information like how are they going to test it and how are going to ensure that their code would have 100% coverage.
1,"Basic tests are mentioned. However, tests are shallow, could have included more edge cases and descriptive tests that are going to be written in RSpec."
1,"The changes to the system with respect to code are not much described. However, on the high level the inclusion of budding algorithm, functional  & non-functional requirements is good and clear."
0,They have mentioned in an overview what the team wishes to test. This is enough for now
1,"Yes, the team has provided some diagrams which help to understand the system better.
However, a flowchart would have been a good addition to consolidate all the ideas laid out"
0,The team seems to have learnt well what changes are required and what needs to be done
1,"The test plan is not detailed enough. It should mention the functions/files that will be tested. Also, if a new service is being introduced, it needs to be tested independently, with its unit tests as well as integration tests for the entire application. The test plan doesnt cover this."
1,"As in the previous review, the diagrams are very intuitive for the existing system. No visual representation exists to explain the proposed logic."
1,I dont remember seeing a mention of external Flask service in the earlier draft. Just not sure if this service needs to be an external application in itself deployed on an independent server. Creating a new application can raise a lot of potential issues for maintenance. Can this logic not be embedded into existing expertiza application? Does the logic of matching qualify to be an independent service? I hope you have taken into consideration all these factors. https://webmasters.stackexchange.com/questions/49832/what-qualifies-as-a-rest-web-service Here is a link that might be helpful in deciding.
1,The testing does not cover all the functionality and include automated test plan for the implementation. Explain in detail about the tests. The existing test section does not test the bidding part in all dimensions.
1,"No, they did not use any UML diagrams to explain the solution or the changes to be made. Use a class diagram showing internal changes to be made to the system."
1,Their design gives us the basic details about the problem and how the problem can be solved but does not explain about the internal implementation of the exact code changes required. The design requires improvement and it does not contain about the design patterns.
1,- Why do you need a separate infrastructure of the flask? Shouldn't this be part of the existing Expertiza code base? Why add more complexity?
1,"The test plan looks decent as of now however I would suggest that you also add the exact steps in testing from the UI.
Moreover, include edge cases encountered (during the implementation) and also make a note of how these cases are being handled by the altered code."
1,"There are no class or UML diagrams involved and as mentioned earlier, this would be by far the only thing that goes missing in the document. 
Pictorial stuff should be added to the document to make it easy for the user to visualize what exactly is happening in the system.
Also include a flow chart that gives  a bigger picture of the implementation and specifically under the approach section."
1,"I think that team did a great job in explaining about the changes being done to the system however, this makes the document look more textual and daunting.
I would recommend that the team add some annotate screenshots once the implementation is done.
This would not only make the document more user friendly but also let the wiki doc serve its purpose."
1,"The test plan can be elaborated to include how they plan to test in addition to what they plan to test. 
For example,

Testing that the color-coding feature is working and appropriate.

Testing the color-coding feature is understandable, but can include how they plan to conduct test to check if color-coding feature is working or not
Also the testing for ""appropriateness"" is abstract"
1,"The writer has included  2 diagrams along with the below lines
""The Mathematical formulation is itself wrong in E1856 and E1928 and they have used the below shown diagram to represent the relationship"".
Though this serves as visual aid, it's misleading as the process the diagram describes is wrong"
1,"In the topic,
Approach for matching students with topics
the variables used

both the variables are different but in the lines that follow
""calculate k, p|, and p|. The goal is for each topic to be assigned to either p| and p| students""
The 2 variables appear similar. 
Either the variable names can to be changed in picture or appropriate documentation should be present
Further these variables must be defined before use"
1,Test plan includes what different kind of test they are going to perform.Also some test with UI is good to add
1,"Diagrams have been added to explain the relation between reviewer and reviews, which is good.
However, additionally, a flow diagram would have really helped to understand their thought and approach."
1,"The issues in current implementation have been explained very well. Although not much is written about their plan and what changes they are going to bring in.
It would be great if the team identified parts of code related to the present implementation and at least build around what they plan to change and where"
1,"Overall, it is a good document.
Some details need to be added in all sections of the document to help the reader understand that the team has a clear plan of implementation."
1,The diagrams present are helpful in understanding the current design. I would recommend the team to have mapping diagram as is the case in current implementation for the proposed solution as well. This will be helpful in understanding the incoming changes/impacts.
1,"The proposed changes are nicely listed in the document. One suggestion would be to put in the technical changes as well, meaning the classes or functions that you plan to change/introduce."
1,"The document is pretty complete in itself, except for the code part. I would like to see some file/function names that this design would impact to get a clearer picture."
1,The design document does not involve any UML diagrams. They have used a diagrammatic approach for explaining the implementation of the mapping.  Please add UML diagrams explaining the design approach.
1,I was unable to follow the changes required to be made to the code. Include the code which has to be changed and also the files which has to be changed. This gives a clear understanding. They have mentioned the algorithm to be implemented but do not give an overall view for the approach.
1,The design document requires the addition of the UML diagrams and database design to explain it in a better way. Other details are included but elaborate on the testing plan to be done.
1,- They can create a UML diagram for functional design instead of listing it which will make it easy to understand the entire flow of things.
1,"- Nothing related to the implementation was provided. They should at least mention the probable file changes. For this, they can refer previous implementations to get a basic idea of what and where changes need to be done."
1,"- They listed out why previous work was not good but I do not see why their work is better. They claim they need to implement Gale Shapely algorithm because they were asked to but do not much content to support it. 
- Also, they suggested that they might consider algorithms but should the design phase consider this fact? They should already have an algorithm in mind."
1,"- Needs more UML diagrams.
- I would love to see some basic details on the implementation
- They can explain a bit more about the algorithm they are planning to use and why it is better."
1,"The mapping diagrams clearly explain the cardinality of the entities so great job on that!
However, I would also recommend that you add some project specific use case UML diagrams as well as database design schema which would make the implementation even more elaborate.
The test plan really looks highly abstract and I would recommend that you give a brief description of each of the tests which would also benefit other reviewing users.
Also adding some annotated screenshots is a must."
1,"Nothing was explained about the alterations to be in the current code and the files that need to be modified without which not much could be commented on whether a wrong method was added or whether the code looks 'smelly'. 
The document just gives a brief idea of the project and does not focus much on the code implementation part."
1,"As mentioned previously, the changes proposed by the author is to the point and clear. However, there are some sections that need to be even more elaborate.
Include a brief summary of the tests for each of the features being changed/ implemented.
Make use of flow chart to explain how the bidding algorithm works or write down what's happening in an algorithmic form.
Avoid using links and include the content in your document as well."
1,"The design document incorporates most of the functionalities required and also clearly explains their proposed solutions.
However, I would suggest that you also give a gist of what was done previously rather than just including links like 'E1856' and 'E1928' respectively.
Make sure that you summarize what was implemented in the same document itself, since this would prevent unnecessary navigation to other site as well as let the document serve its full purpose."
1,"The document looks complete in all its aspects except that it should be a little verbose at places mentioned in the above comments as well as some images should be added for better visualizations and understanding.
Make a tentative list of the files that would be changed or altered during the process.
If possible also give a gist of the changes made in each of those files."
1,"The writer has included  2 diagrams along with the below lines
 
The Mathematical formulation is itself wrong in E1856 and E1928 and they have used the below shown diagram to represent the relationship.
Though this serves as visual aid, it's misleading as the process the diagram describes is wrong"
1,"in the section:
 
Why does the difference is the representation matter?
 
Since they have modeled the problem on the same lines, they have used the same version of the Gale-Shapley or Top Trading Cycles Algorithm used for one-to-many or one-to-one approach. Famous Problems Dealt on these lines.
 
the above lines could be explained, since everyone might not have a background of understanding the algorithm mentioned. It would be better if they can include a simple overview of the algorithm"
1,"Again, I think the authors should be more specific as to how they will be actually implementing the code."
1,The authors have explained the problem and the solution in great detail but I think they could have been more specific with regards to what steps they plan on undertaking.
1,The test plan section could be more detailed.
1,"the second diagram (mathematical formulation) should be more detailed as the difference is not clearly visible on first view.
Some other diagrams can be included"
1,"The plan is quite good but more explanation on how they are going to solve it is required to judge the pitfalls in the system, if any."
1,"They have provided links for the previous implementation which is nice. Also, diagrams describing one-one and many-many are also good to understand. There are certain mistakes of spelling like reviewer and reviewer, which should be reviewer and reviewee"
1,"Yes, there is separate functional requirement section in the documentation regarding that. They have mentioned of the new algorithm, they are going to implement."
0,I think they may choosed the right class to change
1,"There are diagrams included to explain why existing system is wrong, but the team could have also included diagrams to show the approach they are planning to use."
1,"For most part, the design does include all of the functionality required but, all of the details are listed under 
What needs to be done?
 
Though background is detailed the approach for implementation is not. The team has mostly focused on what is wrong with existing solution rather than striking a balance between what is wrong with existing solution and what is the approach."
1,"1) diagrams are good to understand what the issue is and how they gonna resolve it.
2) the second diagram  (mathematical formulation) should be more detailed as the difference is  not clearly visible on first view."
1,"1) diagrams representing relationship (one to one and many to many ) is quite clear and good to understand the issue. 
-----------
2) check for spelling message like in
Why Should a Student bid for Reviewing Submissions?
This would benefit both the reviewer and reviewer 
Instead it should be reviewee."
1,"Yes, there are regular commits on the repository."
1,"Yes, the team kept on adding new and new changes."
1,"35 commits over the period, team has been active and updating the repo regularly"
0,I do not see the code.
1,"Yes, they do have pushed code time to time. It would be better if they had used issues functionality of github project."
0,Sorry...I couldn't see the code.
0,It takes a while to figure it out but it's functional
1,Overall UI is good. You have made it simple and concise but not reaching to proper location after pressing back button. Work Flows are can be improved. For student it is showing status of book as checked out but when I look for checked out books it is not displaying any book there. Over all at some placed it becomes confusing to understand the behavior of application but minor fixed will definitely make everything perfect.
1,"- The UI starts with asking user to either sign up or login as a student/librarian. In terms of UI perspective, it can be improved a lot to give the user a look and feel and also allowing users to understand the functionality well.You can create two buttons and displaying appropriate forms based on selection.
-Also, since the log in/sign up is divided into two forms, entering the admin credentials is not accepted by both the forms thereby failure of admin login.
-Once we sign into the UI, all the options are jumbled and there is a text overlap confusing the user.
Overall, the functionalities work and can be understood.but can be better."
1,"Could not locate the README file since the repo is not public. Since this is just the first round, I understand that some of the pieces need re-work. Hopefully, my suggestions would help :- Please provide `Back` button on all pages. Little counter-intuitive to use the Browser's back page- There were errors when I hit a Back button from Student Edit page
See screenshots
https://snipboard.io/ha5HRl.jpg"
1,The code is structured as expected from the standards of Ruby and Rails. Code in views can be moved to helper files for reuse.
0,Should not write application logic in controllers
1,It follows usual good practices overall. Just add more comments in the code and refactor some code from books controller to model which is related to business logic. Also make sure that all the links/buttons included in UI have some responding action attached as Show button in books list of librarian login home page redirect to error page.
0,"Yes, the testing plan seems very reasonable and can test the whole project"
0,"Yes, the test plan is there with explanations."
0,Yes it does include the test plan it is highly localized
0,"Yes, the test plan has been laid and all tests have been explained well."
0,"Yes, they have mentioned a very elaborate test plan. It includes an overview of how they intend to test their functionality using RSpec"
0,"Yes, the flow chart perfectly explains the workflow of the project, another recommendation would be including a UML diagram to describe the structure of the project in whole"
0,The team has added one flowchart to present the flow of the actions. It helps in understanding the system.
0,"Yes. Like I said in the first round, I like the way they've used the flowchart to indicate the changes and the code flow for both, the students and the instructors"
0,Yes the figure are appropriate and captures the flow of application.
0,"1) The visualization is excellent and really helpful
2) Diagrams well explained how their project works"
1,- No changes done on the suggested changes. They are stating CORS as a separate task yet again.
0,"Yes, from the flow chart, it looks like the solution is as easy as adding a few conditionals, and CRUD operations to save/retrieve feedback. I am not sure how complex the queries will be."
1,"Proposed solution seems very reasonable and feasible, however, the team did not include any design principles or patterns they are gonna use"
0,The design appears to be sound.
0,The design is quite sound. There is appropriate flow in the design which helps us understand the document better.
0,"The proposed solution is sound, in that the team has explained every little step they'll take. It looks  like the solution is well-thought and should solve the issue."
1,yes they did mentioned the files that they are gonna change but there is no explanation on why that file in particular to modify. if that would have been given it will be much easier for everyone to understand.
1,"As tests are already made for their final project, some details regarding possible UI testing would have been good."
1,"They could have added some visuals to explain phase 2 of the project in some more details. Other than that, they have used sufficient visuals."
1,"According to the document, no tests need be added. However, these participants have still laid out how they will use existing tests to test their functionality."
0,As far as I can tell. It's difficult to determine since I'm unfamiliar with Servo.
0,"This is difficult for me to determine as, again, I am unfamiliar with Servo."
1,"The design does include a detailed test plan.
The tests that have already been conducted as a part of the OSS project and the ones that the team plans to run after completion of the final project changes are not shallow and they will really test the functionalities implemented in the project.
The team has not really mentioned about writing any new tests. The test plan mentions a plan to test the projects using existing tests, such as:

Check if code follows style guidelines
Check if code has no compilation errors
Check if servo is built successfully
Check if test pass, i.e. servo can process srcdoc iframes:"
1,"The team has added a flow chart to explain a high-level view of their proposed solution.
This I believe will greatly help any person reading the document.
Also, the images used to explain the HTML page content as well as the DOM tree are really useful for a person who may not understand what DOM features are."
1,"The design proposed by the team appears to simple and straight forward.
It is easy to understand and give a clear idea of what and how the team plans to work on the project.
The flow of the proposed project design is also easy to understand and has been well described by the team."
1,"The project design appears to be sound and well-thought-out.
The team has rightly mentioned that design patterns are not applicable to their project as it involves the implementation of methods and modifying various files and that the implementation section provides details of why certain steps were implemented the way they were."
1,"The authors have laid out a detailed stepwise plan of the changes that have already been made to the system as a part of the OSS project, as well as the changes that the team plans to make as a part of the final project, under the scope section of the document."
1,"- They added a flow chart for showing the step of changes they need to do in this process.
- I have given them one less star because I feel that the arrow based UML diagram implies that a sequence is involved but are these changes sequential? Will it affect the end result by changing a step in the sequence?"
1,"- The design, coding standard and pattern is as per the servo guidelines and is appropriate for this current project."
1,"- Given the specific changes and need of the issue, they have given enough information for the readers to understand the changes needed."
1,The team's test plan seems adequate and they are thoroughly informed as to what to test and what to expect. This specific approach is neatly explained as well. Probably can add a few more edge cases for the DOM test scenario.
1,"They have added plenty of legible flowcharts for the DOM, their implementation and many Github code diffs. This vastly increases the impact of the design doc."
1,The design is clear and their detailed explanations help others understand what the project does and what its steps are. The changes are easy to follow and looks like the implementation is also simple enough once one understands the logic.
1,There is a test plan section which explains how to test the changes but I think they are slightly vague and could be elaborated on a bit more.
1,There are many screenshots and a flowchart included which make understanding the project flow quite easy. My only issue is that the final project section feels a bit lacking when it comes to screenshots compared to the earlier section.
1,"The design for the entire project, that is the OSS and final parts is quite clear as flowcharts make the flow easy to understand."
1,"The explanations are in great detail and are quite sufficient in my opinion. Again, it feels the final project section could be a bit better compared to the OSS project section as they have done an exceptional job in the latter."
1,"It does include the test plan in detail. Also the team has mentioned that there are some issues because of the test cases from Servo's end, so the pull request will be raised based on the resolution of blocker."
1,"I don't think that this project/document should have UML or class diagrams.
There's a flow diagram in the document which explains process or flow for the changes and that's quite helpful."
1,"There's no design section in the document also team has mentioned about why they don't have one. 
I think the way changes has been done and explained is enough to understand. Minute details are included for everything which is really helpful to understand the changes and the project."
1,"There are no design principles to be followed in the project, as clearly mentioned in the document. 
Team has given the explanation for why certain changes are made in specific way and that explains enough."
1,"Code changes are explained in detail, why certain changes are done in specific files and why that's the best way to do it."
1,Yes. They have included the test plan for the final project. It seems they have done most of the testing part in the OSS project step itself. But they have made a separate section for the final project. They have described the match utility commands to test their system.
1,"Yes, they have utilized the flow-chart diagram to explain their design strategy."
1,The design looks comprehensive and simple. The flow chart in the design document clearly explains their design.
1,"Yes, their design looks good. As mentioned in the earlier review, they have used good flow diagrams to clearly explain the changes they are making to their project."
1,"Yes. The document looks comprehensive. They have included screenshots of the system, flow chart for the design strategy and a food testing plan.  It is easy to understand and follow the document."
1,"- Yes the doc includes a test plan
- The test seems to be already in place and the team must make sure the their changes must not break existing changes
- Must try to add new tests if required"
1,The explanation is given in steps it is easy to understand. Also the explanation is reasonable and comprehensive and easy for the reader to follow. The design appears to be simple.
1,"visual aids are not present in the documentation that is related to this issue. however, I believe that there is no such specific thing that can be explained via any diagrams."
1,They did stated all the changes that they have decides to change. It looks complete from my point of view to resolve the issue present in the problem statement.
1,design document does address all the aspect of the issue but still I think they should add more about the solution instead of just writing what files that they are going to change. if they add some description about files then it will be easy for anyone to review.
1,"Pros: They have made use of sufficient visual aids to explain what they have implemented so far.
Cons: Maybe one diagram regarding the flow of data would be good to have and some figures regarding how this phase of the project would be achieved."
1,Design is good and well documented. They just need to add some more relevant details regarding this phase of the implementation.
1,They have explained the previous phase in good details. Some more details regarding the implementation for this phase should have been added. I could not find the changes proposed specially for phase 2.
1,The design is detailed and incorporates the requirements thoroughly. Some lack of visual aids for this part of the project make the otherwise good document lacking in some ways.
1,The visual aids and implementation section are missing. (Obviously the implementation section will be filled out once there has been implementation.)
1,"The visual aids ie. the diagrams used to introduce what DOM features are is great. It helps the reader understand what DOM features are.
There are no diagrams or visual aids to explain the flow of what the team plans to implement in the final project or their test plan or design plan. 
Suggestion:
- Adding visual aids for design plan/project flow/test plan would help the reader understand the project much faster and much better."
1,"The team has explained the project using flowcharts of DOM and screenshots of their test plans.
All the diagrams are easy to understand and provide the details needed."
1,"Their changes are appropriately made.
The code doesn't look smelly. The logic flows naturally and all naming conventions are also followed.
No gems in Rust. The design is simple enough.
I don't think the response time will be affected by their changes.
No more effort needs to be invested in the design doc."
1,"1) There is no concept of classes in Rust.
2) The design plan seems to be appropriate and will not make the code smelly.
3) It is not a Ruby on Rails-based project so, there is no question of existing gems.
4) The new design is adding a feature that currently does not exist, so effect to response time is out of the question.
5) The design documents appears to e great, adding some kind of visual aid explaining the project plan would go along way improving the design document."
1,"Changes to be implemented as a part of this final project have been given in a detailed and pointwise manner, which is easy to read and understand for the reader."
1,"I believe the design document is complete as it covers the required aspects:
- Purpose: Covered as a part of the scope and initial intro
,- Project Design: It does not have any details about the project design
- Test Plan: The test plan for the final project is well defined."
1,"- No UML diagrams related to this particular change provided. 
- A diagram showing the probable state diagram of what should happen with the change. Example: The problem is not able to get named getter so showing the flow of thing reaching to this step before and after the fix would help us understand the issue a bit more."
1,- The doc is in continuation of the previous project and has many details. It's great that they added some information about what is the problem user-facing and what would happen after
1,- The changes are very specific as specified in the issue on Servo GitHub so cannot argue much about that. They have mentioned everything that they need to do in this project.
1,- Overall almost complete but I would love to see some more UML diagrams of the flow of the states before and after the changes.
1,"The team has maintained the documentation page really well and has explained the setup of the local environment for this project, introduction to Rust and Servo and the methodological process to make their proposed changes to the DOM. Their efforts for the Final Project are clearly stated and the test plan has also been explained."
1,"As of right now, the design doc seems complete. More information can be added to the doc if they are asked to address some other issue by their Mozilla mentor."
1,Doesn't contain many explanatory diagrams. Contains more code snippets from the previous OSS submission.
1,"The document seems almost complete. However, if the team adds more elaborate implementation, would be better."
0,Complete
1,The comments are well written for the OSS project section but the final project section could be more descriptive.
1,Again I feel the final project section is a bit lacking as the authors have just listed their plan and not elaborated on them. I know what their plan is but do not understand how they will go about doing it.
1,"Team has specifically mentioned in the document that design patterns are not applicable for this project. As far as i tried to understand the code, changes looks good to me. They have given proper explanation for the changes."
1,"Team has explained code changes in the document. They could explain the changes based on the two issues, it would have been be better for the third person to understand changes and issues respectively. I really cannot comment on the changes proposed in the code by the author are good or not, as i am not familiar with any such language or project."
1,Yes the author have explained the changes required
1,One of the best test plan I have gone through/reviewed. The visuals associated with each scenario are really helpful and self explanatory
1,"The test plans have not been discussed in the write-up. In each scenario that they have mentioned, they could have written the different test cases that they are proposing to write.  Example - Scenario 2: Author(s) get emailed when a reviewer has reviewed their work, they can mention the test cases and the plan of testing how is the author getting email."
1,Yes. They have listed down which files they are going to change and which part of the code has to be modified. They have mentioned on their wiki page that they haven't started implementing it. The design looks clean.
1,They have given a good explanation of what is expected from them in this project and what they are going to do to implement it. They have also given the flow diagram. This makes it easy to understand.
1,They have used flow charts to explain the various scenarios associated with the test plan which I found to be helpful for my understanding.
1,"- The issue states implementing missing DOM features and the authors have specified each feature to be implemented and the changes expected
- The document doesn't seem to specify any design changes proposed by the authors"
1,The document contains the appropriate software principles and patterns. No pattern was adopted but the design looks sound.
1,"There's no diagram in the doc.
I hope they can draw a diagram to make the changes more clear in the future."
1,"Yes, the team has mentioned all the functionalities that are required and mentioned in the google doc."
1,"- The document says the tests have already been written which is a good practice in behavior driven design
- The Doc must contain some information regarding how each feature would be tested"
1,The team has used visual aids which are easy to understand.
0,The authors haven't proposed any design changes.
1,"Design is simple and clear, yet the authors can put some snapshot of how and from where the functionality is called."
0,"Yes, the design seems simple enough."
0,The design appears good.
0,"Yes, the authors well explained all tests plans."
0,"Yes, changes are explained adequately."
0,"Yes, the authors have adequately explained the changes to be made to the system."
1,"No test plan exists at all. 
No section about running existing test cases.
No section about writing new test cases or modifying existing test cases.
 
Suggestions:
- add a detailed test plan (including running existing test cases, adding new ones or even modifying existing ones)"
1,"Test Plan is very straightforward and it does not include any edge cases. More test cases can be added like: if required,is functionality where more than 2 TA's perform review of a same assignment supported of not."
0,The test plan looks complete on preliminary exam. They have identified all the edge cases as far as I am able to comprehend
1,"Pro: They added the cases that they will have to test.
Cons: The test plan needs steps for UI testing and automated testing via Rspec. This change would allow them to better understand the flow they need to modify making work go faster."
1,"No, the flow chart is wrong well actually it is according to there previous solution where the instructor or ta is a participant. There current proposed solution suggests adding a ""hidden"" field (which again is bad variable name) check if it is on or not. So I suggest changing flow chart."
0,The team has used visualizations to explain the proposed changes
0,The authors have done an excellent work of using visual aids for describing the proposed system . It helps in getting a clearer view of the system proposed.
0,"Yes, it is simple as possible."
0,The  design flow is logical and simple.
0,"Yes, the design appears good and simple."
0,- The design seems complex and the changes need to be explained clearly in the doc
0,Yes the design and approach they mentioned seems well explained and simple & easy to understand.
0,The authors have lucidly explained the changes that needs to be done in the project. The ease of explanation as well as abstracting details to give a higher level view makes it easier to understand what authors wants to convey. The design is also intuitive and use of examples provide a better illustration of the information to be potrayed
0,The doc is very clear and flows smoothly. They have presented their approach and solution in lucid detail.
0,The write does give a good overall view as to how the approach is being undertaken. it does seem simple and straightforward .
1,"Yes, the design appears to be sound. But the proposed implementation in issue 1.1 to make authorization helper file does sound fishy as it can be checked through if conditions or I suspect expertiza should have the implementation of checking whether the user is course staff member so I don't think it is necessary to create new helper file.
Also, they suggested adding field name hidden which I think is a very bad name for the variable. Here hidden is used to indicate if the user is hidden or not which is not indicative in a variable name. So I suggest the name to change to is_hidden_participant or something like that."
0,"Yes, they have mentioned the approach how they are going to solve this."
0,Yes the design appear to be sound and follow principles.
0,"The design appear to be sound, following appropriate principles and using appropriate patterns. The design document contains Problem Statement, Current Scenario and Proposed Implementations and Activity Diagram of the Proposed Implementation."
1,"The proposed design plans to reuse the existing code, thus, follows DRY principle. However, the design suggestion to add a hidden field is not a scalable solution but seems like a hack, a better solution should be thought after before implementing the code."
0,The design presented is sound and well thought out. THey have detailed explanation of how they are going to go about in implementation.
0,"Yes, the design does seem sound and is following the appropriate patterns."
1,"Though the design document covers all the important content that should be in a design document, the way it is structured does not follow appropriate principles and appropriate patterns.
I think the team should have a Goal and Scope of the Project section at the very beginning ( before the Problem Statement section) which has the Goal of the project stated clearly.
It would also be a good design practice if the design document is not sectioned into issues themselves. I would suggest sections like Current Implementation, Requirement, Proposed changes and Expected Outcome, all of which will have information related to all the issues."
0,Yes they are well explained.
0,The authors have adequately explained the changes made to the system.
0,"Yes, they have mentioned the changes done to the system."
0,- Must elaborate the change planned for each issue
0,Yes the changes are mentioned with detail view and approach they will take to solve this issue.
0,The team has taken the 1st review into account and modified the doc accordingly.
1,The diagrams are pretty good.but in the activity diagram they should ask a mentor if the instructor can do a review after the deadline if ye then they would have to change the diagram.
0,UML has been used to describe the flow in detail.
1,"Diagram depicts the approach very well observing the current scenario.
One thing missing as per the current approach is ""checking if the user is a TA/Instructor"" before ""Is TA/Instructor a participant""."
0,They can add different forms of diagrams to explain. There is no issue with the ones added.
0,Flowchart was made to show the approach to solve the problem
0,"The proposed changes have not been explained in detail, hence I am not sure if it is the right fix."
1,"I think Issue 2.1 and Issue 2.2 can be merged in to a single method and a simpler implementation can be figured out. I am not sure of this but I am assuming that there might be a place in the framework itself where you can get list of all the instructors and TAs of the course and if you get that list, approach to tackle Issue 2.2 and 2.3 can be refined."
1,"For the issue, allow TA/Instructor to add himself as a participant, the proposed implementation is not good. Some sort of role based permission mapping should be added."
0,Without more explanation I cannot say for sure if it is the case or not.
0,The design seems good and would not introduce any code smells.
0,The approach seems pretty solid and doesn't seem to lead to smelly code.
0,Yes the proposed changes are easy to follow and overall quality of explanation is good.
0,The proposed changes have not been explained in detail.
0,"The explanations are very well written, easy to understand and are sufficiently detailed."
1,"Though a proposed solution is given for each issue, what exactly is being changed is not clear enough. By this I mean, what files around the existing files are being considered, what technically is being changed, and an understanding of what other files are dependent on the files being changed is not clear."
0,Yes design incorporate all functionality
0,The design document included all the required functionality.
0,The explanation for proposed changes is a little vague.
0,All the functionalities are well described and given good explanations on the doc.
1,"The design document does incorporate all the functionalities to be implemented. Although, the project has already been done but there were a few challenges and comments written in the google doc. Maybe mentioning how this design would override the projects already done, and how this code would be cleaner compared to the code already submitted, would help in understanding the difference in approach in a much better way."
0,The design doc contains all topics required.
1,"Code-Level specifics including proposed files to be changed and methods to be implemented is not clear.
Design Pattern to be implemented needs to be decided."
1,No test plan found. There should be a section of how they plan to test their requirement manually (UI testing) and automatically (RSpec testing). This is an important part a design doc as this will make the project TDD.
1,Test plan and automated testing approach seems to be missing in the doc. Also more insight into why the existing code fails and how it is being improved will give a better understanding of the project at hand.
0,"It is not very clear how simple the team is making the design. 
As the team has not mentioned what method they plan to edit/add and where in the code"
0,"1) They explained problem first and then propose solution
2) The changes are explained step by step which make them easy to follow"
1,"The team has very nicely structured the wiki page and has explained all the required changes to be done using a flowchart demonstrating the flow of events and how they will be handling external API calls, file changes, and tests.
The output of PeerLogic API for some example text can be provided. Also, it is worth noting that the new design may degrade the response time while saving a review as an external API call will be made for evaluating the text reviews. A user may be given an option to whether he wants to have such suggestions or not as this may turn out to annoying for some."
0,It includes a short and sweet uml diagram making it simple and easy to understand.
0,"I like the way they've used the flowchart to indicate the changes and the code flow for both, the students and the instructor"
0,Visual aids are proper and makes the flow of the application clear.
1,A flowchart is given demonstrating the flow of events and where and how they will be handling external API calls. All of this is color-coded which makes it super easy to follow. It would have been a good idea to show the output of PeerLogic API for some text.
0,The visual aid and bullet pints were provided to give more clarity nd better explanation
1,"1) code is added to correct file.
2) It might make system slow if the API response time is higher. There shouldn't be any code smells.
3) They have not mentioned anything regarding how are they going to integrate the api in the system. There are couple of gems which could be handy 1) RestClient and 2) HTTP Party
4)It may not increase the response time, however it will make system more comprehensive and transparent."
1,"1) They have not provided changes to methods yet
2) Since design only propose general idea and implement it for specific roles, there is a possibility to make code ""smelly"". For example, simple add all methods/algorithms on user would make user contains too much
3) Since they will integrate new features, I don't think there existing gem could do it in a simpler way
4) Yes, and it is unavoidable, when every submit review the system will run algorithms. However, how much extra time would be spent is also part of problem itself
5) Overall it is good, but there could be more details about algorithms like input, output."
0,The explanation of the design is very clear and easy to understand
0,The explanation is good to understand.
0,I like the way they have also mentioned the anticipated code changes which is very informative and localized considering its the start of the project.
1,"- I like the language they used to explain the changes but some of the stuff seems like they are making stuff up to add more lines to the documents. For example, they used Check whether CORS needs to be enabled for calling API. This doesn't make sense and doesn't need a separate set of tasks to be listed.
Simple concept: In the frontend, if you are calling anything other than what belongs to your domain you need CORS in the backend you do not. 
Suggestion: Check the response time of the 3rd party API. If it is small write a wrapper in your rails code to avoid cors issue which you will surely face if you are doing it in the frontend."
0,"Yes, I the changes proposed by the authors seems to be logical way to go about this task."
0,"Explanation was clear, concise and easy to understand."
0,The explanation was detailed and covered all the points. Good job
0,The design incorporated all the functional requirements
0,"Yes, Functionalities are incorporated."
0,The team has nicely explained the problem statement and birds-eye view of their approach
0,The explanation was very clear and it sounds like the problem has been addressed fully.
0,The design doc covers the complete functionality. The team have well explained their goal.
0,The design doc has included everything.
0,I think its complete.
0,covered all the points pretty well.
0,They have provided appropriate visuals and screenshots explaining the current behavior of the system.
0,The design appears to be pretty straight forward and clear.
0,Their approach seems to be very well designed and they also have a backup for their approach.
0,"Yes, they use diagram to describe changes that will be made to this system."
0,"Yes, clear and simple."
0,"Yes, they have explained well about why they want to make a change and what they plan to do."
0,"Yes, they have a decent design in mind and a way forward."
1,They have added test plan for UI testing but they should have mentioned modifications/creation of specs.
0,Yes they have added the test plan describing the scenarios..
0,"Yes, the design is simple and easy to understand."
0,Yes they have added the details and clearly explained what needs to be done for the project
0,"An update in regards to workflow is being shown this time around, which definitely helps in understanding the big picture for the project. Also, UI changes have also been shown, helping in understanding what is to be done."
1,"The design for this project is mostly laid out and the problem statements is to show that the reports can be sorted in all browsers, and not specific to one browser. Previously, technical mentions to the same had been present, but now it is unclear as to how the same will be achieved."
0,yes the test plan is well described.
0,"Yes, they have made the changes suggested and design document is well documented."
1,"The documentation includes the test plan. However, it lacks the mention as which part of the functionality will be tested by which rspec test case. Test cases are important as, the newly proposed code change should not affect the already in place."
1,"Yes, the design appears simple when looked from the documentation perspective. However, the handling of the web page content can be a issue to handle, which depends on the implementation of the proposed code changes suggested by the team."
1,Authors should properly explain about Rspec tests and what they've done that tests won't fail. Some descriptions of new tests should also be provided.
0,Diagrams are properly commented and explained to give the reader a complete understanding of the proposal of their changes.
0,"Yes, design is simple and properly explained using visual aids."
0,Authors have put effort to find out different ways of achieving the task and selected the best one.
1,"The test plan for UI testing is simple and clear as well. My issue is with how the team has described writing tests for code changes, as it is quite brief. For instance, they could elaborate on what their plan is when writing new RSpec tests."
0,The team has made better use of screenshots and flowcharts compared to the previous round. The design is now way clearer and easy to understand.
0,"Yes, all tests are well planed."
0,"Yes, the designs for all problems are clear."
0,"Yes, the solutions of the team to each problem are well designed."
0,"To every issue mentioned,there have been diagrams added to explain the plan.Though the diagram is really helpful in quicker understanding,It would have been better if the diagram was concise"
1,"The design document talks about different issues and provide solutions accordingly.But,there has not been design patterns used"
1,"It does include the test plan. But they just mentioned that they are going to refactor existing code and run existing cases, write new test cases and haven't mentioned what really they are going to focus on the tests. It would have been better if they could mention the name of the module or functionality they are testing."
1,"Though there have been citations of issues and corresponding idea as to what is to be done ,helps.But also it is necessary that these be even more briefly explained with plan in code changes"
0,"Yes, they have well explained the changes to be made to the system. They correctly juxtaposed the given problem issue and the appropriate solution they are planning to implement."
0,The test plan is detailed enough.
0,"Like previously said, the design isn't presented well enough for the reader to understand."
0,"The design seems to be an extension of existing design, the changes being an extension of existing functionality."
0,It is kind of hard to grasp from the document the exact design the authors are proposing. So it cannot be said how good it is.
1,"The test plan is a bit vague, I would suggest the team to add files/method names that would be created/updated as part of this feature."
1,"The team has written the test plan. However, the authors have not included where the changes would be for the new RSpec test cases."
1,"The authors have provided necessary diagram using flow chart. However, few of the arrows direction are missing in the work flow, like when the feedback is given, the yes or no doesn't show the direction."
0,"Yes, the design seems ti be simple."
1,"The team mentioned the issues and also test plan for each issue they are going to fix.
Also, the files needed for the issue is also mentioned.
The test plan consisted of the test steps to reproduce and test the issue.
Since, it is the bug fixing and the it is not the enhancement that the team is going to do, the steps mentioned in the test plan seems reasonable and will really test the functionalities in my opinion.
Some of the other tests can be
-whether the meta review option is available if we login as a TA.
-What happens if the student has requested for a review and begin link is appearing on the screen or not etc."
1,"The team has included snapshots of the current issue by highlighting the issue which gives the user a good idea at quick glance about the issue.
Also, there is a flowchart that clearly indicates the flow of the two issues and what changes they are going to introduce to fix the bugs.
It would also be nice, if the team included a code snippet where the anticipated changes might come up for the reviewers to understand the thought process."
1,They have attached screenshots of what needs to be done but having mockups of tables would have been great way to make their changes more understandable.
1,"The author failed to mention the following issues which needs to be resolved : 
1) For “Author feedback report” table, change the header name “Review response rejoined” to “Review responded to” and “Last rejoined at” to “Last responded at”. Then, sort “Rejoinder” and “Review “Review responded to” as string (alphabetically), sort “# author feedbacks done” by the first number then the second number (same as “Review done” in the “View review report” table) and sort “Last responded at” as date.
 
2) For “Teammate review report” table, sort the first 3 columns as string and sort the last column as date. 
 
3) In Chrome on Windows 10, the dropdown has a tendency to freeze up, especially after one report has been viewed.  Please reproduce the problem, find a fix, and implement it"
1,"They miss three issues which needs to be addressed. Also, the test plan should be included."
1,"Yes, the team has mentioned what issues are there and how are they going to approach it.
The files that are needed to be modified and the link to the code files has been provided too.
The explained their hunch where the problem might be there is in the code files.
But it would have been great if the code snippets indicating the location where the code changes are anticipated to be made would have been attached in the wiki for the reviewers clarity."
1,"For the approach 2, they could add more explanation with design diagram."
1,The team has propeosed to change the already added method. The approach 2 add a new framework which might indirectly increase the time of the system.
1,"The 1st approach written by the team looks good. For the approach 2, i think there's no need to add a whole framework for this. The functionality can be added directly by manipulating the DOM structure."
1,"Yes they have aptly used diagrams to describe the proposed changes in the system.
Just that they missed one point made in the specification and have not covered any where in the design doc about the students should also be able to see the list of meta-reviews done by him/her just like the list of normal reviews."
1,"More specifics would be needed at this moment in time, to comment on the design. From the look of it, the design does seem solid, but how the solution will be coded is something I can't comment on, unless more specifics for the same are provided in the document."
1,"It does include the new functionalities to be incorporated, but including the older functionalities that have already been merged or implemented, would've given a broader view of the problem statement."
1,"A testing plan is missing in the document. Also I'm curious to see if the team uses Rspec at all, considering that the views are to be changed, and not the models or controllers (this is what I'm assuming from the design document)."
1,"They have placed the test plan, but there is nothing like RSPec test. Manual testing is good but it has its own disadvantages. They have not mentioned anything about rspec tests. I think addition of Rspec test will make it more robust and less prone to errors for future usage."
0,"Design is good, but they have not made any changes since last submission."
1,"The team has not stated any test plan. The document lacks the test cases and how the proposed changes will affect the remaining application. Also the UML diagrams are absent, which can help a reader to understand the scenario better."
1,"Design is not explained descriptively, so it is a bit difficult for the reader to understand what they are proposing of doing."
1,"The design doc is very abstract and does not include any test plan or tests section. On a positive side, they've mentioned multiple approaches to solve some problems."
1,"There are screenshots which describe the problem well, but UML diagrams and flowcharts were missing."
1,The authors have mentioned approaches for the 2 issues but I found them to be quite abstract and couldn't quite follow what the authors exactly plan to do to implement the proposed changes
1,"Yes, the design strategy looks good. It may solve the given issues but it would have been better if they could mention the design strategy they are following to implement the changes with a reasonable explanation."
1,"Other than lack of explanation of the plan to be followed, my concerns are that the authors should include more details in the problem statement and add a test plan section which is currently missing. The high-level explanation seems to be fine."
1,"Yes, the design appears to be sound an complete. However, the team has not mentioned any design pattern they will be leveraging."
0,I thin the design that they propose can help address this problem fully.
1,Project design can have some visual aid and testing part is missing.
1,They haven't included any high-level diagrams on the wiki page. At least a basic UML diagram like use case diagram could have been added or just the dataflow diagram.
1,The Deign doc is good enoguh. Consider adding a new section only for Testing
1,They have suggested solutions for each issue but it does not seem robust. They haven't included the files they will be modifying or the models they will be changing to fix the issues. Nothing can be commented if the code is smelly as there isn't mentioned about the code they will be modifying/adding.
0,"Yes, they have added the solution and approach they are going to follow to fix the issues."
0,The authors did not propose a design.
1,"The document seems incomplete
Testing plan is not mentioned.
The ReactJs approach is not described at all (if it is not designed, its better not to mention it - its okay if the current design does not work out and need arises for a new design later)."
1,"1. I think addition of Use Case and Sequence/Flowchart will help understand the design.
2. No requirement of UML here
3. None"
1,"1. The author have not described classed for Issue 1. 
2. No
3. I think the design is pretty good
4. I don't think it would increase response time.
5. No"
1,"I think few things are missing from design document and it is a bit ambiguous. I think the team should visually depict Use cases, flows, etc."
1,I think design can be more elaborated with explanation for approaches that team had yet to try.
0,"The team stated the problems to be fixed and also indicated in which file the issue can be at the end of each issue.
The motive seems to be pretty clear to fix the 3 issues related to the meta reviews which is the expected outcome."
1,"The wiki page is clear and conveys the intent of the team.
The team can include the code snippets if possible so that people who might have already worked on that feature can clearly guide them whether the point at which they are thinking to make change is appropriate or not according to their knowledge."
0,They have covered all the necessary sections of the design doc.
1,"As mentioned above, the flow chart of the design strategy of the last issue did not clarified what exactly to be done in response of different values of `isMetaEnabled`.
Besides, there should have been another figure on the second issue - showing the wrong number of meta-reviews left."
1,"The flow chart (design strategy) of the first two issues comprehensively cover all possible actions a reviewer may take, and none of it can be neglected.
However, the design strategy of the last issue is somehow implicit, it did not specify which field of functionalities to be displayed or hidden, precisely, what exactly ""meta fields"" stands for in the flow chart."
1,"I think from the doc it is really tough to understand what authors plan to do. Issue 3 Description and solution is well written and clear, However for issue1 and issue 2 it is tough to understand."
0,I could only see the wiki but code or interface.
0,There is no expertiza link in they submitted.
1,All major components of the design documents are explained in enough detail along with the diagrams. But they could have spent more time on the test plan for their project. They have just briefly described it two lines.  More details could have been provided along with file names or the classes/models of their concerns.
0,The changes proposed appear to be sound and it doesn't seem like the changes will lead to smelly code.
1,The flowchart looks very descriptive and explains the functionality pretty well and they are pretty helpful.
1,"The design proposed by the authors looks good. The authors do not plan to add method to any wrong class, the new design does not make the code smelly, there are no complications and the response time does not seem to increase."
1,"No visual descriptions, screens are provided. But since this is a test project, I don't think it should be of much importnce. Although, the team can create a small diagram explaining the scenarios which will be tested. Also, UML diargram can be used to explain the tests' relation with database."
1,"The design proposed by the authors seems good. Looks like they have designed it with care. The test plan is well documented.
 
1. I don't think they will have to add any method.
2. Code won't become smelly because team will be adding tests only.
3. I don't think any extra gem is needed. But if the team has thought of using some extra gem or if after some research they have concluded that it is better not to use extra gem, they can mention their reasons in the documentation.
4. Tests won't affect actual response time of the system. Maybe, they can write the tests to even check the actual response times if it is possible.5. Some more intregrated test can be added if possible."
1,The changes proposed by the author are clear and the test plan looks to be nicely designed. Just one problem is that they have not considered inter dependecing between those 5 use cases. Team can add some more tests covering multiple use cases in one to test them.
1,"Yes, the design seems to be covering all the required functionalities. The project is about testing and the scenario wise tests are mentioned in the test plan.I know it is very unlikely to happen but what if one use case interferes with another use case? I would suggest the team also to add some tests testing a few use cases interefering with each other. (i.e. happening at same time. for e.g.,  some author resubmitting the work after the review and instructor sending assignment deadline reminder notification at the same time.)"
0,There are no visual aids.
0,There are no diagrams
1,A UML diagram could have helped in understanding the flow.
1,"There are no visual aids which are used, the team could have used dependency graph to help the reader understand a bit more.
But i would like to give the benefit of doubt to the team as it is hard to come up with some visuals for any testing projects in general"
0,No pictorial representation is used.
0,"Since it is a test plan, the diagrams may not be applicable.
1. Not applicable
2. Not applicable.
3. Not applicable"
0,"1. No.
2. No.
3. No.
4. No.
5. No."
0,The author have purposed approaches to test the missing functionality for email and have explained their steps and test plan in detail.
1,Yes the design incorporate all the functionality required. The author may add Use case diagram for email functionality.
0,"The background and problem statement is not very clear, what is the problem details about?"
1,"In scenarios, they've written the name of controllers related to some functionality. To make it more informative they can provide the name of methods and different routes used to call them."
1,The authors approach is mentioned but the can also add the scenario that what will they do if the  testing fails. How will improve the functionality in that case
1,"- The authors have proposed the tests which they have planned to perform
- The document must highlight how the current testing for the feature is or if there isn't any and the need for each test they are writing. eg. method x must be tested as it is a query call or a command."
1,"All the other implement is good, the proposed approach does not include the design pattern analysis and design diagram."
0,- The document describes the features where mails are sent
0,Functionalities are covered.
0,all good but the design part.
0,The design is almost complete with a few changes that can be done.
1,"- The authors have clearly mentioned the purpose of the project and the approach they have planned
-The testing plan seems to be clear but include purpose behind adding each test"
0,The document looks complete.
1,"Overall the document is adequate, but is something visual was included it would have been the cherry on top of cake."
0,documentation is complete.
1,"They have embedded two Use Case diagrams. But both these diagrams are exactly the same. The description says that one is for teammate review and the other one is for view submission, but the diagram does not reflect it. It may have been by mistake. Both the diagrams are the same, one would have also been sufficient, the other is unnecessary."
0,UML diagram explains the flow of code and its helpful to understand whole design of the project.
0,Design is clear and easy to understand. Proper details are present in document to understand how the implementation would be done.
0,Plan proposed by user is clear and easy to understand.
0,Document mention clearly what is required to be done is this project
0,"Design doc looks complete, author have mentioned every thing for this project."
0,"No, they are adding things like creating a new controller. But it is too avoid complicated code in the current controller which the previous team has modified. I feel all the changes that they have specified make sense."
0,"Yes, they have captured all the requirements in their Wiki page."
0,They have included and explained all the mandatory sections. It is seen that they have given a lot of thought to their test plan. They have carefully jotted down each feature to test.
0,The authors have included visual aids.
0,The explanation is good.
0,Yes all the functionalities are included.
1,the two use case diagrams provided for two approaches are almost similar. more explanation needed for the use-case diagrams.
1,"The solutions are given for each problem. This is a good way to break it down, but changes to each file should be mentioned as well."
0,"Besides the diagrams, I think this design doc is very thoroughly completed."
0,This design document fully incorporates the required functionality and has great plans for how to refactor existing code.
0,"After reading this, I have a great idea of what functionality will be present after the change and how the students for this project intend to refactor existing code."
0,Use Case Diagram is very high level and lacks details. Seems taken from Expertiza wiki.
0,The changes that the authors have proposed seem good enough. The explanations are descriptive and understandable and adequate.
0,"Yes, the design looks robust and appropriate principles seem to have been used. The write-up also mentions those quite well."
0,"1) The test is deep enough
2) They covered how to test manually form UI
3) They also explained the automotive RSpec tests"
0,The authors do a great job of explaining why changes are required. They list each feature and what needs to be changed for it. This is under the Feedback and Improvements section. They state each problem and solution here.
0,"As this is a refactoring project, it focuses on simplifying everything. It plans to DRY out the code, as well as to manage the javascript used by the project. A new controller must be added as well."
0,Design is clear and very simple to understand. Helps to follow the functioning of the code.
0,"Yes, authors have explained the details about the changes to be made to the system."
0,the design appears to be pretty simple and precise.
0,"yes, the design doc has all the required things, following the patterns and appropriate principles."
0,Yes the authors have adequately explained the changes.
0,"Yes, the design document appears to be sound."
0,"Yeah, the existing code has many issues which they have properly identified. They have also provided reasonable solutions for the identified problems."
0,"Yes, team has provided very good and descriptive visualisation.  I am not sure how they have taken some of the data and made graphs."
0,"Team has given good information about in design document, they have covered all the details required for a design document, only thins is that they have not mentioned about which design principle they will be using and how."
0,"No, the way team has explained, design looks simple. Team has done good explanation of the design. They have made section about plan of work which is really descriptive and make it easy to understand."
0,"For every change they have proposed, there is a reasonable explanation supporting it."
0,"Yes, the design appear to be sound and the team seems to be using appropriate principles."
0,"Yes, the design seems simple as team have given thorough planning for UI, work flow and test plan."
0,"Yes, they have explained the changes very well."
0,I love the explanation and implementation for the design!
0,The visualization makes very clear how the proposed changes are designed and how they will affect the look of the system.
0,As simple as a design can be which attempts to consolidate multiple past attempts.
0,Explanations are detailed and sufficiently explain the changes to be made to the system.
0,Old and New graphs are added but use case diagram is not changed
0,"Yes, the design appears to be as simple as possible and with minimal complexity."
0,"Yes, the design includes a test plan, and also plans rspec tests. These tests really test the functionalities pretty well."
0,"Yes, the use case diagrams and the bar graphs explain the functionality and the changes to be made to the system pretty well."
0,"They have screenshots which shows what they are going to do in the project, which is understandable enough."
0,"The authors have adequately explained the proposed changes made to the system by including localized information about the issues  i.e. the files associated with a particular issue and the exact part of the code in that file that will actually be changed.
This helps in giving a view of how the issues will be resolved."
0,"The visual aids on the design document help in understanding the issues and proposed changes even better, especially the User case diagrams."
1,"1) There are only two diagrams for their design
2) The two diagrams are in the same screenshot with different size
3) The information is hard to get follow since it is not UML or some kind of work-flow
4) Also hard to see the difference of these diagrams"
1,"1) Each change are explained with problem and solution
2) All explanation are elegant and easy to understand
3) There could be a general explanation for the problem and how their work could solve it"
0,the authors pretty much explained all the changes to be made to the system in detail.
1,"Great explanation has been given regarding the project purpose which helped me to understand the purpose. The description about design principles could be expanded. Also, regarding the tests, more description could have been given regarding the tests, for eg. one line description regarding each test case."
1,"After seeing the requirement of 1985 in Google doc. I find there are a lot version of this function, and it seems that those version both have some drawback. I understand those version is provided for reference, but I think the instruction of this project should mention whether or not they will refer those code and the reason."
0,The explanation is fairly adequate.
0,The could have been more explanation for this.
0,"Some comments are hard to follow, but overall they are pretty intuitive and thorough."
1,"- The writeup mentions adding new methods but doesn't speficy how the methods would achieve the functionality.
eg. it's interesting to know how the course_staff_helper.rb would determine whether the current user is a student or a TA
- Adding TA as a participant might be confusing and might start showing up on the team in reviews, marks and probably other parts which might get very difficult to handle; 
Consider adding TA as another entity (reviewer or something) rather than participant and having only option to review"
1,The authors have diligently explained the changes they want to add to the servo code base.
0,The design seems to follow appropriate design principles. They have properly articulated their design in the document.
1,"Although the project seems a bit complex, but the steps help in proper understanding of the proposed solution."
1,"They have represented the flow of their steps via a diagram, helped in mapping the proposed solution to its implementation"
1,Testing section only include results form previous project. The team does not mention the new steps for this part for the project.
1,Diagrams are very descriptive. Snapshopt of Github help to easialy see the changed made to the code.
0,Design looks clean. There are enough sections in this report.
0,"This report seems complete. This project is a follow-up, so it makes sense to be with some degree of completeness."
0,"Overall, I don't see desciptions about the new modification to be done next."
1,"The design does include a detailed test plan.
The existing, currently passing tests are not shallow and they will really test the functionalities implemented in the project.
All of the 44 already existing test cases are passing currently.
The team has not really mentioned about writing any new tests. The test plan mentions a plan to test the projects using existing tests that the servo build is successful and no errors are reported."
1,"The team has added a new flow chart to explain the steps they plan to carry out in their implementation fo the final project.
This is in addition to a very well designed flow chart they already had explaining the changes made in the OSS project. (as this is a continuation to that project)
This I believe will greatly help any person reading the document."
1,"The design proposed by the team appears to simple and straight forward.
It is easy to understand and give a clear idea of what and how the team plans to work on the project.
The 7 step plan that the team is going to implement in the final project gives a detailed insight to the reader of the changes the team is going to make in the project."
0,"The project design appears to be sound and well-thought-out.
The team has rightly mentioned that design patterns are not applicable to their project as it involves the implementation of methods and modifying various files and that the implementation section provides details of why certain steps were implemented the way they were. (Although the implementation section only covers the OSS project)"
1,"The authors have laid out a detailed stepwise plan of the changes that have already been made to the system as a part of the OSS project, as well as the changes that the team plans to make as a part of the final project, under the scope section of the document.
The flow chart also kind os summarizes the changes to be made to the system in a stepwise manner which is easy to follow."
0,Tests are not described. Neither is the testing plan.
0,"Block diagram of already provided step on the project page has been created.
A better diagram could have been made including what exactly the authors want to implement."
1,"No.
Design could have been made simpler."
0,Nothing much has been added for the Final project after 3rd OSS project.
0,Explanations are not profound and are not very easy to understand. The wiki lacks lot of details and intent to describe.
1,Mozilla Project. No tests are required to be written by the team.
0,"No visualizations present. It might be difficult for a Mozilla project due to the complex classed being involved in case of a browser. However, a simple flowchart would be really helpful."
1,The team has included all the steps to follow for the final project. Although a brief explanation about what is to be achieved by these steps would have made things clearer.
1,The team is clear with the next steps involved but has failed to provide a detailed explanation about how they're going to complete them and what exactly is the problem statement for the final project.
1,"It would be a good idea to create separate sections for the final project, add the files that are going to be changed with some brief explanation about changes, and include flowcharts if possible."
1,"The design does include the testing command. Based on the writeup and their project page, it seems that their initial and subsequent steps are one continuous work and hence the team haven't outlined the testing procedure again. It would have been better if the team could have mentioned this somewhere in their writeup."
1,"The visualization is good. The team have listed all the steps in a simple flowchart manner. It could have been better if they could have simplified some steps in order to make it easier for the reader to understand what is going on. Anyways, I don't think visualization is necessary since Servo projects involve changes in files and small modules only."
1,"The design should be simple and clear. However, I cannot comment on it since I am not able to understand the steps to be undertaken by the team. However, the steps have been listed by the Servo team so they would be well thought out beforehand and would be able to be done in a simple fashion since they know students are not fluent in Rust and working with such large systems."
0,"The design appears to be sound. As I previously mentioned, for Moz projects, the design is mostly taken care of by the maintainers and wouldn't need to be modified or dealt with unless there are some errors encountered in tests."
1,The authors haven't explained the changes very well. It seems they have listed the steps from their project page but I believe it must be because of the complexity of Servo system where a lot of files are involved and the program flow is extremely complex.
1,"The team mentions that they have not modified any major functional/behavioral aspects and also go on to show that they test their changes using the Servo provided automated test suite. However, they fail to mention what project are they proposing this test plan for - OSS project or the final project. The team can provide such details and probably more as the project development proceeds further."
1,Visualization aids such as flowcharts and Github code diffs have made it much easier to go through the document and get the gist of the design for this project.
0,"The design seems to be hidden in the steps explained in the scope and implementation section of the document. Though the flowchart really helps in understanding what the team is doing, it would be most effective if they were to modify the document to highlight the files changed, the major code changes and why the code changes are required (possibly with another UML diagram)."
0,"The design has been well structured. The document encompasses introduction to Rust and Servo, their design sketch and the implementation steps. The team could have stated their design more clearly, though the flowcharts are a real bonus. They can modify the document as the project progresses."
1,The team has made a very good effort to document their changes in the system. They have explained this with a detailed and coherent step-by-step write-up.
0,well documented test plan.
0,easy to understand diagrams
0,good desgin.
1,The test plan has been involved correctly along with the steps mentioned to run these tests.
1,"The team has made use of flow diagrams as of now under the scope section however, I feel that this would not be sufficient.
A separate flow chart should have been included in order to provide a bigger picture of how the implementation would look like taking into consideration the current changes done. 
If possible, I would recommend adding some annotated screenshots which would make it easier to visualize stuff."
1,"The design appears to be comprehensible for most of the users with appropriate flow diagrams included along with the detailed explanations.
However, when it comes to code changes, I feel that the description should have been a little more verbose as it would have added clarity as to why certain changes are being done."
0,The design looks to be sound in most of the aspects and covers almost everything right from scope of the project to the testing phase. So great job on that.
1,"I think that the implementation section could have been more descriptive explaining about the changes been done. 
It was expected that the changes made be represented in the form of code along with the some detailed explanations as to why the required code has been changed."
1,Yes. The design includes the test plan. The test plan has provided step-by-step instruction of commands to explain how the team is going to test functionalities in this project. Overall the quality of the 'Testing' section is good.
1,"Yes. The design appear to be simple. In the 'Implementation' section the team explained the steps they are going to follow, which is clear and simple. Also, the diagram also explained steps in details. Overall the design seem to be clear and simple enough."
1,"Yes. The team has 2 diagrams explaining the details of steps they are going to follow. Including what changes they are going to make and details. For some step of the diagrams, it may be difficult for people who is not working on this project to understand. If more explanation for specific step can be provided, the diagram will be clearer and helpful."
1,In the document the team clearly mentioned the design patterns are not applicable as the task involved just implementation of methods.
1,"Yes. In the 'Implementation' section, the team clearly shows the steps to do on this project, plus the explanation of each step and the screenshots of the modification of code, which is clear and helpful."
1,The visualizations repeat what is written directly above them and doesn't help me understand any better.
0,The project already had a test plan.
0,They used the automatic tests suite provided by servo so there are no new tests.
1,It still does not include a diagram showing the components in the system. The workflow diagram does little more than the textual description.
0,Yes it is easy to understand.
0,"The implementation of the project does not require a specific design pattern but the design seems sound. However, it seems to only include scope of project 3."
0,"No, there's no mentioning about how they will approach project 4."
0,"As exlained before, the diagrams are just a repetition of the written code.Not helpful at all."
0,design and explanation does not seem simple considering no background.
0,Extremely unsatisfied with the explanation of the project.
1,"The test plan for subsequent steps of project is not mentioned in the document. I assume it will be the same as the initial steps. But even if it is the same, it would have been a good idea if the team had mentioned that explicitly."
1,"The team has given a flowchart on the wiki explaining how will the approach the problem. As mentioned in previous review round, It can be made more informative by providing more useful information like which action will affect which other classes, call which internal functions and what would be the result of that action and how would that result be used by the next step in flowchart. Other than that I don't think that as such any use of visualization is required in this project."
1,The design seems complicated. It is complicated because servo itself is a huge project. But the team can try hard to make the design simpler/ understandble by using less technical terms and using more descriptive sentences in the scope section of the document.
1,"Since, this is a Mozilla project, as such, there are no specific design patterns required. But the scope written by the authors explain almost whole plan/approach towards the problem."
1,"Yes the authors have thoroughly and adequately explained changes which they plan using text and flowchart. But as said earlier, explanation is still very technical and not easily understandable by someone who is not aware about the code. For e.g. Call ""InitDispatchToEventLoop in new_rt_and_cx_with_parent passing the new function and the boxed network task source as the closure argument"" this line is hard to understand by someone who is seeing this for the first time. Team can try to make such things more simpler."
1,"Diagrams illustrate the steps only. It would be better to have an UML diagram to better show  the modified methods, variables, etc."
0,"The Wiki page describes changes already done. As this is a follow-up project, consider explicitly stating ehw changes to be done next."
0,Esplanations are clear. They provide links to useful links which help to understand concepts.
1,Design document seems complete. Probably this is a follow-up project.
1,"Design Document looks good so far, though update the team can improve the layout: sections can be splitted or add more."
1,"The visual aids ie. the diagrams used to introduce what DOM features are is great. It helps the reader understand what DOM features are.
There is a diagram to explain the flow of the project team plans to implement in the final project or their test plan or design plan."
1,"1) There is no concept of classes in Rust.
2) The design plan seems to be appropriate and will not make the code smelly.
3) It is not a Ruby on Rails-based project so, there is no question of existing gems.
4) The new design is adding a feature that currently does not exist, so effect to response time is out of the question.
5) The design documents appears to be great and comprehensive. A lot of effort has been put into developing it."
1,"Changes to be implemented as a part of this final project have been given in a detailed pointwise manner.
The flow of the changes to be implemented are given in visual form as well.
The explanations for the changes to be implemented all make sense and are well written."
1,"Yes, the design includes almost all of the required functionalities."
0,"I believe the design document is complete as it covers the required aspects:
It covers the Purpose of the feature (project) as well as detailed Project Design (steps) to accomplish it. 
- Test Plan: The test plan seems to cover running existing test cases. It does not include any plan to add new automated tests to test the newly added feature."
1,"No UML diagrams or tables are present. It might be difficult for a Mozilla project due to the complex classed being involved in case of a browser. However, a simple flowchart would be really helpful."
0,"No proposed changes in code. But from the steps, it seems quite challenging to make an estimate of what the changes will be."
1,Explanation about what will be achieved by the steps that the team will be following for the final project is lacking.
0,The team is clear with the next steps involved but has failed to provide a detailed explanation about how they're going to complete them and what exactly is the problem statement for the final project. It would be a good idea to create separate sections for the final project and include flowcharts.
1,"The team have developed a flowchart so the way in which they are going to approach and complete the steps is much clearer. However, the team could have shortened the sentences and added simple explanations for the steps in the flow-chart. Currently, the details are extremely low-level which might not be helpful in understanding the project at a high-level."
1,"Design is proper. Anyways, the Mozilla project maintainers have well-documented the steps and the system is huge so I don't feel there is a need to change the design unless maintainer feels so. The code does not look smelly and the functionality is complex that there do not exist pre-defined components."
1,"The explanation is proper for the initial steps however for the subsequent steps, the team did not explain the steps they are going to take to complete their functionality so it is hard to follow. They could have simplified the language a bit for the readers."
1,"Yes, the documentation covers all of the functionality. It would have been better if the team could have simplified the language of the requirements so others could understand it better."
1,The design doc is almost complete. No important parts are missing as theirs is a continuous project. The project purpose and design are clearly stated. Moz projects are a bit complex so I understand that they did not mention about testing the code.
1,The team has made flowcharts to explain the step-wise changes made/expected in their project. Everything is well-described and coherent.
1,"Changes look good.
The code doesn't look smelly. 
Mozilla codebase changes - code design seems alright.
Response time will probably not increase.
The design seems alright. No need to expend more time than required."
1,The explanations are adequate and the flowcharts illustrating the steps are very helpful.
0,The team has explained all the functionalities for the project very well.
1,The design doc looks fine enough. The team can probably add more test plans for the final project part as the project progresses.
0,easy to understand flowcharts.
0,"Since first PR is already merged into master, means no issues were found."
0,"detailed descriptions of project purpose,design and test plan."
1,"The document mostly consists of screenshots of the commits done. 
In order to make the functionality much more visual and intuitive, I recommend you to add some annotated screenshots to the wiki document as this would make it easier for the reviewer to understand what exactly is being done.
Also if possible put in some UML use cases pertaining to your project."
1,"I think the code looks fine at first but in order to make it comprehensible, I recommend to give a brief gist of why those changes were made and what exactly is happening with the code.
Since, the implementation section was not explained elaborately, not much could be commented about the performance and simplicity of the added code."
1,"Most of the covered topics have been addressed correctly, however, I would suggest the following:
The implementation section consists of only the code that has been altered whereas there should have been a separate section for this namely 'Code changes', consisting of at least some brief explanation of what is happening since it can't be expected from every user to understand the functionality by just looking at the code at first sight.
I would also recommend creating a 'proposed solution' section and then explaining not elaborately but in a gist about what would be the approach decided by the team in order to tackle the problems mentioned in the problem statement."
1,"The document incorporated most of the functionalities and most of the terminologies were clearly explained however, I see some redundancies. The briefing about Servo was mentioned both at the start as well as in the introduction section.
Secondly, instead of mentioning Step 1 ,Step 2 and so on in the content index, write down the actual steps involved in order to reduce abstraction."
1,"I think the test plan has been written in a nice and systematic manner.
Add some images of the working feature rather than the code itself. This would not only make the document more user friendly but also add value to the document.
Finally add the team name to the document."
0,There are 2 diagrams introducing the steps for the project. If steps could be separated into different part with more details for each step will be more clearer and easier for others to follow. Overall the visual diagram is associated with the description well and helpful.
0,"1. None 2. None 3. None 4. None 5. None
The quality of design proposed is good."
1,"There is step-by-step instruction with explanation for each step which is clear. Screenshots of code is also attached to show the modification. For some code if there could be more details, description or introduction will be more helpful for people who is not in this project to understand. Overall the quality is good."
0,Yes. The design contains all of the functionality required.
1,"The completeness of the design doc is good. All parts required such as project purpose, project design and testing plan are included. Screenshots, diagram for specific section is provided which are helpful. For 'Implementation' section, if more details or explanation will be helpful for people who is not working on this project. Overall the completeness is great."
0,I don't see a design but the work they've done seems adequate.
0,There is a diagram but I don't think it adds much to the page. It simply repeats what they wrote in the paragraph above the diagram. It would be easier to read if only the paragraph or the diagram existed.
0,The explanation of what they have done is good. I can understand it.
0,I don't see a design.
1,The flow charts in the Scope section are not really helpful. They basically give the same information as the textual description above them. A diagram showing the components of the system would be more helpful.
1,The explanation is very detailed and well-written. It would be better if there is a diagram showing the relations of each components instead of just flow chart.
0,Yes it has the links directed to the functionality.
0,It's quite complete.
0,Flow diagrams just repeat in text whatever is said in description. Totally redundant.
0,Very confusing and difficult for the reviewer without proper background. layman explanation expected with less description taken from Git and lesser code snapshots and more self written description to understand the context.
1,"The flowchart which they have given on wiki, explains how do they plan to address the issue. It is somewhat clear but it can be made more informative by providing more useful information like which action will affect which other classes, call which internal functions and what would be the result of that action and how would that result be used by the next step in flowchart."
1,"There is no design pattern in the documentation as it is Mozilla Project. But the scope written by the authors explain almost whole plan/approach towards the problem.1. Yes, they plan to add methods. But all of them seem to be in correct class/files as they in harmony with what project page on github says.
2. I don't think that the code will become smelly because of those changes.
3. yes design seems complicated. I understand that this is rust so there might not be gems like in ruby. But the team should give it a try to make the design simpler.4. It will improve the performance by starting the compilation of WebAssembly while the program is still being fetched from the server.5. The team can try giving a bit more effort to make the design simpler."
1,"The changes proposed look to be genuine and adequate as they follow the subsequent steps given on the project page. But, the explanation is very technical and it makes it harder to follow. If explanation is simplified or supported by some changed code snippets, it would make it easier to understand and follow."
1,"The design document incorporates every functionality mentioned on the project page. But the only problem is that when the scope of the functionalities is described, it is becoming very technical for a reader to understand. I suggest the team to make it less technical for other people to understand easily. For e.g. the point number 2 says ""Pass network task source"", which I don't know what it is. So, here, the team can briefly describe in 2-3 lines about that or just simplify the full statement by simply using a more understandable alternate of ""Pass network task source""."
1,"overall, the design document looks complete. Although there are some ambiguities, but after the actual implementation and once the design doc is made much simpler, I feel the ambiguities will go away."
1,"The new changes work perfectly on the authors' deployed project. The issues that were to be resolved and the corresponding features to be fixed were working and did not give any errors. 
For Issue #153, the code also handles the case where the import list might include topics that are not yet assigned to any team."
1,"There are very less number of visual diagrams included.To explain the design,t is suggestive to include  UML or such visualization"
1,"The changes proposed by the team are reasonable.
The team has clearly studies the code and the root cause of the problems which is really great.
It would be more informative if the team would have explained their thoughts with code snippets as it is easy to understand instead of using the name of variables etc, which is hard to follow."
0,"The explanation is clear and concise.
Charts and screenshots make it quite easy to understand the issue and their approach"
0,"Yes, the design appears to be sound."
0,Yes. They explain the reason clearly.
0,"Yes, simple and easy to follow."
1,"Design appears to be strong but during designing they should know what to do and where to do it. It is alright if they don't really know how to do it. There are few issues which lacks this understanding as they are uncertain about them. eg - test plan, Files which require modification (Tentative)"
0,Explanations are sufficient enough to understand.
0,the test plan can be more specific
0,yes!
0,A well designed document with proper explanations
1,They wrote the test plan in their design document. The test plan is a little bit abstract. It would be better if they list the test files they plan to add test to. And they can add more details about testing from UI.
1,The test plan is pretty solid but I feel it could add some additional information like how are they going to test it and how are going to ensure that their code would have 100% coverage
0,"Yeah, they have described the changes to be made very well."
0,Poor test plan. Doesn't mention any concrete plan to test the code changes required to fix the issue.
0,No significant visualizations added.
0,No design mentioned.
0,I am not sure because they do not include concrete solutions in their modification sections. They only include files that need to be changed but does not state how to change them.
1,"Yes, they include test plan. However, their test plan seems a little messy.
I think they can split unit test and UI testing.
And then adding some screen shot for the expecting output."
0,"Yes, they listed all the files and methods they may modified, which is quite clear."
0,The new design looks fine.
0,The explanation should have been more detailed.
0,"Yes, all functionalities are incorporated."
0,the UML diagram is informative
1,"The team has included just one flow chart, probably an UML to go with it will be helpful"
0,Needs a lot of rework of the existing writeup.
0,No database design section included.
0,Flow chart was incorporated to provide visual aid.
1,"(1)In the authors plan, I could clearly see which files needed to modifiy and it's correct. The author didn't introduce which class they wanted to add required new method. They just say they are going to add some test files in Repec.
(2)No. I don't think the new design may potentially make the code ""smelly"".
(3)The new designs is simple.
(4)Well. The new fuction always increase the response time of the system.
(5)I think they could make more introduction about their test. For example, they could list the test case."
1,Code looks quite dry to me. They have made many changes to make function shorter in length and also keeping it to one functionality only. They have created separate methods also. They follow ruby guideline too.
0,"Team has not given any comments to any method, code is not commented"
1,"Did not get to test the application myself so can't say for sure, but the refactoring definitely helps if merged to the master."
1,"- As most changes are refactoring related and the tests pass showing the features work as before, the changes can be deployed to production server
- The code doesn't seem to be deployed to manually check if all fixes work; deploying on test server and testing is necessary before actually adding changes to production server"
1,The modifications look good to me but we need to first check whether all features are working or not. Does the code refactoring affect the functionalities or not. As the deployed link is not provided I am not able to do so myself. Although they have made a video of the test cases and the working functionality so it does look like the code works and is ready to be merged.
0,"The code should not be merged to the production server. The team has done a good job refactoring the code, but the test coverage has decreased which is substantial part while merging the code."
0,"Yes, it seems the code is ready to be deployed but without checking the deployment on a local server it is difficult to say that."
0,Video shows procedure of how to drop a student. Test case cover this as well.
0,Test coverage decreased.
0,They added test cases for the sign_up_sheet controller in various spec files.
1,"No new test cases were added. The code coverage went down, but this seems to be an issue with coverall, and is not specifically because of their code."
0,No new commits were added after first round submission
0,No new commit was made after the 2nd round. Last commit was on 26th October.
0,Las commit was on Oct 26
0,The team has committed during the second round. The code has been refactored aptly.
0,No new commits were made.
0,No new code has been added in the second round
1,"- As the project includes refactoring, no new methods seem to be added
- Comments on what the refactored method does should have been included for missing ones"
1,"The team has made changes to the code and made sure to respectively change the comments as well. However, in certain files, where the team has added methods, they've not given appropriate comments. For example in 'signup_sheet_controller.rb', the team has added many changes including some if-else blocks, but no comments were provided. Comments have been provided only on the top of every comment, that I assume was present before as well. They've made changes to that but did not add any new comments for the code they've written."
1,"1. Documentation is fine and mentions everything they have done so far.
2. Though everything is clear, they should've mentioned reasons for whatever they did. (for e.g. issue :Refactor participants variable in load_add_signup_topic).
They could mention refactoring is done because of so and so reason."
0,The write up is not very detailed. There is no description about the design of the module or the patterns followed or the code changes.
0,"- The writeup clearly mentions the issues and what steps were taken to address the issues
- The use of if-else condition to create or update is confusing as Rails by default provides routes specific functions, the method call_create_of_update seems unnecessary if routes are properly used"
1,"The write-up is very poorly written. It just highlights the solutions to the issues in one line which is not sufficient. No mention of any design principles or patterns is included. It is very hard to follow the changes you have made if the pull request was not shared. Please include more details about the changes you've made in every file (which method, which line, etc). Also mention the reason for doing the changes that have been made. If any design principles/patterns have been used, mention the reason why you thought this would have been the best solution."
0,"The writeup is well written and explains the need for project improvement, the problems and their respective solutions."
1,"The write up explains the description of the project. However, it lacks actual code snippets and the areas where the code change reflected. Also the list of team members is missing, The write up does not include the test plan as well."
1,"- The write up has no section explaining the Test Plan
- As the project is based on refactoring, there should have been a complete run of tests indicating the tests worked properly before changes and another run after all changes indicating that the changes didn't impact any functionality"
1,"Since it is a refactoring task, there is no test plan."
0,The writeup is precise but it is very concise and can be a little more elaborative.
0,The write up content corresponding to the code changes made does not match up!
1,"1. They could've mentioned how the methods work. But since their job was to just refactor, they've done the documentation part very clearly.
2. Only thing I would like to suggest is that authors should think of adding some snapshots of the work, which helps the reader to better understand the changes made."
0,"The write up is not very detailed. Just reading through the wiki, it is difficult to understand the background of the feature or what functionalities are missing."
1,"- The write up is clear but not adequate enough
- The doc explains issues and what the team did to fix each, but doesn't explan the need for each fix
- The doc should indicate which principle was used for corresponding refactoring and what impact the change made"
1,"The write-up has been poorly written. In the write-up, it is written that only one file has been modified, however the pull request shows that many more files have been changed, some new files have also been added. The write-up just covers the problem statement and the solutions in one line per issue. Please add more description in the solutions that have been provided (for instance in which file the changes has been made, what changes were made, what effect does it bring, any specific constraints that were added, etc.)"
1,The write up could have been better. The team needs to add actual code snippets and screenshots as well as the test plan for the test cases. A video for the test cases can also be added.
1,"The document clearly mentions each issue and the solution provided to it. But, it does not include a test plan, or a reference text stating the strategy behind code changes, or the code snippets. Can be improved."
1,Yes the writeup is clear but it only mentions about the problem and the solutions and doesn't mention about the methods or why it is done.
0,Hard to test all the features. Tested a few and they worked fine without breaking.
0,The code has been broken down nicely.
1,"1) 'def list' & 'def save_topic_deadlines' quite long. 'def get_status' is also long and has quite many nested if-else conditions.
2) According to me, in 'def get_status', 'return' should be a common statement instead of passing it in every if-else block.
3) There are several if-else blocks in the code. Please add more comments specifying what condition each if-else block covers. 
4) The code follows the Ruby Style Guide. The team has made commendable efforts in this area.
5) There is a lot of code duplication in 'signup_sheet_controller.rb' which could be refactored."
0,The code uses lots of naming from the old code which could have been refactored.
1,"1. Seems they've changed a name for a method, then the TRAVIS CI failed and they again reverted back to the old name. This long route could've been skipped if they would've run Rspec locally before pushing the changes to git.
2. There are some more times where they've done the same thing. But that shows they've attempted to do some changes."
0,No new variables or methods have been created as it was refactoring but methods have been merged so similarly named variables have been used but those used are proper.
1,"No new test cases neede, and no test plan mentioned in wiki"
0,"Authors have not added new tests or modified any of the existing ones. But all of the changes they mode don't cause any of the test case to fail.
And also the TRAVIS CI build passes on the last commit."
1,- New tests not required as no new methods were added
1,"Yes the design is simple and easy to understand. They have clearly defined the details and requirements. Just one thing, it would be great if the team could add mock screen to show the final ui. It would help to visualise the functionality even more clearly."
0,"Test plan considers both the automatic and manual tests. But, in my opinion authors should give some more details about the tests."
0,"Yes, they explained it in detail, but it could be better to add some diagrams."
1,"Yes, they have explained about the project really well and what methods they are going to refactor and how they are refactoring them. In real they have done much more changes than mentioned in the write up. No design pattern has been mentioned,"
0,The writeup is clear.
1,"Most methods that were added were around a dozen lines are less, which was pretty good. They created new helper methods, which reduced method length over all. Some methods could use more comments. The code does a good job of following the ruby style guide, especially with naming. DRYness increased when helper methods were used."
1,"There are not comments for each method, however, many methods have inline documentation. A few methods had no comments, but great naming, such as 'create_radio'. The comments have very good descriptions."
1,"The build passes for the pull request, but the coverage has gone down -6.1%. Most names have been improved. This group did a good job of removing redundant information in method naming. I like how they made helper methods such as 'update_checkbox'. This method is named well, and helps me understand the code better. Before, there was more redundant, harder to read calls."
1,"Early on in the write-up, the authors use bullet points to describe the problem statement. This details that the code needed some files and methods renamed, as well as some other issues. They describe the drawbacks of each problem, and the solutions they found. Additionally, they explain the technical details of each solution. For instance, they mentioned that they removed '_quiz' from some methods because this was in the controller's name. They used design principles related to naming that we mentioned in class. They did not mention using any design patterns. I liked how they added before and after pieces of code.  The markup for this page was very good too."
0,"They did not mention any specific methods to be added to the classes but according to me, they have selected the right classes for modification. The changes do not make the code smelly. Overall the design proposed looks good to me."
1,The Refactoring changes made are not categorized by problem and the reason behind the changes made is documented at the end rather than before detailing the files changed. The team has included a test plan with detailed explanation and screenshots detailing the Rspec and Travis test build success as suggested in the previous review. There are case: e.g in Review mapping controller where even the wiki does not mention the variable names changed. This creates a big problem in transition.
1,No new commits were made despite having suggested to document the new changes in form of comments making it an easier transition for developers. e.g having a comment next to a new variable name as //previously old_var_name would make it easier for the developers by just searching the old_var_name without having to go through the wiki of a pull request. This becomes more necessary since several refactoring changes will be merged into beta and in master in an even shorter time period making it harder to go through wikis.
0,"The team has used the visual aids properly however, it would not be appropriate to give them credit since they have just copied those visual aids from the last year's team design document."
0,the UML diagram is included only for instructor while students can also perform other functionalities.
0,"other characteristics as mentioned in the problem can be more specific
 
 the topics are properly highlighted"
1,"Log in to expertiza to view the home page

Type the search criteria in the available search criteria and select the appropriate field from the dropdown.
To perform search based on multiple filters, the user can tap on the Advanced Search button adjacent to the Search button, the view renders a hidden div containing textboxes for all the columns, allowing the user to search based on multiple columns.
All the entries that match the given criteria will be returned.

the above paragraph is incomplete wihtout step 2

An empty list is returned if the search criteria doesn't match any valid records in the database"
0,"> Visual aids have been added and it serves great purpose in better understanding.
> All the diagrams seem relevant and seems to follow the conventions however they have not been explained. Some explanation would have been appreciated.
> Another observation that I found was the diagrams looks exact similar to the previous years wikis. Some changes would have been appreciated."
1,Yes the code is clean. All the method and variable names used are intuitive and clearly explains what their purpose in that block.
1,"The writeup is written well. They have covered all the required components and explained in easy to understand language. Also the code snippets which was inserted/modified to fix the bugs is mentioned. Also, they have included the flow diagram to explain the work flow."
1,"The code is commented wherever possible, They have used good names for variables and methods,"
0,Yes the code is ready to be deployed. Not sure about the testing part since the coverage has decreased.
1,"1) I think the code is ready to be deployed since the function works and code pass all checks
2) It is good for another group to pick up since they write it really good and writeup is comprehensive
3) There have been enough comment for the code so it should not be hard to follow"
1,"1) The writeup is good, it well explained the reason to refactor and how they do it
2) They provide a work-plan follow to explain how they solve this issue, it is very good for reader to get their point
3) For the code they explained their writeup, sometimes they use screenshot, sometimes they copy the code. However, I do not think screenshot of code is a good idea because it looks like a mess.
4) The size of other screenshots may also need adjustment"
1,"1) This refactor project could be test from UI
2) Everything works as the original one, the refactor is succeed"
1,"1) They have been keep working on this project
2) They did commit a lot to pass Travis CI in 2nd round"
1,"1) There is absolute no bad names for variables and methods in this round
2) The method are all in healthy length and easy to catch up
3) Essential comments have been provided with the code
4) The code is DRY enough"
1,"Yes, it passed the Travis build in the last commit."
1,"I had issues mainly with the writeup in the first round which the team hs addressed. I could not find any significant issues with the code. That being said, they have considered the minor naming suggestions I provided and made changes accordingly."
1,This is a refactoring project and all the test cases are working however since the project link is not working I am unable to test the basic functionality.
1,Some methods like assign_quiz_dynamically are a bit too long and could be refactored by pushing the if-else conditions into a separate function.
1,"There are some methods like choose_case  in the AssignQuizController  class which do not have comments. However, I am not sure whether it is in their project scope to add comments for existing methods."
1,The team has paid close attention to coding guidelines while renaming the variable and classes. They have also documented the reason for renaming on github.
1,"Not all methods have comments. However, the names of the methods are self-explanatory and their function can be inferred in most of the cases"
1,Many names prior to refactoring were not suggestive of their functionality. The authors have done a good job renaming them and making them more meaningful
0,"Yes, they have given exhaustive explanations for all the changes they have made and what led them to make those changes. However, in some cases"
1,"comments are mostly descriptive



 


 selected_participants.each {|index| ReviewResponseMap.where(reviewee_id: team.id, reviewer_id: index, reviewed_object_id: assignment_id).first_or_create }


 
 
 



however the above line may require comment to completely comprehend"
1,"Test plan is not included in the 
Test plan and test cases can be included to test the refactoring done on the public methods of controller."
1,"yes!
However the write up misses to include the location of code, nor is the code pasted in the wiki page."
1,"(1) Long methods can be broken down. In some cases, methods could have been extracted from existing long methods. Such as in case for peer_review_strategy function & assign_reviewers_for_team
(2) Code has not been extracted to separate methods appropriately (as in case of create method)
(3) Comments have been added in some places but when new functions are created, more comments are required to make following the code easier
(4) The code does follow the Ruby Style Guide.
(5) Code is DRY & does not have any smells apart from Long methods at some places and"
1,- The test coverage hs descreased as code has been refactored to include in private methods which aren't tested
0,The code is ready to be merged and no changes are required.
0,"The writeup is well written. The writeup starts with feature that they are talking about, followed by the problem statement that mentions about the issues they they are trying to resolve and what is their proposed plan and flowchart of expected behaviour. The proposed changes are attested with code snippets that make it easier to comprehend the work that has been done in this direction. Along with this, the language is really lucid and easy to comprehend which makes it easier to understand and think about their vision in  the project. The good point is that they have also mentioned the details as to why did that issue crop up which is a good documentation methodology."
0,The system works as it is intended to work. The tests which are mentioned in the documentation is working as expected. The bugs that were already present are resolved .
0,The build passed and there are no conflicts that needs to be resolved.
0,The writeup is very detailed. They have everything covered.
0,"Yes, it passed all test and have no conflicts."
0,There's two modifications.
0,The code is clear and DRY.
1,"The team has not added any test cases to the Expertiza project.
The code coverage has decreased marginally. 
The team could have added simple Capybara test cases to check for the redirection (test plan 1) and to check for UI elements (as a simple test case) in instructor's editing others' rubric (test plan 2)."
0,Yes it does
0,Not sure. The test coverage has decrease.
0,Elaborate and very clear.
0,Student model and controller has been checked using rspec
0,Works from UI perspective.
1,The code does not violate coding guidelines. But i can see there is dead code which adds unnecessary clutter in the file.
0,Not a lot of commits after first revision.
1,They have incorporated the changes suggested.
1,The pull request passed and there were unresolved conflicts.
0,Didn't find any while going through their code.
1,They have covered different edge cases and thoroughly added test cases for the same.
0,Yes the code can be improved and be merged into the main product.
1,The writeup is pretty self explanatory. The team has clearly written the current scenario and what needs to be done.
1,The code is pretty good and can be merged. There is no need to start the project from teh scratch.
0,They have thoroughly tested one model and one controller.
0,The write up is very easy to read and great.
1,The code written by the authors are in pretty concise and since its just adding couple of lines there is no need to extract into seperate methods. The naming conventions are followed which omits the need for writing comments and it follows Ruby style conventions as well. The code is well DRYed . There were no inconsistencies in naming style in the first round . So no changes were expected .
0,Yes it passed the Travis CI
1,Yes new code was committed in the second round . I can see the commits are done only after second round.
0,Added comments on the code
1,"Yes, the build is passsing with no conflicts that needs to be resolved ."
0,IT followed most of the principles.
1,"Apart from the testing plan section, the documentation is well-written and improvised from the previous rounds . 
The documentation in the previous was lacking description on test strategy and it was not improvised in this version as well . 
The Testing section in the documentation does not mention anything about the test plan. Also, no tests corresponding to the lines of code added are written which makes it difficult to test the accuracy of code when it goes into production. Suggestion: Testing should have been incorporated so that each line  written is well backed with tests."
1,"unused lines can be removed , not commented out
# ta_ids = []
      # ta_ids << Instructor.get_my_tas(session[:user].id)
      # ta_ids.flatten!
      # ta_ids.each do |ta_id|
      #   ta = Ta.find(ta_id)
      #   ta.ta_mappings.each {|mapping| courses << Course.find(mapping.course_id) }
      # end"
1,"Most edge cases seem to work. However, if a student checks out a book and then returns it, then the admin cannot delete the student. I noticed this problem with many applications, it likely has to do with the fact that students belong to requests. Apart from this, everything looks good."
1,"yes, the commits mostly include addition of comments,"
1,"yes the given pull requests have passed on Travis CI.
But the test coverage has reduced"
1,"Yes, the system works as intended."
1,"Code looks good, Code is DRY, they have found out good way to solve the problem, Comments can be improved on the code. Rest all is good."
1,The authors have improved the writeup by adding more detail.
1,No the admin account cannot be deleted.
1,"The testing part does not include any unit testing plan
Also, no video provided for demonstration and testing (anyway not done)."
1,"No new commits were made, so the code is just as well written as it was last time."
0,They did not add new test cases and their coverage decreased by 27%
1,No new test cases were added and test plan only talks about UI testing and no unit tests.
0,They have submitted links to two pull requests. Thus. I checked the later one and yes they have few commits
1,"Yes, however they need more test and a detailed test plan"
1,"All tests are passing.
No tests were added and hence, there is a warning indicating that they should be added."
1,"They did compare the before and after code, and they well explain the code."
1,"yes, the system operation is workable, and the feature work as they supposed, however their test plan is not clear, only passed all the travis test is no sufficient to prove the system is reliable."
0,"The major functionalities seem to be here for creating books, checking them out, book marking them, etc. I couldn't find any failing functionality. The UI is helpful since it displays the limits each use has for checkout books. I could not find any missing functionality."
1,"yes, all the Travis tests pass."
1,"No comments have been added.
Some variables are named in shorthand, like rubBuffer should be rubricBuffer."
1,"The good thing is they have the explain in all the code, and there is no bad names or lack of comments.
One of the module - assignmentHelper is still a long method,"
1,The code works
1,The build were successed
0,Yes project works.
1,"Yes, the authors have followed the coding principles successfully. they have included comments and written rspec tests. However, There are certain concerns I have regarding the deletion of certain fields in schema and several other redundant changes. while the redundant changes would certainly not damage repo, The changes made in schema require a more careful scrutiny."
1,"The write-up details all important aspects of the project.The problems with structuring have been resolved. However, the images in the wiki are misaligned and have different zoom levels making it harder to review. I would suggest adding a flowchart to the wiki documentation to assist the review process."
1,"There are some commented redundant code, which could be deleted"
1,The coverage has decreased by approximately 3%. The team has added the test cases in the late_policy_spec.rb checking if violation of policy does not allow creation of late policy and that if the policy is in accordance it allows creation.
1,The build has passed Travis CI. no conflicts. But coverage decreased.
1,There are a few commits with regard to adding comments as mentioned in previous review.
1,The code passes the travis build and coverage is at 27.125%.
1,The code is good to read. No bad name format.
1,naming conventions look fine. coding principles are followed
1,"redundunt changes:
app/controllers/late_policies_controller.rb 
app/views/assignments/edit/_late_policy.html.erb
app/views/late_policies/index.html.erb
app/views/late_policies/index.html.erb : Changes made are redundunt and create unnecessary
review delay db/schema.rb : [DANGER] Field Feedback is removed
                                             : Certain changes made are redundunt"
1,"The code functions correctly under the constrained steps in the use case.
Concern: However, if anyone were to create a new late policy without first visiting any assignment, the code will break on clicking the ""back"" link from the new late_policy page.
This can be solved with a quick fix from the team or can be taken up as a bug in the future by later teams. As of right now, apart from URL injection to reach this particular case, the code works just fine. Can be merged after code inspection."
1,write up is written well. it enlists all the changes the team has made. and its steps
1,"The code works as expected. Following the steps and the documentation, the Expertiza project works perfectly.
However, if you were to do this: 
1. Login as Instrcutor6.
2. Do not go to any assignment. Stay on the home page or manage page.
3. Directly go to  /late_policies/new by manually entering the link, and then click back.
Result: it would throw a RecordNotFound error since the 'back' link is hardcoded to go to the last assignment_id's page."
1,"In  module helper,
# ta_ids = []
      # ta_ids << Instructor.get_my_tas(session[:user].id)
      # ta_ids.flatten!
      # ta_ids.each do |ta_id|
      #   ta = Ta.find(ta_id)
      #   ta.ta_mappings.each {|mapping| courses << Course.find(mapping.course_id) }
      # end
 
The unused and modified code like the one above should be removed"
1,"comments added in assignment helper module , describe the functionalities implemented. 
But the code in the view file, has no comments added to it."
0,The team has used library id as a foreign key to library in the books table to achieve the 1-to-n mapping. Libraries to universities also is a similar mapping.
1,All builds passed in Travis CI and there are no merge conflicts in the code.
1,"""What is wrong: A TA or an instructor can assign any course to an assignment even when they don't have access to the course. TAs can unassign an assignment from the course, and if they do so, they lose access to the assignment. What needs to be done:
Only those courses should be shown in the dropdown list of courses, the assignment is part of and the instructor or TA has access to. Instructors, but not TAs, would then be allowed to change an assignment to be part of no course. Also, change the name of the tab from “Other stuff” to “Etc.”.""
The above problem statement can be modified to be more succint and clear.
The solution can be more elaborate"
1,The latest commit was made on 1st Nov 2019. Development and Bug fixes were continuously done throughout the project duration.
1,The code was neatly written and follows DRY principle in Ruby. The team has done a good job here.
1,The code is ready to be deployed to production.
1,"In the first review, I pointed out saying there were no navigations provided in the documentation. The team came up with a very good writeup this time."
0,They have handled 1-to-n and n-to-n relationships properly.
1,"Genuinely happy this team read the suggestions i made on peculiar edge case that i mentioned in the first review. In first review, there was problem where, while creating a policy, if I enter max penality as 'a', it gives error message as
The maximum penalty cannot be less than penalty per unit.
but not that it is not a number. Now the team has corrected it to show the error as
'Max penalty is not a number'
 
The UI and features work as intended."
1,"Yes, the team added well written test cases and coverage increased."
1,No conflicts. Travis CI build passed.
1,"No commits in the second round, after November 1st. Not sure if the team has took all the suggestions and implemented them on the same day as the deadline for the first reviews, which is November 1st."
1,I see corrections being made based on suggestions. Everything is well written.
0,There is no test plan mentioned in the wiki page by the team.
1,"I think the additions/ fixes done might be working mostly. My only concern is that it should be tested once since I could not do so, as the credentials are wrong and have not been updated by the team correctly in the wiki file.
And I don't really think that the project should be redone since most of the cases have been covered by the team and I can vouch for the working by looking at the screenshots and explanations in their document."
1,"I think the code is well-written. Naming convention were good. However, the feedback given in round 1 were not addressed in this round."
1,"I think that the write-up has been written in a systematic and proper manner covering most of the stuff.
Moreover, some things that were told to be added like for eg. test plan has not only been added to the wiki doc but also has been explained illustratively with the help of screenshots which make it easier for the reviewer to visualize rather than just simply putting the code changes made as of last time.\
I only felt that the login credentials should have been updated correctly in the wiki doc."
1,"I think that the team or someone else just changed the login credentials which is why I was not able to login as instructor. It got redirected towards forgot password and asked me to enter my email address for password changing.
In order to avoid any consequences, I did not change the password and thus could not test the project from the UI."
1,"The team has pretty much covered most of the test cases as seen in the Rspec test file.
Moreover, I think there is an improvement in the test coverage which now has become 27.125%"
1,I think that the build passed successfully in Travis CI and there was no problem that was detected.
1,"Yeah I could see commits done during the second round of submissions however not many were done since maybe most of the task was already committed during the first round.
Also the commit names have been given correctly which according to me is a good practice so good work on that. :)"
1,"Not only did the team push throughout the entire project, they showed exemplary version-control practice by using merge requests. They committed before and during round 2."
1,"Based on the code that I can see on the wiki, this seems fine except for the lack of comments."
0,There are no comments that I can see.
1,"Based on the test cases I tried, the code is ready to be deployed. The team has made sure to include edge cases in the implementation and also included them in the write-up."
1,"The write-up is well written. Good work on that. The team had given details of the problems, solutions, its explanation as well as a detailed Test Plan."
0,There is a section titled 'Test' but it is empty. It should be filled out with a test plan.
1,There are no test cases present.
1,The code works as intended. The team has done good work and have solved the problems stated in the first review. Great work.
0,The website is down because of which I cannot test the author's work
1,"Yes, the team has added new test cases. The coverage has decreased but it has decreased by a very small number so it's okay."
1,The methods are descriptive enough to omit the need for comments which is a better way than by using comments
1,"The variables and methods are according the conventions and the code follows 
The code needs to be cleaned up so that optimized and refactored code goes into the production server eg line 14-18 in profile_controller.rb, line 9 in assignment_helper.rb."
0,Cannot manually test the site as the given link is not working.
1,There is no test plan as of now that is available or written
0,No new test cases are created.
0,"No, I have to look at the code how it is working the options = ['--------', nil] is a strange value, have to look at the coed to understand what it does"
0,No the build failed. There are some code climate issues.
1,"Yes, new commits were made during the second round but now new code was committed, only test cases or comments were added."
1,"Yes, the wiki page is quite description and gives the overall scope of what needs to be done."
1,I couldn't find any bad names or long/complicated functions. Comment have been appropriately added. The team has made sure to follow good Ruby coding standards and the code follows the DRY principle.
1,There is a decrease in the coverage so more rigorous testing can help in increasing it.
0,No comments.
1,"preference_edit_flag and preference_home_flag aren't that intuitive. Perhaps something like ""actions_on_edit_page_flag""?"
1,The writeup is well documented and it is understandable.
1,"Markup made sense, but it could have been useful if some details were given to explain the code changes."
1,Yes it does work as intended.
0,"No link of pull request is mentioned thus, I can't review"
1,"Yes they did add the test cases!, however the coverage did decrease."
1,Yes it did pass the Travis CI
1,"The writeup clearly mentions what was the issue, and what did they implement to resolve the same."
1,The commits were not made but i feel they achieved whatever was required before only
1,"It seems right, but however seems like the VCL server down due to the network or local problem."
1,No Test Plan specified
0,It followed fundamental code writing rules.
1,"the code follow the Ruby Style Guide 
One problem is the AssignmentHelper method is too long and may have some duplicate code, that can be handle by create a new class."
1,My biggest concern is that no tests have been added. This should be done first to ensure functionality is correct.
1,There are comment on each method
1,The problems I found with the writeup last time have not been fixed.
1,"The wiki explained the response, what is the issue and what i wrong, but there is less information about video and test."
1,Good
1,admin cannot creat books
1,"Yes, the code looks clean and it is ready to be deployed onto the production server. The only suggestion is to add appropriate comments for the code written."
0,The testing section is blank
1,"I am impressed with the writeup, it includes all the details required for a reviewer. The writers have improved the write-up and they added more screenshots that are easy to follow. Please add the code snippets in your writeup so that it easy to go through the code added."
1,"They don't have test plan in document, and there's no new test cases in repo."
1,"Yes, the UI works as intended and the error messages are appropriate. There is no need for refactoring the code, the code looks good. The feature works as supposed."
0,I could not log in as admin because I could not determine the account's information. I was not able to see the repository either.
1,"They did good just no comment on the method, it's not easy to understand without check the wiki."
1,"The team added all the test cases and different scenarios were explained and screenshots of them have been used to explain it in a better manner. Yes, the coverage increased for the case they added. According to me, the newly added test cases cover the full range of the project. Just an add on[not important] but you could add a case where the penalty per unit and maximum penalty are the same because in the real scenarios that do not make sense when we have the option of selecting hours or days."
0,The names are easy to understand.
1,Yes the Travis CI build passes. There are no conflicts that must be resolved.
1,The last commit was made on November 1st. There was no new code committed during the 2nd round.
0,It's well organized and in detail.
0,"Yes, the writeup is clear and adequte. But I think the second part didn't finished, I don't see the change on views, regarding the requirement."
0,Functionalities are well mentioned in the README file.
1,"Though there are flow chart diagrams to explain the expected workflow in the project, there ain't any explicitly mentioned test plan and there are no spec files modified to run the tests. However, this can be modified in the next iteration of the project."
1,"Code is DRY and follows Ruby convention. The functions are neither long nor too complex and are appropriately written. Comments can, however, be added to ensure the changes and added functionality to help in the further iterations of Expertiza project."
1,"There are original comments for the functionality already present in the files. However, there are no comments to explain the changes made in the code. The team can add comments, especially in the tree_display.jsx file for the one-liner changes and block code added in the file. Comments can also be added to the tree_display_controller.rb file in the ""action_allowed?"" and ""confirm"" functions to explain the minor changes made throughout."
0,The code has been well written and the variable names are properly used. They are intuitive and easy to understand.
0,The github page is not opening but I downloaded the README file which is attached. The README file is well described.
1,"Just same as the above said, I do not see any tests written in the rspec file folder"
1,"There is no test plan on both the wiki page and Github. 
Please add the Rspec test and convert them to automated tests."
1,No test plan and it's related test cases were converted.
1,"Though the test plan section is absent, the documentation provides a complete flowchart as to how the correct code should work and what is expected of it. It would be better if the team were to explicitly state that in a new test and test plan section. This can be implemented in the next iteration of the project."
1,"The workflow is documented properly and though there are a few missing sections the overall flow is understandable. The purpose has been explained clearly and there are a good amount of graphs to explain the project use cases. The major and minor fixes done for the project are explained well with the help of code snippets. There's also a screencast of one of the fixed bugs.
The team can improve upon the wiki documentation by adding the test plan explicitly and adding the screen recording for the second bugfix (task 2: Instructors can make changes to each others’ rubrics )."
1,"The write up has been carefully written and it is structured well enough to get a good grasp of the project. The flow chart diagrams definitely make it easier to understand how the code is expected to work and the accompanying code snippets help in understanding the changes made to the code base. Lack of a test plan section is one thing that can definitely be fixed by the team in the next iteration. Overall, from the introduction to the major/minor bug fixes description has been neatly laid down."
1,The code looks good and it follows the ruby coding principles. The code had no flaws and there was no need to improve the code. They could have added meaningful comments for the code which was not done.
0,Github link seems to be incorrect as it gives a 404 - page not found.
0,No comments are available.
0,Pretty Clear
1,"Definitely, this code is ready to be deployed."
1,The write up was extremely detailed and very informative. No information was missing from it.
0,Functions are small and are written for what they are intended to do.
1,The webapp works how it was intended to work
0,"Interface is perfect, but seems have no admin user to test admin function. At least it is not mentioned in readme file."
1,Test cases were added and code coverage was increased.
0,The class and variables are named relevantly and are semantically correct.
1,Yes the build was passed
1,"Yes, new commits were added."
1,The code was written very well.
1,I think it is ready to be deployed.
1,Really good. Good job!
1,I didn't find any test plan on the wiki page.
0,"Yes, they did. But the coverage decreased."
0,Yes it did.
0,"Yes, in that sense code is very elaborative along with diagrams to support."
0,It is clear in terms of explanation.
0,Looks good  to me.
1,"I think more comments need to be added. I saw they add comments for tests and views they changed. I think they still need more comments for their controller changes. As they added a new controller for late policy, so they may need to add comments about it."
1,"The writeup is well-organized. The test plan is much more specific than before. I just follow flow of the test plan, and I can easily find out what the function they have finished."
0,Yes the features work as intended.
1,"They added test cases for all cases. And they even post the screenshot of all Rspec tests' result. Although the coverage didn't increase, I think the newly added test already cover most range of this project."
1,"Yes, the build pass in Travis CI, and there isn't any conflict that need to be resolved."
0,Yes there are sufficient comments!
1,"Yes, they committed new code during the 2nd round. And they created the right pull request this round. Great."
0,Everything is well explained and very easy to follow.
1,Yup the write up is easy to understand but missing the test plan
1,No problem. The code seem dry and easy to understand. The only thing they need is to add some comments for all their changes.
1,The authors have implemented all the Test cases mentioned in the Test Plan in their respective Rspec files.
1,"The new functionality implementation is done using if condition in the same method. this is not in accordance to ruby principles. This also makes it harder for your changes to be merged into the final project. Also there are no comments for the changes made. 
The newly added code has been added to existing methods: Consider creating new methods with detailed comments."
1,"Build failed, and there's no test plan section in wiki"
1,"The authors have implemented the new functionality using if condition in the same method. this is not in accordance to ruby principles. Also there are no comments for the changes made. 
The newly added code has been added to existing methods: Consider creating new methods with detailed comments."
1,"app/controllers/late_policies_controller.rb : The variable name change from penalty_policy to penalty_policyx is unnecessary and confusing: need to refactor
app/views/late_policies/index.html.erb : Changes made are redundunt and create unnecessary review delay
db/schema.rb : [DANGER] Field Feedback is removed
                      : Certain changes made are redundunt
spec/models/late_policy_spec.rb : Comments needed"
1,The test plan section of the documentation is organized properly with subsections for each problems and further bullet points for the checks made.
1,The team has done a good job of documenting the proposed changes along with the reasoning behind the proposed changes.The code embedded using pre tag in the expertiza wiki runs over the page and is not visible. I would also suggest splitting the Solutions to problems into 2 sections: 1st one detailing your proposed implementation and the 2nd section detailing Code changes.
1,"The write-up details all important aspects of the project. however, there are certain problems with structuring. The Code snippets are flowing out of screen. I would suggest adding a flowchart to the wiki documentation to assist the review process. Also the code coverage section is empty."
0,"yes i have reproduced the issue and then also checked after the change, issue does not exist now."
1,"The code works properly and has been tested locally. Cases tested include blank policy creation, back buttons functionality."
1,All test cases have been addressed.
1,Code follows all the Ruby conventions and functions are properly modularised. The code is DRY and everything seems to be in order.
1,There are a couple of comments but they are sparse. There can be comments in the LatePolicyController.rb and test cases for the controller so that it is more readable and easier to understand.
0,Team has not tested the code
1,All method names are intuitive.
1,"methods are not long and they are DRY, Comments are needed in the methods, otherwose its hard to follow."
1,"Test plan has been written and it documents the steps to create a new late policy and how the back condition works. However, the team can discuss the edge cases and what they can test further. These changes can be made in the next iteration of the project."
1,"The wiki page is coherent and well written. However, the Code Coverage section is left empty and there can be a screengrab/recording of their working implementation to make the page more intuitive. These changes can be made in the next iteration of the project."
1,"Write up is well written. As per the comments on question 1, screengrab/screen recording can be added and Code Coverage can be filled up."
1,"Policy validations are all working well. Able to create policies.
One edge case I found is, while creating policies, if I put 'a' in maximum penalty, it says
The maximum penalty cannot be less than penalty per unit.
It must say, 'maximum penalty must be a number' right. Just a minor correction required."
1,No they have no created any test plan. Team can test the existing test cases and make new test cases to test the methods which they have creates.
1,"I really liked the write up by team in how they have showed how to reproduce the issue and explained in greater detail, gave many other project details too. Just team should write test cases."
0,The code seems fine. Good coding practices have been followed. Methods are concise and handle single functionalities.
0,No comments have been added but doesn't seem like the change requires many comments.
1,"Most variables seem fine.
Can look into renaming variables like selMenuItem to selectMenuItem, selMenuItemInd tp selectMenuItemIndex, rubBuffer to rubricBuffer."
1,No test plan provided
0,The problems and the teams approach to solve the issues has been well documented.
1,"The documentation is fairly complete and explains what, why and how it's done.
Test plan can be added to make it complete."
0,Yes the feature work as intended.
1,"1)code is short and concise.
2)code is decoupled
3)comments not given on any if conditions and variable names are not self-explanatory."
1,"The code overall looks concise but variable name ""rubbuffer"" is not self explanotary.Also variable name ""selMenuItem"" also not self explanotary."
1,Test plan is not included.
1,"Overall writeup is good but while explaning the ui glitch/ui path error that authors have solved could be explained with more accuracy as there is ui path problem explaining problem with bullets like how to go to that specific page and what will happen would be more helpful.
As current explanation in sentences which is more verbose and confusing. Like the said if you are on assignment tab but how to go to the assignment tab."
1,the writeup is well written but there is no screencast for 2nd task. also as said earlier bullet point approach for explaining ui path would be more helpful.
0,"(1) some of the functions are too long; 
(2) more comments are needed, because you have trouble following the code; 
(3) the code does not follow the Ruby Style Guide.
(4) some code is not DRY."
0,not code is not ready to be deployed
1,I was't able to see any Test plan or automated test. Test should be written for app/controllers/tree_display_controller.rb and modified for other ruby files
0,The build is failing after latest commit.
1,"According to me, the code looks good enough to get merged. Once the Mozilla team approves their testcase changes, their changes can be merged into the OSS project."
1,The document explains how to test the feature but I couldn't find the test case as such.
1,"Yes, the writeup explains the details about what team has been working on. I don't think they have mentioned about design pattern. Other things are pretty clear. The only thing missing would be test case for app/controllers/tree_display_controller.rb"
0,"just as the author said in the wiki, ""Bugs that are still to be fixed: 1. When the instructor doesn’t allow the bookmarks to be created, we can still add the bookmark but cannot rate or review it."", the bug they have in their programme. And the things finish in the wiki has been tested manually."
1,"- The writeup is much better now. They have added enough information for reviewers to understand. They also explained the reason for not doing things like adding comments etc.
- They included screenshots now which is good and a good addition."
1,The write-up is very well written with Github code diffs shown for code snippets which provide for easily readable code. They have also neatly addressed the test plan section and very well explained the setup and steps in their project.
0,"1. There are bugs in a critical feature.
2. Some features are not implemented."
1,"1) The writeup overall is good, they explained in detail about their project. Like file they modified, the work-paln of the framework
2) The size of the screenshots varis, some are too big while some are small. Need to be improved
3) The reason/user story for this project is not well explained"
0,No new test cases written
1,"According to the PR comments and the wiki documentation, we can see that their current code works as expected and their test cases also return true for the iframe tests (expected behaviour). They have also worked upon their code as their per the guidance of Mozilla mentor to write the best version of the code."
1,"Observations resulting from testing only the work mentioned by the team.
Back Button
Follow the steps: Click on exercises assignment->sign up sheet -> click on create bookmark for any topic and don't create a bookmark and then click on back button and at this point we will be taken back to the topics table and in this page also we have a back button and if we click on this, we expect to go back to the submit or review work page but we will be taken back to create bookmark page and there if we click back then we will go to topics page and this goes on and on. This needs to be resolved.
Creation of bookmark:
Followed the steps as directed by the team and when we try to give an invalid url or something like that, the form is not prompting the user to reenter the url but instead we are redirected to the next page where the error is displayed and there is a back button there which the user expects to go back to correct the field again but no, there is no such facility.We will be taken sign up sheet. Since, the form is short we can refill the fields but if we have a lengthy form, then this would be onerous for users.
Validations:
The team has not mentioned what kind of validations they have included for the bookmark form. For example, if I give everything right and give a title as 0000, still the form takes. A title name 0000 doesn't make sense and since we do not know what kind of validations  are included it is easy to misinterpret. May be this can be improved.
If the url is like test.com then also the form accepts. Needs checking as in the code the regular expression  states something different.
As mentioned, even though the authors unchecks the 'Allow participants to create bookmarks', still it allows which will be implemented by the team in future."
0,"Servo project, test cases already written"
1,Testcases are updated as required. They have mentioned in the doc the reason why their testcases are failing.
1,"The team has modified the test cases and checked for whether their changes to the srcdoc iframe HTML DOM are picked up correctly. Since the mozilla code was loading the iframe before it was modified, their tests were failing (assert_false was being called inherently). They have addressed these broken tests and their PR is currently under review by the Mozilla team.
Since their code modifies the HTML DOM and also checks for their changes in the tests, the code coverage should increase."
1,"1) There is no automatic test for their fixes in the frameworks
2) The pull request seems did not pass Taskcluster's test"
1,"For the reviewers as me, I am not familiar with this project like the author, and I cannot clearly understand the detailed function of the bookmark from the information of the wiki page.
Also, as I mentioned above, there's no code and test parts which makes the reviewers feel harder to do the review. 
suggestion:
Please add more detailed content on the wiki page including test and the explanation of the code."
1,"Build fails and merge conflicts detected. But it is a Mozilla project. But the comments mention ""the test will continue to fail until we sync with upstream. That has not happened yet."" so i guess this can be updated likewise."
0,Travis CI did not pass
1,"Whatever is mentioned in the write up is clear but as mentioned in the above comments it can be more clear. Some screenshots of work or a quick video would be good.
Also, the process to guide the user to check the functionality can be more clear and in points so that it is easy to follow.
Mentioning the code files  modified in the wiki page and showing a giving a quick glance of code snippets.
Wiki page isn't sufficient to get the complete understanding of the project so the user had to go to the projects description in the OSS document to get more understanding on it. To avoid this, the team can make their wiki page more informative."
1,- They regularly made some commits in the PR submitted.
1,The latest code commit was made on 06 Nov 2019. The team made consistent code commits throughout the project duration.
1,"1) They have been keep working on this project
2) There have been commits in 2nd round, but most in 1st round"
1,"Overall, the code written was very well and self describing. Names of the variables are self explanatory."
1,"They did not considered different pre-conditions, edge cases, invalid input values, and other possibilities."
1,Code is DRY and well written. Work looks pretty good. Once the dependencies get resolved this code is good to be merged.
1,- The author constantly collaborated with the reviewer of the PR and made changes when needed and asked by the reviewer.
1,"No, I have not seen any test write in the RSpec and the author did not mention about test plan on their wiki page.
 
Also, I have looked through the code of GitHub, there's no Rspec file is changed."
1,"Code has been written well, and they have improved upon the code as per the mentor's comments."
1,"1) The code is DRY enough, there is no bad names for variables and methods
2) No complicated function which should be separate in the code
3) I think there could be more comments since modification with the framework usually associate with a lot of things, sometimes it is really hard to follow with little comments"
1,"Couldn't find any test plan included in the wiki page. Make be test cases like
-Testing the back buttons rigorously by checking different functionalities would be useful as there is loop problem while using the back button as mentioned below.
-Validation testing especially testing the titles and urls with numbers etc.
-creating the bookmark and edit and deleting it.
-visiting the create bookmark page and checking what happens if we don't create one and testing the navigation buttons etc. can be included in the test plan."
0,"yes, this implementation is working as it is supposed to be."
1,"- I am not sure what these changes was supposed to achieve making it hard to judge it.
- The setup is too extensive (not their fault)."
0,The build did not successfully pass so the features are missing
0,All the basic functionalities are working properly but the code written is inefficient/uses bad logic and/or does not follow coding practices. Some cases don't work.
0,No custom tests written
0,Did not discuss all the cases in Test Plan
0,"The code has any 3 of the following characteristics:
1. is DRY
2. follows Ruby style guide
3. is commented
4. does not contain long methods"
0,"1) The code looks good and no method is too long
2) There are no automated tests at all but only to test it manually"
0,actually none of the tasks needed much code and most of them were to updating the already existing code.
0,No such code found. Very less files changed
1,"- Very well commented code.
- They have even added TODOs which is a good practice."
0,Methods and name to be suggestive and reasonable.
0,Well commented
0,Writeup is well written
1,The writeup does not have an explicit Test Plan mentioned. It does have some commands for testing. The testcases that have been used are not explained. I would suggest that add custom testcases and write a bit about them in the Test Plan section.
1,- It does have steps to setup servo on local but do not specifics of what to check and where.
1,The test plan section is succinctly yet accurately written. The test plan can be improved by adding a screencast / screen grab of the actual test to make it more impressive.
0,Not sufficient cases included
1,The wiki page is very well written and detailed. It is coherent and easy to follow the flow of logic. The setup of the project environment could be expressed eloquently.
0,Well documented
1,"1) The writeup does tell the work they did and how they did it
2) The reason for doing this(user story) are too short and really hard to understand why should they do this
3) They used screenshots to help explain the code and there should be more comment to explain also"
1,- Good writeup but I would love to see a description according to a user. What was I not able to do and what can I do now after this change. It would make it easier to test as well for reviewers.
1,"I can understand the project clearly by their writeup.
I recommend you put more details of modifications that you have made to the project. What did you do to fix the bug? Why the changes?"
1,"The writeup looks very well. They have problem section, manually testing section, code section.
The testing section is too short. What function did you test?"
1,Explained with tons of details and well explained but can improve by adding screengrab/recording of their implementation.
1,"The test plan section on wiki is too short.
Did you test the students are getting copied when copying an assignment? I only saw a few lines added in test cases."
1,Not very much comments added. I barely can understand the code.
1,"Functions are not long. No code needs to be saparated to two methods.
 
More comments would be better."
0,"Their writeup well written and easy to read, however I cannot thoroughly understand the project."
1,"You code looks good, but when I followed your instruction to assignment page and clicked ""copy"", when page browses to ""Edit Course"" but not ""Select the desired choice and copy the assignment"" as you stated in instruction. Is the link or something wrong? Please check. (I tried all assignments, and all the same)"
1,"The write up clearly explains which part of expertiza is being tested and what has to be done by the reviewer when testing the application, to specially test their part of the code. My only feedback, and the reason for a 5 star, would be that more could've gone into explaining the code modifications done, so that new files and refactored code can be better understood, and we don't have to dig deep into the code to figure what has been changed (or go on git for the same). 
Otherwise, the write up has screenshots too, which helps in understanding the project on a high level really well."
1,"The write up explains the files changed and what has been implemented in detail. My only feedback is, since this is an OSS project, wherein code is being built on top of existing code that is running well in production, documenting changes in existing files would help in debugging moving forward. I can see that changes have been made to existing assignment test/model files, and documenting this and explaining what specially had been changed would help in identifying changes when refactoring code."
1,"It shows that 8 files have been changed and I personally feel the following after going through the changes: 
1. The Gemfile.lock file Ideally should not be changed, unless documented or requested upon doing so. This file basically contains the versions of each gem and changing it might alter behavior in production, on a running expertiza application, which might cause the application to behave differently. 
2. The test cases (RSpec) when writing it ""XXXXX"", you don't have to mention the method name again, as it becomes redundant. Redundant because the method name ideally is used when writing the clause for describe. We usually say - describe '#getname"" (for example for an instance method), and it ""returns name"" or whatever, so writing it ""returns name from #getname"" is basically redundant. 
Otherwise, the code seems fairly DRY."
1,"There are no comments anywhere in the code, and when adding a new file (view/checktopicscopy.html.erb), it is expected that comments are written to better help understand what exactly is being added."
1,"1. The function methods don't seem to be too long
2. Code is being refactored and divided into different methods and onto different files, which makes it clean. 
3. As answered above, the comments are missing, and having to read code is becoming tedious. Please do add comments to make code easier to read. 
4. The code does follow Ruby Style Guide, with right practices for views/models/controllers. 
5. Code is pretty DRY and well written."
1,Yes the write up is very well written and organised. It provides all details one needs to test the issue resolved. The only improvement i can suggest is to include how to add topics and students to make it easier
1,"The write up is detailed and informative.
I could understand the problem statement, issue and approach very easily"
1,I cannot see any comments in the new code added
1,"Code added is very well maintained and written with all principles in mind, but it doesn't include any comments. I would suggest them to add comments even though the code is intuitive"
1,I cannot see any test cases added/modified in the pull request
1,"I couldn't copy any assignment after first try.
Application kept on spitting The assignment was not able to be copied. Please check the original assignment for missing information. and didn't copy assignments."
1,Manual testing is done on the UI which is not an automated test.
1,"The write up explains in detail, the functionality of the work done by the team. This being a feature/functionality improvement project, the authors have provided sufficient details of what the problem was there with the code previously and what they have done to improve it. I can clearly understand how & what the project does from reading the writeup."
1,"Yes, the write up explains all the work done by the authors and also, why they did what they did and the way they did it.
It explains the problem statement, the solution and the way to test the solution.
Everything is easy to follow."
1,"The write up does include a very well detailed test plan.
Test Plan shows how automated testing passes all the existing test cases as well as how manual testing for the team's feature implementation can be done.
No newly added test cases exist for the new code written by the team. New RSpec test cases can be written to test the newly added functions."
1,"Reasonable and meaningful names have been given to the newly added functions.
Not a lot of newly added The variable/method names can be improved by following some convention, like `CamelCase` or `using_underscore`"
1,"(1) Long methods can be breaken down. In some caes methods could have been extracted from existing long methods. Such as in case for copy functionality in assignment_form.rb. Max LOC limit seems to be okay so itt is fine. 
(2) Code has been extracted to separate methods appropriately (as in case of create method)
(3) Comments have not been added when new functions are created. No new comments have been added by the team to make following the code easier
(4) The code does follow the Ruby Style Guide.
(5) Code is DRY & does not have any smells."
1,"The authors have not created any automated tests for the cases discussed in Test Plan. They have only demonstrated test cases passing using the existing RSpec file and no changes are made to it.
Manual testing instructions are very informative though."
1,The write up doesn't include the name Test Plan but the content include the test plane and is well described. I think the code modification can also be mentioned so that we don't have to look for the code changed or added.
1,"No, there are no comments which make it difficult to understand the code properly. I think comments can be added that would make it more readable."
1,"more comments are needed, because you have trouble following the code. Rest of the things works properly."
1,"The problem statement and test plan are very well documented in the wiki.
The authors have explained the steps to generate the issue with screenshots and the files that were modified for the fix."
0,Not a lot of newly added functions.
1,"Comments are only provided in the ""describe"" section of the spec. No new comments added in the source files."
1,Some edits are only adding indentation (For example: app/controllers/assignments_controller.rb). This should be fixed to make the commits better and merging easier.
1,"The code is readable, but there are no comments in the code. The file app/models/assignment_form.rb if condition section is the example."
1,Codeclimate has listed out 13 issues which are detailed enough and can be made with relative ease. This will make the code DRYer. Ruby style guide needs to followed more.
1,"The code for Issue 1211 passed the build and no work needs to be done for 2nd round.
The build is failing after the last commit for solving the issue 1321. The commit message says added more comments and by mistake, a comment is added inside the array declaration which why the build is failing check line 149 https://github.com/expertiza/expertiza/pull/1564/commits/9018504c17c70f5f76e4dcd64f1900b146dec4e6
After removing this the build should pass and code would be ready to be merged."
1,"variable copytopics is a string that seems to have 'Y' as the only possible value. It might be helpful to keep boolean it instead.
copytopics use copy_topic (snake case for variables)"
1,updated the method but didn't update the comments
1,"if variable copytopics is a boolean then naming it ""copy_topics?"" is more rubistic."
1,"The write up is very clear and easy to follow. The team has stated what the previous problem was and what did they resolve and what is pending too. The steps for checking the bug is very clear.
But there is no explanation about the how did they do it or which parts of the files were modified.
May be including the screen shot of situation before the fix and after the fix would be great because it would be easy for the readers to follow and identify the work doe by the team.
The team tried to include a video but I guess the link is not embedded properly. It is still a text."
1,"In the second round, they add more instruction about test coverage in their wiki page, which makes the writeup more complete and clear."
1,"One test case was written for 1st pull request (issue 1321) but it covered all possible scenarios.
One test was written and coverage decreased for 2nd pull request (issue 1211). https://github.com/expertiza/expertiza/pull/1569"
1,"Names are good, no long functions. enought comments. A lot of commits to improve the code accordingly."
1,"Pull request for issue 1321 failed. https://github.com/expertiza/expertiza/pull/1564/commits
Pull request for issue 1211 passed before 1st deadline. https://github.com/expertiza/expertiza/pull/1569"
1,"There are two pull requests. There was only one commit in only one pull request.
But it seems that both of them were almost completed before the 1st deadline."
1,"It was an amazing idea to loop through all the paths by iterating through a list/array for testing non-exsistence of bug 1321.
There was a minor change in solving issue 1211. And the test case for the same has been well coded."
1,Very clear writeup. They added a lot of screen capture to state the ui operation i believe it is good enough.
1,"Yes but please check where you go after clicking ""copy"" on the assignment page before you deploy this code."
0,No new code is added in the 2nd round. Last commit is on nov 4th
1,the URL given cant be reached. so cant comment on the system operation from ui.
0,the team didn't add any new test cases. the coverage of the tests didn't increase.
1,the latest pull request didn't pass the Travis CI build(pull1564).
1,"The new code and tests written for Issue #1211 are very convincing and hence PR #1569 can definitely be deployed onto the production server.
The PR #1564 however raises a concern as the Travis CI build failed after the latest commit. But as the last commit only involved addition of comments to 1 file, the failing build can be overlooked.
The PR # 1564 can surely be merged with the production server but only after the team tries making blank commit(s) i.e. commits that do not really change anything with respect to the commit before it. This will run the Travis CI build again and there is a very high chance of the build passing.
There is absolutely no reason for this project to be done from scratch and according to me, it is a very good starting place for a future team to pick up from."
1,"The writeup is very well written. By dividing the writeup into 2 different sections i.e. 1 for each issue, the team has done a good job of introducing and explaining each issue, the solution and the conclusion.
For each issue, there are sections like Reported problem, Investigation approach, Testing, Results and Conclusion.
The Testing section for Issue #1321 had a very good illustration (flowchart) of all the possible paths that can lead to the bug. The illustration was followed by the same paths in writing which would have been really helpful in testing the project, had the deployment link worked."
1,No verification of testing or system operation could be done as the deployment link does not load.
1,"The team did not add any new test cases during the second round but had already done an amazing job with the testing part of both the issues.
The coverage on PR #1569 was the same as it was during the first review period as no commits were made to this PR. Hence, the code coverage after the latest commit on this PR had decreased by 3.4% to 27.121%.
The coverage on PR #1564 had surprisingly increased by 3.2% to 33.657%. The reason this is surprising is because the coverage had decreased by 6.2% to 24.298% after the last commit during the first round.
As the only commit that was made after that only dealt with the addition of a few comments to a single file, this does not look right, as comments have nothing to do with code coverage. I think that this behavior of coveralls can also be termed random."
1,"The code is well written.
Variables have been named appropriately. A few more comments could be added, but it's fine.
No new code has been added in the second round, so as such there has been no improvement in the code in the second round."
1,"The Build did pass in Travis CI. But the code climate check did not pass because of the following reasons:
1. Method copy has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. 
2. Method copy has 40 lines of code (exceeds 25 allowed). Consider refactoring. 
3. Use next to skip iteration in line number 342.
These are the issue that need to resolved."
1,"The Travis CI build does not pass for PR #1564 and does not clear all the checks.
The Travis CI build passes successfully for PR #1569 and clears all the checks.
The reason behind the build failing for PR #1564 could not be the code changes made by the team as the latest commit involved only the addition of a few comments and hence the fail could just be another one of the random Travis CI build fails that many people have experienced.
There were zero conflicts that needed resolving as neither of the PRs had any conflicts merging with the base branch."
1,"The team did add many new test cases.
Some existing test cases were also refactored.
The code coverage did not increase, it decreased by -0.003% to 24.391%
There are many new added test cases, so it essentially increases the tests covered range of the project.
Added tests:
- redirect to checktopicscopy page 
- rendering of checktopicscopy page
- copies the original assignment to a new one and returns the new assignment_id when copyoption equals copyWithTopicTeams
Edited tests:
- redirect error message when new assignment is not able to be copied"
1,"The UI works as intended.
The features work exactly like they are supposed to. I am able to view & test the added feature when attempting to copy assignments.
A great job done on adding the feature."
1,"There were no new commits on PR #1569 which addresses the Issue #1211 and 1 new commit on PR #1564 which addresses the Issue #1321.
The commit dealt with the addition of comments to spec/features/peer_review_spec.rb as was suggested to team in the first review.
Note: Please check the Additional Comments section of this review."
1,"The authors have done a great job on the write up of the project.
They have added screenshots everywhere it is necessary.
All the required subheadings have been covered in the writeup.
They also added a section on ""Our Recommendation for a Separate Issue (For Instructors only)"", which includes the issue that the team feels should be addressed on priority. 
They have also added enough information on how to precisely test their added feature which is great."
1,"I think that this code is not completely ready to be deployed onto the production server for the OSS project. It will be after the refactoring required to resolve code climate issues.
I do not have any concerns about the project, apart from the fact that some refactoring needs to be done to resolve the 3 code climate issues mentioned above.
The project need not be redone from scratch using a different approach. This being a new feature adding project, the team has done a great job to implement as well as test the newly added feature."
0,No the Pull request is not passed
0,There were no new code commits.
1,"1) As i am not able to test UI because site is unreachable, according to documentation they tried to fix both issues and they succeed tp resolve it.
2) As there issue is mostly related to fixing bug, more test case is needed to add, as after fixing bug it is good practice to test edge cases."
1,The code is readable but some variables are not in snake_case.
1,1) the new commited code does not pass the Travis build CI.
1,"1) It follows DRY principle and Ruby coding guides
2) comments in test file need to be add and explain why this test is added"
1,They didn't explain how and why they accomplished the fuction. They just explained what their job is. They didn't need to use any design principles.
1,TRAVIS CI build case is failing
1,The UI link is not reachable. So not able to justify on this
1,"Yes, the coverage increased to 34 percent. The newly added tests does have several paths to test."
1,"The build did not pass in TRAVIS CI. The test passed for model, view and controller but it failed for feature class."
0,"Operation from UI seems smooth and works as intended.But,there seems no major difference in the feature implementation"
0,"There are test cases added.But,the coverage has reduced"
1,I think it could deployed onto the production sever since the testcases are passed and no confilt towards the base branch.
0,The write up is great but no changes are made during the second round.
0,"The project has no new code commited during the 2nd round, the latest time to update is in October."
1,"No, I do not think that this code is ready to be deployed or a good starting place for a future team to pick up.
Basically, the first issue they said the bug does not exist, and for the second issue, there's only one line of code be changed, and I cannot even log in to the website to test manually."
1,"Since the website is crashed, I cannot check any function of this project."
0,"Yes, they add the test cases, however, the coverage is not increased.
On the second round, they did not add new tests."
0,"No, their pull request did not pass in Travis Cl. (both pull requests in round 1 and 2)
It seems like they did not keep working on the wiki page at all, it is the same as the first round."
1,"Although, Tests have been reported to be passed in the local, failure of integration tests could be a problem when merging"
1,"Pull Request for one issue passed the Travis test, while it didn't for another PR"
1,"tried a few scenarios, i couldn't reproduce the bug as well."
1,No new methods implemented. The comment #participant id is 3 for student in peer_review_spec.rb line 140 seems to be misleading
0,yes features work as intended.
0,as mentioned on the wiki page. all the test cases discussed in the test plan were not converted into automated tests.
0,more comments are needed. comments provided are not enough descriptive to explain the functionality of the code
0,comments are not descriptive of the code functionality.
1,"the writeup is well documented and clearly indicates the functionality the work is related to. the problem, the approach, testing, and the results and conclusion are clearly mentioned."
1,"I cannot inspect the work, the deployment link is down."
1,"The testing for the first half and very extensive. As you said, the testing in the second half is incomplete although I think the tests will also be very extensive once completed."
1,The build did not pass in Travis CI.
1,No Travis CI build did not pass
0,"Yep, the pull request has been made to repo."
1,The Travis CI Build is Failing as of now. No conflicts as per the GitHub report.
1,"There is no conflict which needs to be resolved.
1 out of 4 build failed in Travis CI"
1,The build is failing due to 4 failures in the model specs.
1,"Travis CI: 3/4 builds passed. 1 failed due to changes made in app/models/tag_prompt.rb - 
 round_number = AssignmentQuestionnaire.find_by(assignment_id: assignment.id, questionnaire_id: questionnaire.id).used_in_round
One case might have failed since the tag returned the slider instead of ID(?). 
There were no conflicts but there might be other surrounding UI/functionality checks to be completed before merging the code."
1,The build didn't pass but it shows that their code doesn't have conflicts to merge. Around 4 errors are found in one of check which relates to the tag report.
1,"No, the build did not pass in Travis CI. There are failed test cases in tag_prompt_spec.rb, answer_tag_spec.rb."
1,"Well, the code did not pass Travis Ci test and the errors are in model section of testing so I would not recommend deploying onto the production server. As why it is failing the test has to be addressed first."
0,I think it could handle all kinds of problem in their function.
1,"Since the build failed, I would not recommend adding it to the production server yet."
1,"The functionality of review count works as explained on the wiki: increase and decrease appropriately. However, the ""Alternate View"" button leads to an error page. That needs to be rectified. This too, is only for the assignment for which the tag counting functionality is enabled. It works well for other assignments."
1,"Some comments are unnecessary which are written for the understanding of the reviewer. Changes in the schema.rb file also need not be pushed. More extensive tests need to be written. Also, the tests failing the build need to be fixed. But otherwise, the code is DRY and need not be done from scratch. I believe this is a good place for a future team to pick up."
1,All the tests described and brought up in the Testing sections of both the issues were converted to automated tests using RSpec in features/review_assignment_spec.rb and features/peer_review_spec.rb.
1,Could not test the team's work as the link to deployment could not be connected to.
1,"1) None of the functions are long. All the functions and tests written are very concise.
2) The new code does not need to be extracted into separate methods as each function does exactly what it is supposed to do and there is no method refactoring required.
3) Comments were provided to help the reviewer understand the code.
4) The new code follows the Ruby Style Guide and the relevant Ruby conventions.
5) The new code does not have any repetition and follows the DRY principle."
1,"There are comments provided for each new test which help in understanding the purpose of those tests.
Though the name is suggestive of what the test does, I'd still suggest the team to add comments to the ""is able to review when submissions overlap with review window"" test in review_assignment_spec.rb to explain how that test is testing that case."
1,"The Test Plan is separate for each issue and perfectly describes the additional tests that the team wrote to check the implemented functionality.
The team tested 1 edge case for Issue #1321 in which a review date is changed when a reviewer is in the review window, which I think is a very good edge case."
1,"The writeup is divided into 2 sections i.e. 1 section for each issue. For each issue, there is a Reported Problem section which introduces the issue, an Investigation Approach section which very clearly describes the team's thought process and also gives a better idea about the project, a Solution section which describes the team's solution to the issue.
A Testing section which describes the Tests that they ran and how they think those tests help in obtaining the results and conclusion which are given in the Results and Conclusion sections."
1,"The writeup explains each issue, the corresponding approach and the solution in detail. It is easy to follow the flow of the project because the writeup was smartly sectioned.
The flow chart and the flow paths for Issue #1321 were really helpful in the understanding of that issue and in visualizing the paths to get to the Begin Review step."
0,The authors work is working as intended.
0,"The code has been tested, covering most of the test cases."
0,"The fix violates the following two requirements(1),(2),(3) from above five listed, The function has too many lines of code added and could have been easily broken down into two or more functions.Also, comments have not been added to methods."
0,Comments have not been added for the methods touched/added as part of the code fix.
0,"The test coverage has decreased by -3.7% to 27%.The variables, methods and class names have been names appropriately, however the functions that have been written are too long and could have been broken into couple of functions that perform one or two sub tasks."
1,1) As i was unable to review the working because the site is unreachable during review. i cannot test the edge cases or the functionality in the proper way. But on the basis of documentation it seems working fine.
1,"The coded functions are average in length.
But More comments especially in file like review_assignment.spec.rb will be more helpful."
1,"1) The test plan in writeup section is looking enough from the documentation part.
2) The test plan in write-up section should have included some detailed comments regarding what test cases are write for what and it will help in future other who will work on adding test cases"
1,"The write-up is lucid enough. put screenshots of the of the work. Also write more detail about previous work on the same issue that someone worked on.
It will be convenient to reviewer to understand what new update team worked on.
 
Team  tries to explain the core of the issue and the process they went through about how they approach and all. While some of information such as mentor meeting and such is not necessary to be included in the writeup.
Rest all is perfect"
1,It popped up with error that the site can't be reached. There was no mention of the team members on github as well as the documentation to be able to contact them regarding the issue.
1,"The test plan exhaustively includes all the tests. The bot passes the tests, but due to not able to check the functionality, I can't assure."
1,"The test plan section looks complete enough from the documentation part. As, I was unable to test the link, because it was unreachable, so couldn't specify about the testcases and edgecases. The test plan should have included some comments regarding what each of the condition does or a screenshot of it in the writeup."
1,"Yes, it tries to explain the gist of the issue and the process they went through. While some of it such as they meet with the mentor doesn't seem necessary to be included in the writeup."
0,"Yes,the features work as desired.But there has not been a lot of change in the code,which could have been made by implementing new methods"
0,"There has change in files,but there has not been any functions implemented"
0,"The build passes,but the code coverage has decreased.But there can be methods written in a better way instead of merely changing the variables"
0,There has been a test plan put up. Writing test cases including different end cases is suggested in peer_review_spec.rb
0,"Though tried explaining the functionality,it is not properly explained as to what the project does"
1,"I cannot goto the page through vcl, so I cannot log in and test the author's work manually, so I cannot test the edge cases."
0,"The wiki pages said that the bugs are not acutally true , so the most part of the work done by the group is writing the tests."
0,"The wirteup is clearly to show the work and the solution they give us, I read it really easily."
1,"Sorry, I cannot do the manual test since the website is crashed. Please run the rails on VCL again."
1,"Pretty well, their variables, methods, and class names are reasonable.
1. The writeup is well written and easy to read.
2. It is adequately descriptive of the work done.
3. it attempts to explain the reasons for the style of code and problem-solving approach.
suggestion:
still, need more explanation about code part."
1,The code they have written is clean and includes comments as well. But the only concern is build getting failed.
1,"The features work well but the build did not pass in travis ci, so not sure if the code is ready to be deployed onto the production server."
1,The write-up is good. It is written in good easy to understand language with relevant sections required. It would have been better if they could also highlight the part of code which was earlier and part of the corrected code to easily comprehend the work they have done.
1,"The write up is very descriptive and coherently written. Logic flows naturally and it is very easy to understand the motivation, the steps undertaken and tests written. The authors have improved upon the writeup adding the test plan part of the document neatly."
1,Write up was pretty good and illustrative with all the necessary sections covered.
1,"the writeup is very well written with a lot of improvements since last time, updating the missing parts and new functionalities."
0,"it is ok, since it is in same style which is regular."
1,"Yes, for the first issue #1321, they did a lot of tests and followed the OSS project documentation make sure that bug actually not exists. They do the test from different perspectives and get the conclusion.
For the second issue #1211, the test looks not complete enough. And it seems like the author took a lot of time to figure out the reason for this bug and made the description, but do not explain clearly about the solution."
1,"The writeup is pretty good, the authors have fixed the issues from round 1."
1,"Yes, they have explained why and how they did the work on their wiki_page, but please add more code part on the wiki page.
In issue #1321, they did very well that gives a flow chart to help others understand this project, and they did the test to make sure this bug does not exist.
In issue #1211, the author wrote the process of solving this project clearly and detailed. However, I cannot fo the website on VCL from the given link on the above, please run the project on VCL again. It seems like the author only changed the code from ""!= ""submission"" to ""==review"", they did not explain much and also I cannot check it since I cannot log in."
0,Yes everything works fine.
0,UI is good enough.
1,"Yes, the count of review tags seems to be dynamic and the total count is shown as well. I can't think of any edge cases that they didn't cover."
1,"As per the documentation, the code works as intended. After clicking ""Your scores"", I can see all the reviews count in the table and the number change is reflected every time you successfully tag a review. The tag count is persisted and no bugs were found in the steps provided.
However, when clicking the ""Alternate View"" button, there is a NoMethodError at round_number = AssignmentQuestionnaire.find_by(assignment_id: assignment.id, questionnaire_id: questionnaire.id).used_in_round in tag_prompt.rb's slider_control() function. 
The team can probably provide a quick fix to this since this is a functionality break and Alternate View no longer works as intended."
0,Yes the teamhas added test cases in rpsec file.
0,The test work well on the function they assigned to.
1,"A lot of relevant test cases are added since round1, the last coverage data shows a reduce of 28% in coverage, new coverage not available since the build is failling."
1,"They added tests for the student_tasks_controller. However, they also made considerable changes in grades_controller and tag_prompt model for which tests weren't written. But the written tests seem to be extensive."
1,The team added new test cases and the tests successfully passed. The coverage has not been mentioned on the pull request. The expectation is that it should increase. The new tests check for 0 completed tags and some x number of completed tags when counting.
1,Yes the team added test cases in rspec. These tests cover the range of the project well. There is no information about the test coverage.
0,"yep, some difference has been made in second round."
1,Yes they have added/tested the code during the 2nd round and pushed the commits.
1,"Yes, there are around 20 commits in round 2."
1,The code quality has significantly increased from the previous round now there comments and variables has been explained well in the comments.
0,It is good in this part.
1,The suggestions made last time have been worked upon and fixed. Along with addition of comments to older code pieces.
1,"Yes, the authors have improved their testing scope and the commenting. They also updated their documentation accordingly. There are no bad names."
0,The test plan is impressive and complete. Very detailed explanation.
0,"The team has now included a test plan section to their documentation.
They have identified the Rspec files to be changed as well as the edge cases which need to be tested. I am not sure as to how you would test concurrency, unless you end up creating threads simultaneously to perform tasks."
1,"Yes, the design includes testing through RSpec and also manual testing but does not cover all the scenarios. Explain testing considering different scenarios will help to test all the features."
0,The team has included a test plan.
1,"The team has put in a lot of thought into the UI testing and mentioned them in great details. Rspec test plans could be detailed out. It seems like the team is yet to plan how to test the functionality mentioned in the problem statement - ""There should be an option when creating assignments that allows the creator to select whether the assignment will use team reviewers or individual reviewers"""
0,"Yes, there is a Test Plan section. It has a step-by-step description of the test to be impelemented."
0,An elaborate test plan has been added to the document. It was missing in the previous round. The tests don't seem shallow.
1,Both rspec and UI tests will be covered and all the steps and conditions for each of these are written. It is not clear how exactly rspec for the following test mentioned can be written: Reviews submitted by teams are treated identically to reviews submitted by individuals.
0,"Yes, they have included UI and rspec tests both, however rspec tests only have the file names, a one-liner about the tests they'd be performing in those files and how it affects would be good."
0,"yes they have included test plan in their design document. They have mentioned about what rpecs files they are going to change and importantly what functionality they are going to ensure in those test files, they have given step by step description of what UI testing they are going to do also."
0,"Yes, both Rspec and functional UI testing has been clearly mentioned in the write-up, showing that the authors know exactly what has to be tested moving forward."
0,"they have RSpec test and manual UI test, good"
0,"Their test plan part is quite complicated and includes all tests they may need.
I like their UI testing part, as our reviewers can easily follow the step to check their functions works or not."
1,"They have clear UML diagram. If a user diagram is included, it would be perfect. User diagram states the relationships between roles and functions."
0,The use of class-diagram and screenshots of before and after are sufficient enough to understand the change made and the underlying implementation.
0,The UML diagram clearly explains the changes to be made to the system.
0,There is good visualization.
1,"Screenshots are helpful. I would like to suggest to the team to modify the flowchart to not only represent how the models come together, but also include the controllers and the views."
0,Images are descriptive. They even contain annotations.
0,"The team has provided snapshots for all the changes that will be made to the UI. Also, a new UML diagram has been added - describing changes and interactions in the models."
0,The UML diagram is self-explanatory and gives a clear idea about where the changes are to be done.
0,"Pretty extensive diagrams, the class diagram is included, screenshots are included wherever necessary. However, they haven't worked on the last time's reviews, and the uml diagram still contains a descriptive text which it shouldn't."
0,"yes they have given mock up screens of how things are now and how they will look after their changes, which screens they are going to change they have also given UML diagram showing the links between different classes and how they plan to implement their feature."
1,"Both a UML diagram and pictures depicting changes in UI have been mentioned, showing the exact changes the team is looking to go about. A database relationship depiction would also have been nice, considering the changes are being done when reviewee_id is being entered into the ResponseMapTable. Nonetheless, it does give good visual aspect to the design document."
0,the URL image is very good
0,"Yes, the UML diagrams clearly describe the relationship between controllers and views they want to modify."
0,"They state the broad case, and files they are going to change in the wiki. More details of what actions are you going to do to these files and why are you going to do are needed. Like a more concrete solutions."
0,"The project seems to be completed and not completed at the same time as there exists a section ""changes to code"", while at the same time screenshots tell that the changes have already been implemented. The UI testing section also suggests that changes have already been implemented.
They have adopted Bullet point style for functionality and subsection containing proposed solution.
The proposed changes are easier to understand as the authors have included both a raw plan as well as a section detailing how they are going to implement the functionality in code using which methods."
0,The design is very simple and easy to understand the flow.
0,"Design document is very straight-forward, sets the required expectations for the reviewer and easy to understand."
0,Design doc has enough sections and images help understand the changes.
0,The design is straight forward and easy to understand.
0,The design is as simple as they could get. The database changes have been mentioned clearly and migration requirement specifically mentioned.
0,"The statement mainly deals with concurrent task execution. They are using the rails mechanism already exists to facilitate a lock on page edits, so that should be good."
0,"design is not that complex, the approach they are following looks good to me, and i think that is the only way we can do it, but to put this design to code needs more of research about what inbuilt features they can use, otherwise i am not sure how team will be able to get this done."
0,The design seems to be straightforward and clear.
0,"yes, can fully understand what they are going to do"
0,"Yes, their design document seems simple and clear."
0,"They design is completed and straightforward enough. But in the change of code section, I expect more details of what you are going to change these methods and files and why."
1,"The team has now included a Test plan in the documentation. They have also removed references for spring 2019. 
The changes proposed by the team sound appropriate at the moment. However, as mentioned in review 1 as well I would suggest trying to assign all members of the same team a common Id rather than having an extra field in the review map. This would simplify the whole process of assign_review_dynamically, automatic_review_mapping and a lot of other functionalities, which rely on obtaining reviewer_id from review_map to establish unique reviews and avoid duplicates or reinforcing review limit, which you will need to change on your current methodology. The only problem would be with the locking situation, which can be solved by a field ""locked by"" and contains a student_id. This will save you a lot of effort according to me."
0,"Yes, the design looks good and it is easy to follow. They have followed appropriate principles and patterns as well."
1,"The document is extremely neat and organized. I would suggest to start with the problem statement and then write the purpose of the project to tie it up together. Also, please don't mention the problems of the design implementation for the proposed solution under ""Purpose and Problem section"". Those are caveats for the proposed solutions."
0,"Changes are clear, but no design pattern is mentioned in de design doc."
0,"Yes, the principles like using a lock have been addressed appropriately and seems like the solution will work."
0,The design documentation is well-written and looks almost complete. The team has added the testing plan since the last review.
0,The design is sound and every detail of the changes mentioned along with screenshots of everything. The design changes in the database and UI have been mentioned clearly.
0,"The document was written as a wiki this time, changed from previous doc. Includes all functionalities, covered the design approach well."
0,"Yes, design looks good to me. They want to enable team reviews rather than individual reviews for some assignments, for that they have to do UI changes and corresponding backend changes. They will be looking for rubrics that can help them lock and unlock the review page when one of the person from same team is reviewing the assignment"
0,"This code can only get merged after merge conflicts are resolved. Also, they have fixed one issue but could not get it approved due to dependencies on the Servo team's side."
1,"The test plan is missing details, I think it's better not only use the automated code."
1,The test plan is detailed and clear.
1,There is only one flowchart.m but it is reasonably clear. There is scope for more visualizations to be added.
1,"The design is as simple as it gets. But it doesn't contribute much, if anything, to the document's purpose."
1,The design approach presented is a 'general' approach that can be applied to literally any software problem.
1,The explanations are very brief and absent in some cases.
1,"yes, as they are working on controller which never had test cases written, team is going to write test cases from beginning, but in test plan section they have just mentioned about the test cases related to new functionality, i am not sure about testing the functionality that is already there. In code coverage they have mentioned about covering 100% so i guess they have covered it in that."
1,yes they have given visualisation of all the issues and explained very well what and where the issue is. and they have also given flow diagram of how they are going to track the progress of their project. Mentioned about the approach they plan to follow.
1,"yeah, they are solving issues one by one. issues seems easy, but they may have complexity involved in depth. 
They have not mentioned any design as such to solve the issues, but just the issues."
1,"This project is regarding solving the issues related to deadlines, as marks are deducted automatically when user does not submit the review on time. They are not as such following any design they are solving the issues in current system."
1,"They have given good description of the issues but they have not mentioned about what exactly they are going to do to solve the issues, as it have been mentioned in all other wiki pages i am reviewing except this one. But otherwise team has done good job in giving full picture to review about the issues and their test plan."
0,The authors have adequately explained the changes to be made to the system.
0,"Yes, the design does appear to be sound."
0,"Yes, it kinda is simple"
0,The class diagram and/or other figures clearly describes the changes to be made to the system.
0,The design includes the test plan.
1,"The design includes the test plan. However, the team could have better explained the testing phase in the documentation. The features which will be tested in the late_policy_spec.rb and late_policy_controller.rb is also not mentioned by the team."
1,"The team has not attached any UML diagrams. The screenshots give an idea about how the User interface will be affected by the proposed code changes. However, use case diagram or a class diagram can give the reader more insights about the code implementation and the new features being added or getting affected because of the same."
1,"The design looks medium complex. The implementation proposed by the team, involves changing the current method to some extent and adding new methods to solve the issues related to deadlines and late policy."
1,"The design appears good. The team has properly explained the issues with the current code and how the new code will be implemented to overcome these issues. Along with that, the team has attached screenshots of the places where the code will be reflected. This gives the reader an idea about how exactly the code will affect the application."
1,The team has attached the screenshots. But the team has not explained the exact places where the code will be affected and what code changes will be made.
1,"Yes they have included test plan section. Compared to previous submission, they have included well-defined and easy to follow test plans for each of the functionality."
1,"The diagram related to the changes in the implementation is well described. But, it only covers part of the issues/changes proposed in the design. Like, it does not cover the issue related with dates updater."
1,"Yes, the design appears to be very simple and clear as it is well documented and they have clearly expressed the changes in the flow in the form of diagrams."
1,"Yes, the design sounds good and it followed appropriate principles but it is not clear which patterns are being used by them."
1,"Overall, they have explained the changes they are going to make in the system.
But, they have not explained how their test cases will definitely increase the test coverage which they claim to be. They should have mention some of the examples of how they will include edge cases in the test cases apart from the happy path. Like, they could have mentioned in the ""automated testing using rspec section"" that they will test whether on copying the assignment having due dates the same gap is preserved or not when you increase/decrease dates from date updater."
1,"> I think the existing issues have been explained but the changes proposed could have been more detailed.
> More details to expected results and the diagrams would have been appreciated."
1,"> Yes the design is sound and follows the principle.
> No mention of the patterns, however.
> A lot has been explained in the existing issues but a little more into how they resolving them would have been appreciated."
1,"> The design does appear to be simple and the changes seem to be most optimal.
> I would have appreciated some more points in the HOWs for the changes probably."
1,"> They have added few visualizations that make it easier to understand.
> Few explanations to these visualizations could have made it more readable."
1,"> Yes they have included both manual and automated test plans.
> The test plans covers all the functionalities and also the corner cases."
1,"I think the tests mentioned in the test plan give just a bigger picture of how things would look if the implementation is done correctly.
The team has however, not made a note about the edge case that are possible and how they would be handled while making changes to the current implementation. I am not insisting on providing an pictorial representation however at least some brief explanation could have been provided."
1,"The team has followed the review comments to some extent and has added annotated screenshots and a flow chart corresponding to their project.
However, I still feel that the flow diagram under the ""Approach"" section is redundant and is not required.
The flowchart under 'Expected Results' explains in a better way about the feature implementation post the changes and serves its purpose correctly."
1,"I think that the design has been explained quite verbosely by the team, with the help of pictures and diagrams and is much easier to understand as compared to the one provided during the first submission. So great job on that!"
1,I think that the design appears sound and most of the changes have been made to the document by considering the comments provided in the round 1 of the reviews. So overall the team has done a decent job after round 1.
1,"The flow chart under 'Expected Results' gives a decent bigger picture of how things would look like when the implementation is all set and done.
However, I feel that again there should have been a detailed explanation about the files and methods being changed and how this would affect the current implementation. 
As mentioned in the previous reviews, the section under project scope appears to be vague with not much details about the estimated code alterations."
1,Their explain about the changes is a little high-level. Such as 'fix the function in ruby'.
1,"Yes, from the diagram I can see that their design appears to be sound."
1,"Yes, the diagram is clear and easy to understand, however, it could be better to add more details."
1,"They write what should be changed in the 'Project Scope' part, however, it's not very detailed. You can specify which method or model should be changed."
1,"They have test plans, it could be better to not only use automatic Rspec test."
1,"Changes are not mentioned in details. Very few changes are explained, also if there's no design then it's not possible to figure out what changes will be done in the system. I can figure out based on the issues listed but it takes time and should be included as part of the design document. There are no details about the files which are supposed to be changed."
1,There's no design or proposed solution given in the project. Only the requirements and expected changes are mentioned in the document. Many of the issues are UI changes but there's no detail about how these will be fixed.
1,"As mentioned in the above question, there's no design section in the document as well as proposed solution, It's not possible to comment on this question until there's a design. Kindly include the design or proposed solution."
1,"There's one UML diagram in the document which explains the flow of late policies. The diagram explains the flow for the post implementation but it would be great to describe the diagram with some text. Aren't there any changes in the DB ? There's no design so i can't figure out but it there's change impact in the DB, kindly include the appropriate ER diagrams."
1,Manual testing steps are given properly but there's no detail for the Rspec changes. As the team is planning to create two new files for the test cases but it would be great to include what test cases will be included in these files. Coverage behaves unexpectedly so I am not sure if it's viable to assert that addition of test cases will increase the coverage.
1,"The authors have explained expected code changes, but they are on a basic level. Deeper insights into code implementation can help the reader understand the features of the system better."
1,"The solution design appears okay. The team has explained the current scenario and the places where the code changes are required. However, the documentation lacks the exact places where code changes are expected and how those changes will affect the application."
1,"The documentation lacks proper explanation on the implementation of the new code. The team has attached screenshots, but without a proper understanding of the expected code changes, it is difficult to decide whether the design would be simple or complex."
1,"The team has added a use case diagram. The diagram gives the reader a basic overview of what changes are expected in the application and at what places on the user interface will these changes affect. However, a class diagram with better code explanation would have sufficed."
1,"Test Plans are important as the newly added code does not affect already existing in place features of the application. The team has documented the test plan. However, it lacks the exact places where the rpsecc testing would be done, and which features will be tested."
1,Good explanantion.
1,Simple and easy to understand.
1,Flow chart is provided. Also the issues and changes have been show in images.
1,Test plan well documented
1,Nothing about which parameters will be tested has been written. It would look more clear if the team mentioned what parameters they plan to test according to the changes made
1,The team has given a flowchart to explain what the implementation will look like after the fixes have been made
1,"It is difficult to determine the design the team has intended to implement. 
For every issue, the team has mentioned 'fix this issue' in project scope.
It is not mentioned anywhere what the 'fixes' are."
1,The intended flow is not very clear. The team has identified the issues through UI well. But it is not clear where code changes are required and what pattern is planned
1,"From the document, it is very clear what the issue in the current system is, in terms of functioning.
However, that is just the project description as provided in the project description document provided to us.
Nothing has been mentioned on code level what is wrong, what part of code needs to be changed or possibly what methods could be added/modified to make the desired changes."
0,There is a screenshot
0,No was design proposed.
0,No specific changes were proposed.
0,"The document only mentions the f required functionalities, but not how the functionalities will be achieved."
0,The design plan is completely missing and the test plan needs to be much more detailed.
1,"1. Team has not created any diagrams to explain the design, they have just mentioned about basic structure of solving issue and testing issue in loop. 
2. No UML were created
3. Diagrams seems irrelevant"
1,"1. No, classes looks correct 
2. what design they are going to follow is not written thoroughly, team has just mentioned about files to be modified and the issues in the file
3. Design or issues does not look that complicated to be resolved. 
4. New design wont effect the response time of the system. 
5. Yes, team should have spend some time and gave more details about design."
1,They have not really proposed about what exact solution they are going to implement to fix the issues. Explanation is inadequate about HOW they will be solving the issue.
1,"Team has incorporated all of the things in majority but explanation could have been improved. In test Plan section team has mentioned about running test cases which is good but what new test cases for all the issues are going to get added, team has not mentioned about them. Enough explanation of what issues are there is done but team could have give a better explanation about how they are going to solve the issue rather than just telling about the file names. some of the issues are self explanatory but for some other issues it needed more explanation. Like for issue 2, 5"
1,"Wiki page overall looks good to me, but they could add some more details about their approach to solve the issues, and some more details in test plan. Team has written very basic details in these sections. Rest things look good to me."
1,"The write up lacks UML diagram. Use Case diagram helps the reader to understand the scenario and get an idea of the proposed implementation. However, the write up lacks Use Case diagram. The team has however added screenshot of the page where issues are present and the features on which they are working. However, the diagrams can be improved further."
1,"The new design lacks proper explanation. The team has written the expected results. However, the file names, the type of code that will be changes is not explained. Also, the write up lacks the test plan description."
1,"The authors have proposed changes for the given issues. However the proposed code changes could have been better, if it was supported by comments, and description of files where the new code will be written."
1,"The design explains the issue as well as the proposed code changes. However, the explanation could have been more detailed. The test plan also lacks description as to what files will change and which new functions will be tested using the rspec model of testing."
1,"The design documentation lacks the proper description of code changes and test plan as well as the UML diagrams. The team needs to work on the documentation and add diagrams, file names which will undergo changes and comments for the same."
1,"Overall, they have used diagrams well and are easy to follow. They have provided their approach to implement the project in a nice flow diagram evaluating each code change well. Just the approach diagram provided is high-level and they should have added another diagram that adds to the approach diagram and provide more low-level details like from which parts of expertiza sections(Model, View, Controller) data will flow to achieve the approach proposed."
1,"From the proposed changes they have included in test plan section, the design looks good that they are adding two spec files to handle test cases related to fixes in the required files and are also using the existing gems to improve code coverage."
1,"They proposed only test related changes in the test plan section. Also they did not explain in detail apart from adding two spec files about what will be the content of the test file or what cases they would test. For example, they could have added test case like that check whether correct edit assignment page renders on click of back button."
1,Yes they have covered all the functionalities mentioned in the project specification.
1,"> Approach flowchart is added however it's hard to follow through without explanation.
> Diagram follows the conventions.
> The only flowchart is high-level.
> More UML diagrams, mockups would be appreciated."
1,"> All the required functionalities have been covered in the design.
> Project scope describes what needs to be done and then there's expected results. However, how and what to be done is not mentioned clearly. There's a diagram for the approach but the team should describe it also."
1,"> Most of the sections are added however they need more elaborate descriptions.
> Please add more description to what exactly you are changing and how it will help."
1,"> Class mentioned for changes seems to be appropriate, considering most of the changes are in ""late_policies_controller.rb"".
> Doesn't seem like the new design would make the code smelly however more explanations need to be added to come to the final conclusion.
> Design seems straightforward.
> I don't see any reason for performance improvement or better response time.
> Design needs more explanation and specific Whys and Hows."
1,"> Quality of explanation is not very good. More details should be added.
> The ""Approach"" flowchart is added but it has not been explained.
> Problem statement is also very briefly explained."
1,"While reviewing the document I felt that, the flowchart mentioned under the 'Approach' section is too generalized for the project since that would be the case for any project.
Hence, it does not serve any purpose in understanding the requirements of the team's approach towards the problem statement. I would suggest that the flow chart is redundant and should be removed from the document.
Rather I'd encourage you guys to add some case specific UML diagrams and/or Database Design which would make it easier for the reviewers to understand how things are actually taking place at a lower level.
Also the screenshot put in the document is just copied as it is and left to the reviewer to understand what is actually wrong with it. I would highly recommend that you point out or highlight the flaws in the current design which would give more value to the image added."
0,"The authors have explained the issues well.
But not much is mentioned about the changes or how the changes will be brought in."
0,"The design document has all sections required. However, lot many details are missing in some sections."
0,Yes Travis CI build passes.
0,Yes many commits have been made
0,"Given the writeup and the screenshots, I would say yes but the link is broken so until one could test the functionalities properly it is difficult to say that it can be deployed onto the production server."
0,"There are no test cases at all in the recent pull request, the write-up has no test case code or test plan as well."
0,"There are all in all three methods included, all one-liners. Can't be shortened, neither can be extracted into separate methods. Code commenting not done, git commit messages have a specified format as well, which is not followed."
0,"The test coverage decreased from 13.9% to 16.586%. The build has passed as well. DRY principle followed thoroughly, method naming is according to the ruby code of conduct. They do perform atomic functions, all the methods introduced are one-liners only."
0,"The latest pull request does not cover test cases. The refactored code should be tested in and out before releasing it for prod. Test cases ensure the previously written code is not failing anywhere due to the recent changes, and we can be ascertained of the changes. The write-up does not include the test plan."
0,"The write-up is not thorough, the issues mentioned in the OSS documentation haven't been mentioned clearly. It could have included the before/after snippets showing a clearer comparison of the two, or rather the screenshots of the code. No test plan coverage documented. Other details like team members details or short video explaining the passing test cases could be included."
0,The design seems fine.
0,Design is detailed
0,They have a workflow diagram included in their wiki. But the instructor part doesn't follow the convention.
0,Design doc doesn't contain details about the function or how they're planning to encounter the problem.
0,"i think the code is ready to be deployed but as it is not passing Travis CI build, I am not sure whether it should be deployed or not."
0,"No the code is not ready to be deployed onto the production server. Primary reason being that the issue has not been solved and build has not passed on travis ci.
 
Also, some enhancements can be made in the implementation so as to make the application more user-friendly."
0,"On logging in as instructor and going to manage-->assignments 
and going to participants...it is giving dropdown to change the role of the participant. But there is no submit button. Hence when we refresh the page, the changes are undone.
I tried testing it for many assignments; even the particular one shown on their documentation; but could not see the submit button"
0,The build did not pass in Trvavis CI.
0,"There were 5 commits made during the 2nd round, out of which the commit '6ba1e4f' dealt with adding new code for flash message after updating participant attributes to app/controllers/participants_controller.rb and the corresponding test to spec/controllers/participants_controller_spec.rb.
The commit '945008b' dealt with the change to participant header, which involved small code additions in multiple html.erb files.
Commit 'fc7f4ca' dealt with fixing the handle issue with import and and adding a test in participants_controller_spec.rb for case where an error is encountered in update_attributes.
In the other 2 commits, the team added comments to all the code changes that they made."
0,Travis build didn't pass. The latest performed on November 6th has build failure. The ones before the last commit has travis build pass.
0,No since build didn't pass yet I dont think its ready to be deployed on production yet.
0,"Yes team added test cases, overall coverage did not increase."
0,Build did not pass for this project.
0,"Yes, there were a few commits throughout round 2."
0,"It has two issues:
1. Submit button is not visible on GUI.
2. Travis CI build failed.
Both of these issues are minor when I had a look at the Github repo and could be easily fixed, I encourage the team to go through the project again and fix this."
0,"I cannot see the submit button on the UI when I compared with the photos on wiki page. The submit button is invisible but I clicked on the area where it is supposed to be the functionality works. 
So the code is working, just I cannot see the submit button."
0,The Travis CI shows build failed. There is one failing check.
0,"The code not yet ready to deployed onto the production server, because not all the pass of Travis test pass."
0,"Yes they did, but the coverage decreased."
0,It did not pass.
0,No new commits.
0,The team added two tests in spec/controllers/participants_controller_spec.rb. However the coverage did not increase (from the pull request). There might be some original tests failed after they have updated their code. So I would give a 4 to this question.
0,"Yes there are 3 commits on Nov.4 and Nov.5.
They added tests and fixed bugs.
I think it would be better if you can commit more to handle all the issues from the first round."
0,they did really good job in order to resolve the problem. best possible solution.
0,can not find the test plan in the wiki page. so can not test that.
0,they used ruby guideline in good form. i can not find any major problems.
0,I can not find test plan in the wiki page. but they did increased coverage.
0,no automated tests have been implemented
0,code is written optimally and principles seem to have been followed
0,not many comments are added
0,the pull request link submitted is before the changes were committed. no automated tests have run after the changes are committed
0,does not specify any test plan
0,"writeup is well written
it is descriptive and gives overview of entire project"
0,There is no Test Plan section mentioned in the document and thus I cannot claim whether the corner and the edge cases have all been covered in the testing.
0,"The function code is not too long, it follows great ruby style coding and it is all correctly modularized.
I would only recommed you to add comments to make the code more intuitive."
0,"As per the claim in the document, the test coverage seems to have increased.
Most of the code remains unaltered, along with a couple of changes done at most and hence it can be inferred that most of the variables, methods and class names are all intuitive."
0,The document does not consist of a Test Plan section covering all corner and edge cases.
0,There were no comments found. But I think the code is kind of self explanatory here.
0,Variables and method names used are reasonable and suggestive. I had no problem understanding what changes are being done.
0,I don't see the have made few changes and test coverage also increased but i don't see any test plan.
0,There is no test plan section as mentioned.
0,"The writeup only mentions that the test coverage has gone up but there is no test plan section mentioned explicitly, nor could I find any mentions of tests other than that they have tested the code and it works perfectly."
0,N/A there is no test plan.
0,There is no test plan section. N/A
0,"Sorry the VCL site is unreachable, so I wasn't able to test it."
0,Only 5 lines of code have been changed which involved slight modifications. The names used/added are valid and suitable.
0,"I did not find a test plan in the pull request, although I am not sure this project requires a test plan."
0,The server is down so I can not test those features.
0,"I only know is they probably did some test, but I don't know the test plan concisely."
0,no problem
0,There is comments for each method but those are not too meaningful
0,The test coverage did increased.
0,"The screen shot did explain what they did, but there is no code in the wiki to see where they change."
0,No Test Plan.
0,"No new methods, no new comment."
0,"They don't have a Test Plan section, only test coverage."
0,"There is no code written. Looks like that after they pushed their changes, some tests already written can be passed so there is 2% increasing in coverage."
0,More comments are needed because readers can not follow.
0,"On wiki, they stated that ""We have noticed that the test coverage increased by two percent."" but what made the increase of test coverage?
There is no test statement or code on wiki and I did not see any one github repo either. The issue is fixing bug, but I think there is some way you can display your solution on tests. 
 
(Plus in project rules, ""For each project, you must write related tests."")"
0,pass pull request
0,works
0,"yes, have test case
Coverage decreased a lot"
0,"Yes, they did have new code committed during the 2nd round."
0,"Yes, they added some new code and did the commit during the second round."
0,Commits were made
0,There are commits during the 2nd round. Many test cases has been added also some code has been changed.
0,"Yes, they have added few commits in the second round."
0,"I think the quality of the code is great. I didn't find any naming, comments, or code style issue."
0,"The code was well written and follows the existing Ruby naming conventions. There are no bad names or long functions that could have been shorter. 
There are no DRY problems in the code as well.
The new code was also very readable and the comments added perfectly described the new code and made it even more understandable."
0,"1) Explain more on the design part and add it to wikipage document
2) Focus on some of the redundant searches"
0,"The explanation is quite good but too lengthy as each point and small changes is described in document
This makes documentation quite long"
0,Search for Reviews: -> point 2 empty
0,ER diagram seems kind of too plain and full of abstractions. Providing UML diagrams would have been seen to be much better.
0,"The code can possibly become smelly. Some searches seems to be redundant, more effort should be expended on design"
0,work successfully
0,"Their writeup is good and easy to follow.
I can understand what they have done."
0,successful deployed
0,I think it can be deployed.
0,It's pretty good
0,The code is written pretty good.
0,"the code has meaningful method names, it is well commented but it failed in code climate."
0,Yes they have.
0,Yes they have the Test Plan part.
0,The code is concise and very readable. It follows common Ruby style.
0,The name and class are good named.
0,Write up should add why you have done anything.
0,Could have created a video which would have easier to check the testing.
0,Only comments where added in 2nd round as mentioned in the review during round 1.
0,The team has added no new testcases. They have only modified parameters of old tests.
0,"They didn't have new code, but they did submit a follow up to address their test failure."
0,There are changes in the names of the variables but still few names aren't good. Comments have been updated which wasn't there in the version 1.
0,You can elaborate more on why you are doing all these things in the write-up.
0,"The user is imported into the system into the system but the welcome email is not received
It is not clear as to how to test the issues that are been resolved"
0,not sure how to test the work
0,more comments required
0,lacking comments
0,"There is no way to test the code works fine or not.
 
The default receiver as per code is not user. test cases have not been implemented. So it is difficult to determine if the code works fine and emails are being sent"
0,"For now it is very hard to test the email functionality, so I leave this to TA."
0,This part looks good for me
0,"Yes, considering that the changes have been noted, the approach seems solid."
0,Their design seems sound. Although they have not used any pattern yet. I think they will add this part after they finished the whole project.
0,no design pattern include in wiki page
0,"I can understand, they fix bug in the previous email project."
0,Changes are good to be implemented. I have stated in the above questions that they need to have more concrete solution proposal in this section.
0,The proposed changes are easier to understand as the authors have included both a raw plan as well as a section detailing how they are going to implement the functionality in code using which methods.
0,"Yes, the authors have thoroughly explained the changes to be made to the system."
0,The team has explained the changes well.
0,"Explanations are good, more details on what code changes are made can be included.Team has marked the screenshots well to highlight the changes on the UI.""Purpose and Problem"" section needs to be worked upon, in terms on structuring and organization, rest seems good!"
0,Overall it looks like a great description.
0,"The team has done a good job in explaining the changes that will be made to the system. They have mentioned what, where and how it will be changed."
0,The changes for team reviews and current backlog has been completed identified and explained in the test doc.
0,"Yes, they've addressed the changes they'd be doing, and also gone with good designs."
0,"Yes, they have given good amount of information and clarity about problem, what they understand about it and how they are going to approach it. UML diagram helps, team has not just identified files but have also given exact methods in those files that needs to be changed which tells team has done good amount of research to start the project."
0,"Yes, all changes including UI and code changes have been clearly mentioned."
0,"yes, they have illustrated the changes to code"
0,"Yes, their description can clearly explain the changes will be made to the system. And the UML diagram helps a lot to explanation as well."
0,They have included one UML diagram and it follows all the conventions. The diagrams help us to better understand the design. The UML diagram is simple and helps for a better understanding.
0,UML diagrams look clear and easy to follow.
0,The UML diagram is self-explanatory and it seems the team has a clear idea about where the changes are to be done.
0,"1. They have not added any specific design diagram to show the flow, but they have added screenshots of how they are planning to modify them.
2. No UML diagrams were created
3. No screenshots are easy to be understood, they have highlighted how they are going to modify the screen, which makes it quite easier to visualize"
0,Their UML diagrams and mockups of screen are clearly shown what they need to finish in the future. I think all the diagrams are necessary and easy to understand.
0,"1. Only necessary method are written
2. The new design is good and clear.
3. The new design looks not complicated because only a few class is revised."
0,Design seems to be good - would not alter the current design way too much and is in line with achieving the goal.
0,the design is good. could have written more.
0,Design looks good and clear. This might probably change as the project is implemented but overall seems fair enough.
0,Both the requested changes are required and the team can research about the existing gems that could help for the locking problem.
0,No design provided.
0,"1. No Classes and methods look fine to me
2. No  It wont make code smelly. They have broken the work in good detail level which will ensure that code is optimized
3. No Design does not look that complicated and even the way team has explained the solution it looks good and easy to implement.
4. No, new design does not do anything that can increase the response time.
5. No, it is easy to understood by anyone, and thats the beauty of any design document."
0,"the relevent classed seem complicate, but the diagram is very precise."
0,The explanations seems good. I can totally understand what they should do in this assignment.
0,The changes the authors proposed are clear and are very easy to follow. The overall quality is really good. They also gave an explanation in text form which explains the changes to be made.
0,Little explaination
0,The features work as intended. Their task is not to change any behavior.
0,They didn't write any test plan.
0,"They have given enough explanation about the problem and design they are proposing. Explained by attaching screenshots. They have mentioned about the files that needed to be changed, but they could have given a better explanation about how they are planning to do it. They have clearly mentioned about some of the things that they will be analysing in deeper sense."
0,"The authors have not added or changed any functionality, they just changes some code, so the features still work as they are supposed to."
0,"There is no access to any code, so can't comment on any code related features."
0,"There is no access to any code, so can't comment on any comments"
0,"good problem statement and proposed solution, easy to follow."
0,There is no link to the github repo or the pull req and no access to any code.
0,"I think everything is easy to understand. They even point out the method need to be modify, it is quite clear."
0,Yes the functionality seems good in their design documentation.
0,There is no test plan section in the writeup
0,They covered their functionality required in the design document. The team-based review functionality was explained in the document.
0,"The writeup does not clearly explain the authors work. It just mentions the problem. There are very few lines pf code in the writeup, just 3 functions with 3 lines of code."
0,"The writeup does not clearly and adequatley indiciate the functionality, can only understand the problem and not what the authors have done."
0,Yes the design document incorporates the functionalities.
0,"In general, the team seems to cover all the requiremenst in the design document."
0,More comments are needed.
0,"While there are a few comments here and there, I don't suppose they were added during refactoring. The new methods do not have any comments associated with them."
0,Features work as they are expected to work. The refactoring has not caused any issues. Logically the changes does not impact anything and hence looks great.
0,The code follows the RUBY practice and follows the DRY principle.
0,"a new problem is proposed and a very clear description of the same is written. Also, the assumptions that they were allowed to make are written."
0,"Yes, This document is very well written. It to the point and covers all the aspects of the project that needed to be done. What files are getting modified, what was the problem and how they are solving it. But they have not mentioned about any test plan.  I am sure team will have a test plan for sure, but they forgot to write."
0,"Yes, the document and design does include all the functionalities to be achieved, along with problems that can be faced moving forward with the design proposed, which actually shows that pros and cons were deduced before coming up with this approach."
0,"Writeup explains everything in a good way, however, the writeup could have been more elaborate."
0,"There were no issues with code functioning that I could find. Since this was a refactoring project and no new functionality was added, the test cases were already handled."
0,"As mentioned before, there is no test plan section and no changes to test files that I could find."
0,More explanation needed.
0,There are quite a few cases that could be considered as edge cases for this project. Please include in the design document as to how this design would be compliant with tests or how you plan to modify the tests. Please also mentioned the edge cases that you come up with.
0,"No UML diagrams
No testing plan."
0,"There is no test plan section in the wiki, nor could I find any mentions of tests anywhere."
0,There is no information provided regarding how testing is to be done.
0,"There is no way to check this as no links to either the pull request or the GitHub repo have been provided. Also, no information regarding test cases has been provided in the wiki."
0,There is no way to check this as no links to either the pull request or the GitHub repo have been provided.
0,There is no way to check if there are comments for any method as no links to either the pull request or the GitHub repo have been provided.
0,No link to the pull request or the GitHub repo has been provided.
0,There is no test plan section in the wiki at the time of writing this review.
0,"The team has done a good job of describing the changes and the need for them. However, they can include more information about the existing scenario which will help to understand the context better."
0,"From the web browser, features now goes well."
0,No test plan or test code was done.
0,"Yes, 1 commit was added during the second round.
No new code was added in it.
It was for changing the name of a variable."
0,The sourcecode link for github is not provided. I cannot check anything.
0,"There is no test condition. They should have added rubocop scores, build test or rspec test report."
0,The writeup was very vague and didnot provide any proper explanation about why they did and what they did. They also didnot show what exactly they have changed.
0,Cannot verify this either as test plan/video is not provided.
0,Cannot verify this either as link to repo/video for rspec testing is not provided.
0,There's no test plan provided in the documentation
0,Not very clear with the reasoning of why some functions were added.
0,Not much commenting
0,The build up has failed.
0,Very well written and detailed write up
0,The coverage decreased.
0,"Yes, a lot of commits were made in the 2nd round."
0,"As it was a refactoring project, the team modified the existing test cases as well as added new test cases to cover the changes they made.No, the coverage did not increase."
0,The code does follow the Ruby Standard principles. The method names and variables name are fine.
0,"The build checks are passing. The travis CI and Code climate passed the tests.:
 
All checks have passed
1 successful check
 
continuous-integration/travis-ci/pr — The Travis CI build passed
Details
This branch has no conflicts with the base branch
Only those with write access to this repository can merge pull requests."
0,"Good Test cases have been written in spec/models/assignment_spec.rb.
though Coverage did decrease:
Coverage decreased (-13.9%) to 16.586% when pulling bea33a8 on bloomingstars:beta into 28eb0da on expertiza:beta."
0,Not sure about this. The code is not running on VCL and there is no video to see the changes.
0,The refactorings are explained well but i don't think there is a need to put screenshots from github on the wiki page since people already have access to the pull request.
0,It looks ready to be deployed.
0,Coverage decreased but the tests look sufficient.
0,The build passes and no conflicts.
0,"Yes, test cases were added."
0,Yes. I think the code is of good quality and ready to be deployed.
0,"Yes, the operation work as intended. Also the wiki page has showed the step-by-step instruction how to test from UI which is very clear."
0,Yes. The team added test cases. The coverage has reached 22.581% which is mentioned on wiki page.
0,Yes. There was new code committed during the 2nd round. The latest commit was 2 days ago.
0,"I think the code quality is good. The code style is good. No problem such as bad names, bad code style or DRY problems was found."
0,Only a couple of commits during the 2nd round.
0,ready to be merged
0,Travis CI passed. Pull Request merged.
0,"Can't see new commits, maybe because the PR got merged"
0,"The authors of the project have done an excellent job in writing a documentation which is simple and lucid. I can see significant improvement from the documentation that is submitted in the first round . The documentation starts with elaborate description of the problem statement which clearly sets up the goals of the project followed by motivation for the project. It also goes further to explain what is the current implementation and why is it buggy and then proposes a solution to these implementations. To back up with the lines of code that are newly implemented, test cases are written along with the code snippets which makes it easier to grasp the content mentioned .  All of these features are a major improvement from the first submission ."
0,The project works as intended when tested from UI. The issues that the project had have all been successfully fixed when tested for the assignment that is mentioned in the documentation.
0,The travis CI test was passed and no conflict is detected.
0,"Yes, it is ready to be deployed. Couldn't get idea of last commit which changed README.md file and then suddenly BUILD succeded. So"
0,"Yeah, I do think there have been tests added for this project. They do cover range of the project."
0,"Yes, new code was added"
0,The write up is well written and is easy to understand
0,2 Test cases have been modified and 3 more have been added
0,Yes the build passes and there are no conflicts in the pull request
0,2 commits after the first round
0,The write up does a good job of stating the problem statement and background. It walks through the team's planned solution as well. The manual testing section made it much easier to test the UI.
0,The system works as expected; I can't request more reviews than limited by the assignment while logged in as a student.
0,"Despite past builds failing, the most recent commit builds on Travis CI. There are no remaining conflicts."
0,"Yes, they updated the readme and added test cases during the 2nd round."
0,Detailed write up was written.
0,The web app works as it is intended to.
0,Yes the build passed
0,"Yes, the code works fine. The code is ready to be deployed into production."
0,The writeup is good and clearly explains the project description and changes that were made. The images clearly explains the project difference.
0,"Yes the team has added the test cases like below:
        allow(ReviewResponseMap).to receive(:reviewer_id).with(1).and_return(0)
allow(assignment).to receive(:num_reviews_allowed).and_return(1)
params = {"
0,"Last Commits were made on Nov 6, 2019. Commit were continuously made in round 2."
0,"In the comments - name should not be mentioned:
 
# assignment without topic -Yang"
0,"The code is written pretty well now, earlier there was no access to the code. But now looking at the commits the code seems fine."
0,"Yes, there are around 20 commits in the 2nd round, and there are 4 files changed."
0,"Yes, the build passed the Travis CI, but there were conflicts in the earlier commits, but after the last commit, the conflicts were resolved."
0,"Yes the team added 1 test case in the rspec, and it covered the range of the project."
0,Cannot access the link.
0,"The writeup did not have a test plan section, the authors fixed this. There was no access to the code earlier, now there is."
0,"I could not see the functioning of the code, so cannot comment."
0,They committed during the 2nd round.
0,They added tests using RSpec for their code in the 2nd round. The tests cover the code they wrote and all pass.
0,This project is to refactor some code. The system works as intended. The features work as they are supposed to.
0,"Their writeup is organized. The writeup includes the description of the problem, how they fix the problem, and their test plan. They improved their writeup during the 2nd round adding their test plan which is good."
0,"I don't think this code is ready to be deployed onto the production server. Because they didn't reduce the number of methods to the number intended. But it seems that they make the code more readable. So, this code may be a good starting place for a future team to pick up."
0,"The code  follows Ruby Coding standards and is DRY.
 
The function length has been reduced as compared to previous functions.
 
Comments have been aptly added."
0,"The team has committed code in the second round as well. The build is successful. The team has performed good work during the second round of submission. However, the TRAVIS CI shows that the coverage has decreased."
0,"The recent pull request shows that Travis CI build has passed. There seems to be no conflict in the existing code that needs to be resolved at the moment. Team has also added comments, as compared to the first submission which lacked comments. Even the test cases have been updated."
0,"The project is regarding refactoring of stage deadlines. The team has removed 2 functions. The functionalities which the previous functions were supposed to do, are still working fine due to the addition of the refactored code. Thus, the features are working as expected from the UI."
0,"The build is passing when referred to TRAVIS CI. However, the test coverage has decreased. So i don't think it will be a good decision to integrate this code to production server. The test coverage should show an increase, so that the previous in line code is not affected. Such is not the case here, and I would not recommend adding this code to production server."
0,The code follows ruby practices well. They have added the test cases for the one method. Follows ruby practices with consistent labelling and and proper method access modifiers.
0,"Yes, this is an Expertiza project and the latest pull request has passed the Travis CI build."
0,"Yes, the team has test cases. The coverage has reduced by (-2.2%) to 28.272%, however we know this coverage figure to be random, so not sure if can go by that."
0,There are ample comments in the functions to tell me what is happening or will happen.
0,Yes the works as it is intended.
0,Nothing regarding testing has been mentioned
0,No there is no test plan
0,The writeup is properly done and is described well
0,"Most of the work is debugging, so I think there is no need to put too much comments"
0,All the features work as intended.
0,"The code are clean, readable and in good ruby style."
0,All tests added and pass.
0,"Yes, they have implemented in for tag count on the home page. But on the project board of the repo, it shows some testing tasks in the to-do phase at the moment."
0,"Yes, It seems fine."
0,"Yes, comment are descriptive."
0,The code was clean and good.
0,The test was written carefully.
0,The methods are named correctly.
0,The code is short and well commented
0,"The build has passed, but the test coverage has decreased."
0,They did comment all the method
0,Methods contains appropriate comments that explain the functionality of the methods and the changes incorporated.
0,Code is enough to explain the work
0,The writeup is detailed and clearly explains the issues addressed along with the code snippets. Hence understanding the project and fixes was easy.
0,brief and clearly wiki page.
0,looks good to me
0,The code changes works for most of the edge cases.
0,All the features are working as expected  and bugs are fixed. But it is explicitly mentioned in the wiki that certain edge cases cannot be considered because instructor need to ensure that they are using accurate data in the import file such as the team name should exist in the system before using it in the import file.
0,They are working fine. The flow of actions performed is the same as mentioned on the wiki page.
0,All the features are working as expected and bugs are fixed. But it is explicitly mentioned in the wiki that certain edge cases cannot be considered because instructor need to ensure that they are using accurate data in the import file such as the team name should exist in the system before using it in the import file.
0,"Yes. Problems mentioned in wiki page are fixed.
On wiki page, there are clear explanation, screenshots and modification of codes show how the issues were fixed as well."
0,The code meets all of the above five requirements.
0,It works
0,No test is carried out
0,Yes some methods have comments
0,Yes they are suggestive of the functionality
0,Test plan is missing.
0,Yes it is well explained.
0,"Code has been given with one line description but it's not sufficient to understand what the method is supposed to do and why it has been written. At few places, one line description is good enough for me to understand but may not be for everyone."
0,Writeup is very precise and delineates the entire process very well.
0,Test coverage decreased to 29%.
0,"All test cases passed, build successful, no conflicts to be resolved."
0,It was easy to understand and I didn't have to search for anything specific. It covers all the necessary sections.
0,Yes. All cases work
0,"The team has modified existing test cases to suit their requirements, such that it covers the code modified in the controller."
0,"Yes, the build is passing"
0,"Yes, quite a few commits were added in round 2"
0,"Yes, the code looks good to me and could be deployed to production slot."
0,Yes the feature seems to be working as intended.
0,Yes the team have added test cases to cover the functionality. However the coverage seems to be decreased but just by negligible percentage.
0,Yes all the check-ins got passed.
0,The team has checked in test cases and modified code in app/controllers/assignments_controller.rb in 2nd round.
0,Team did a good job on writing the code and refactoring it.
0,"I think that the changes implemented are working correctly when tested from the UI and very well explained in the write-up.
The edge cases have also been considered in tested in that every assignment must have an author feedback and other rubric which is implemented correctly by giving a directional link in the flash message."
0,The build passed successfully in Travis CI and there were no errors or conflicts detected.
0,I think that the code is well written and easy to understand as well as quite intuitive since not many changes have been done in the main code.
0,It's ready to be deployed.
0,It works same as in the first review.
0,A test was added but the coverage seems to have decreased slightly.
0,The write explains the current scenario and what needs to be done perfectly.
0,Yes the system works. The code works as intended.
0,The pull request pass the CI tests and there were no merge conflicts.
0,They have made new commits and tried to implement the changes that were suggested in the first round.
0,"Yes, the authors have fixed most of the issues that were pointed in the first review."
0,I have no concerns at this time. The code functions as expected and there are tests written to ensure functionality remains.
0,"I thought that the writeup contained enough detail the last time I looked at it, but it looks like even more details have been added. Looks good."
0,Tested the system manually through the UI. The functionality works as expected.
0,"Yes,everything works well"
0,They pass the build pass.
0,"Yes, they did commit a lot in the second round."
0,The write up self explanatory and contained and provides links to videos showcasing demonstration of the project and test cases passing.
0,"Yes, a number of commits were made on the day of the submission including a commit for adding Rspec tests."
0,The build passes and the system works as intended. And they tested their code. I think this code is ready to be deployed onto the production server.
0,"They explained they work in detail and well.
The writeup includes the problem statement, how they do their work, and their test plan."
0,The system works as intended. The functions works as the document said.
0,The newly added tests covers the range of this project and the build passes.
0,They committed code during the 2nd round.
0,"Yes, it is well written and easy to follow."
0,Yes all checks have been passed.
0,Yes they added many commits before final submission.
0,Test plan seems pretty robust.
0,"Write-up is very detailed and all the steps taken by the authors are indicatedclearly.
The testing process is well elaborated with visuals."
0,"Yes, issue one is UI entirely, lets you add a drop topic deadline. This deadline can be a future date and this check has been enforced as well. The placing of the column is right, the dates are also retrieved the next time once filled in."
0,"Build is passing and changes look good. However, the team has mentioned issue 2 uses some queue which is not functioning, so that can't be tested as such, not the team's fault either. Except for that part, I think it is good enough. The UI thing ie issue 1 could definitely be integrated."
0,I think the implemented changes are in ship ready state.
0,"Yes, new code was committed consistently, also in round 2."
0,Yes they did committed their code changes during second round.
0,no new commits
0,The coverage decreased
0,It is very well written
0,There were many code commits done during the 2nd round. https://snipboard.io/3T2L1V.jpg
0,I think its a good place for future teams to pick up from
0,Yes the final pull request travis CI has passed
0,"Yes, some commits were performed in the second round."
0,"Yes, the build is a pass. Also, there are no merge conflicts with expertiza repo."
0,"Yes, they have created the test plan for their project which includes the Rpsec tests and the UI testing part (2 cases).  But the overall code coverage of the repo decreased slightly by 0.3%."
0,"Yes, it works as expected as mentioned on the wiki page."
0,I didn't find the test cases.
0,"When I go to edit some assignments, I see the error message: undefined method `id' for nil:NilClass.
This is followed by the code snippet:
function populateDueDates(topic_id, review_rounds) {
elementsArray = [];
$('[id^=""due_date_<%= @assignment.sign_up_topics[0].id %>""]').each( function(i, e) {
/* you can use e.id instead of $(e).attr('id') */
elementsArray.push($(e).attr('value'));
});
It looks like there isn't a null check in this function before looking at the due date. It's unclear if this error is related to new functionality. Apart from this, the functionality seems to work. I could modify the deadlines of assignments."
0,No commits were made since October 26th.
0,"Everything in the wiki seems fine except the UI testing instructions for problem 1 are a little vague.
Also, no videos for demonstration and testing are provided."
0,"As the feature for problem 1 is crashing, this project cannot be merged.
No, next teams cannot start from here."
0,"Did the build pass in Travis CI?   - Yes it did
conflict that must be resolved? - No there werent any conflicts."
0,build passed and no merge conflicts to resolve.
0,I think this project can be deployed on production server of expertiza.
0,they did fulfilled all the requirements that were present in the problem statement. all functionalities are working perfectly in deployed application.
0,I found over all code is well written but as mentioned above two methods are a bit longer and can be reduced into smaller method calls.
0,writeup is very impressive. anyone can understand the problem and proposed solution by reading the wiki page.
0,"as they mentioned, they did not required any unit tests to be done. But they did tested the controller for the changes that they have made. good job."
0,they did wrote comments for all important logic and it helped me to understand the code.
0,No test plan and hence no automated tests.
0,Couldn't find the code changes nor the pull requests in the github. Code snippets are included in the wiki but cannot identify what changes have been made exclusively by the team as they are not highlighted and hence not able to comment on it.
0,No the comments are not present.
0,"The write up is detailed and intuitive, also easy to read and understand."
0,The test plan does not consist of any reference to edge cases or invalid inputs or different pre conditions. Test plan could have been more thorough.
0,the test cases need not be implemented since it's wholly on views
0,The views can be tested but not using unit tests.
0,yes each step in the method is explained using comments
0,link for the pull request not submitted. I can't verify the above points.
0,No tests required.
0,"According to the video, it is working fine."
0,They have mentioned that their project doesn't require this part on the wiki page.
0,"The write-up accurately describes the work done to fix the application. I feel it could have a little more detail. Basically, the project was focused on adding user input for drop topic deadline for an assignment, as well as dropping waitlisted topics after the deadline."
0,The code looks clean. Functionalities have been separated and each method does 1 task.
0,"Very few tests have been mentioned as the team claims the changes are in the views.
However, the changes don't seem to be limited to views."
0,"Unable to replicate functionalities.
Also, there's some issue ""An instructor is not allowed to edit this/these assignments"" while trying to create a new assignment using instructor 6 account."
0,"The issues have been mentioned explicitly and the implementation to fix them have been mentioned in the wiki.
However, there's no information on how to go about testing the implemented changes."
0,"""if drop topic deadline is set or updated by user then save it""
The comments like above are properly maintained for each method and very briefly explains the method role."
0,"Yes, the code changes are working fine even for edge cases."
0,"yes, the writeup on wiki explains what are the changes made and where are these made. It also explains how the code functionality is working and what is not. Design principles are followed."
0,"As mentioned above some changes are related to UI and so they have not added test cases for that, but for the new method added they have added two test cases for method  modify_drop_deadline in spec file."
0,Methods are descriptive enough and don't need much commenting as method name suggest what is being done in that method.
0,"Yes, the build pass, although there are several warnings."
0,Build is passing and there are no conflicts visible in the Pull Request
0,The build is passing the Travis CI with no conflicts.
0,"Yes, build is passing"
0,Build has passed after the latter commits. No conflicts
0,"Yes, the pull request has passed and the changes do not have any conflicts with the base branch."
0,"Yes, the Travis CI build passed and there were not any conflict which was to be resolved."
0,I think it is ready to be merged.
0,"Yes, the code is DRY. I do not see any bad naming or design."
0,The writing is really good. The image representation is clear and impressive.
0,The writeup is indeed improved and worked upon since last time!
0,"Most of the functions work as intended in the 1st round, and they improve the system in the round 2."
0,The functionality is working perfectly. The data can be downloaded in different formats along with CSV file format.
0,"The fix addressed the issue, all features work as intended."
0,"Yes, it works"
0,"Yes, the code works as it is supposed to."
0,Works as intended.
0,"Yes, the functionality works as described in the wiki. Also, the newly added test cases pass. Kudos!"
0,"Yeah Tested, the intended functionality works smoothly"
0,"Yes, overall functionality seems to be working. I was able to export the review scores."
0,"Yes, they added passes and changed the coverage."
0,The basic and mandatory Test Cases were added in the previous round itself. And the overall coverage has reduced by 24%.
0,"Yes, the test coverage has increased. They've written test case for some new functionalities they've written."
0,"Test cases have been added to the code with no test case failures. However, the test coverage has decreased by 6.2% to 24.297%."
0,"They made a lot of UI changes which were tested. However, they made changes in the reports_controller as well and i can't seem to find tests pertaining to them"
0,"Yes, the team has added a lot of test cases that cover the range of the project. However, the coverage has decreased."
0,"Overall coverage seems to have decreased considerably, although the team has added simple tests to cover their code additions."
0,"Yes, the team has added test cases to test the new functionality they've added. 
No, the code coverage did not increase."
0,They made several commits in the 2nd round
0,"Yes, new code with added testcases and more comments is committed"
0,"Yes, they added 4+ commits"
0,"Yes, 4 commits were made during the 2nd round."
0,"Yes the team have checked-in codes during second round. The team has added some test cases and comments, refactored variable names, etc in 2nd round."
0,The code is well written. They changed some syntax problem and made small changes in the round 2.
0,The code is written well. However the issues reported in the last review have not been addressed at all.
0,The code obeys all good coding practices.
0,Comments have been added for the second round of review and other naming issues have been taken care of.
0,"The code is very well written and follows Ruby conventions. Also, all the methods are well documented."
0,Comments have been added and the code looks DRY. But should've found a better alternative than putting JS Code in HTML file.
0,"Sure, the team add comments to each method"
0,"Comments in new code are missing, but at the same time, Most methods are self explanatory and do not need comments."
0,Few methods have comments missing.
0,"Yes, the comments are descriptive but abstract."
0,The writeup is straightforward and clear. I really appreciate the flow diagram to represent the MVC relationship.
0,"Yes, the write-up explains the work done by the team nicely with the help of diagrams."
0,Testing seems to have been focussed upon by the team.
0,"Yes, a test plan section is included and following the steps also allows to test the functionality shown in the video."
0,Test Plan was well described. Although the capybara tests seem to fail and hence the pull request did not pass Travis build.
0,It is clear and concrete.
0,"Yes, the write up is very well written."
0,The features works well as intended.
0,"Yes, the author's work functions well and passes edge cases."
0,Comments are not getting exported.
0,Yes the feature works as intended.
0,The code are in good ruby style. It is clean and readable.
0,No function is too long or needs to be DRYed out. Although code seems to be written in JavaScript.
0,"Apart from the comments, I don't have more suggestions for the authors. Ruby coding conventions are followed, in my opinion."
0,The code contributed by the team is concise and well written.
0,"Yes, the names are good."
0,Names of variables and methods are intuitive and don't have need of refactoring.
0,"The test coverage has decreased, the variables, methods and class names are aptly named."
0,Yes all names are intuitive.
0,The additional method are well written and properly commented.
0,"1) Since the language used is javascript, I am not sure if this logic could be put in a helper method instead of a view file"
0,"The variables, methods and class names all looks good. All the names provide information or suggest the functionality."
0,All tests pass
0,I dont see a test case list but they did add some tests.
0,"Yes, test plan is mentioned for testing via the UI. Rspec tests have also been included."
0,"There don't seem to be any tests that have been implemented.However, the write-up has a mention of what could be a good test case for the implemented functionality."
0,"amazing write-up, covered all points, nicely split the issues against the solutions and drawbacks. Included snapshots wherever required, UI and also of the database. The scheduling involves Sidekiq which is not fucntioning, so they've attached db snapshot so we know jobs are being created"
0,"Yes, the Travis CI build passed for the latest Pull Request. There had been random failures before that, but i see some under Features branch, so that should be random again"
0,UI is working fine as it is supposed to be but WIKI page content is not so clear to follow the steps to test the UI.
0,"No test cases are created by the team.
I think they should test some of the methods that they have implemented. 
They wrote in the wiki page that they have modified the already existing test cases but it is not visible in file_changed in the pull request."
0,yes build is passing on Travis CI.
0,"The code written is very neat and clean.
Comments are also there for any one to understand the code.
They could have added some test cases to test the functionalities they have added."
0,The code looks good to be merged and can act as a good starting place for a future team.
0,The overall write-up was already in good shape and well structured.
0,The project works as intended. Kudos!!
0,"No test cases were added but UI testing was done due to the nature of problem statement, however there was a slight decrease in coverage."
0,Build is successfully passed in Travis CI.
0,The comments were apt and proper coding practices were followed in the round 1 submission itself.
0,"on clicking an assignment to edit , the following error occurs

NoMethodError in Assignments#edit


Showing /home/magavade/expertiza/app/views/sign_up_sheet/_due_dates.html.erb where line #44 raised:
undefined method `id' for nil:NilClass

Extracted source (around line #44):





42
43
44
45
46
47
              


function populateDueDates(topic_id, review_rounds) {
elementsArray = [];
$('[id^=""due_date_<%= @assignment.sign_up_topics[0].id %>""]').each( function(i, e) {
/* you can use e.id instead of $(e).attr('id') */
elementsArray.push($(e).attr('value'));
});






Trace of template inclusion: app/views/sign_up_sheet/_add_signup_topics_staggered.html.erb, app/views/assignments/edit.html.erb
Rails.root: /home/magavade/expertiza"
0,"Yes. The coverage decreased overall is just 0.3%. Also, the build has passed along with that there are no merge conflicts with the original score."
0,The code has been commented wherever possible and their code looks clean. They followed the DRY principle.
0,Yes. I think the code quality is good and ready to be deployed.
0,"I think the writeup is great. All problems in this project are well defined. Also, for each of the problem the solution is provided to explain the plan or idea how the team will fix the issue which is helpful. In the functionality section, problems are well analyzed, cases, drawbacks are well explained. Additionally, the code change shows in which file and how the code is modified, which is very clear.
Overall I think the writeup is great."
0,This project is to refactor code. The features work as they supposed to. There are also solutions and screenshots provided on wiki page which is helpful explained what the issue is and how they get fixed.
0,Yes. The most recent commits was on 11/06. There are some new code committed during 2nd round.
0,"Didn't find bad names, bad code style or DRY problems."
0,"There are no build errors on the Travis CI, and the functionality has been added. Therefore, it is ready to be deployed on production. If the project is to be redone, this version would be a good starting point."
0,"No tests were added, and coverage only decreased by .3 %."
0,The Travis CI builds on the latest commit. Previous commits that caused the Travis CI to fail were fixed by later ones.
0,"Problem1: unable to create an assignment. Getting the following error:
function populateDueDates(topic_id, review_rounds) {
elementsArray = [];
$('[id^=""due_date_<%= @assignment.sign_up_topics[0].id %>""]').each( function(i, e) {
/* you can use e.id instead of $(e).attr('id') */
elementsArray.push($(e).attr('value'));
});
 

Problem2: As mentioned in the wiki, this feature cannot be tested, hence, cannot verify"
0,"The team modified an already existing Rspec test but did not add any. However the wiki mentions that all the modifications were mostly in the views hence unit test cases aren't required. Hence, it should be fine."
0,All tests are passing and there are no conflicts.
0,Commits have been made consistently in the 2nd round.
0,The code displayed on the wiki has some functions that are huge and could benefit from refactoring.
0,"Yes the code looks good to be deployed to the production server.
The Test cases do pass and the functionality is working fine."
0,The writeup is good and clearly explains the project description and changes which were made.
0,"The feature is working fine:
The instructor is able to Drop Topic Deadline for topics, Calculation of Drop Topic Deadline"
0,"Yes, the team did edit the spec file writing the newer cases like:
 allow(TopicDueDate).to receive(:upsert_drop_deadline_job).with(any_args)"
0,Last commit was seen on 26-Oct-2019 (Added Drop Topic Deadline column for staggered deadline assignments)
0,The method names and variables names seem good. For example - asgnmt_submission_due_atThe name clerly explains the purpose
0,Code write up is okay but two of the method are a bit longer about 42 line.  Which should be broken into smaller methods.
0,Functionality is working as it is expected.
0,Some changes are added to spec file to modify and add new test but overall coverage had decreased.
0,No new code added after 6th November.
0,Test plan did not specified any particular plan. They had one controller spec that tested all the functionalities that they have implemented.
0,this implementation did not required much of the code. Still they have used the variable and method names in very well formed manner.
0,Code snippets are included in the wiki but cannot identify what changes have been made by the team apart from the existing code as they are not highlighted and hence not able to comment on it.
0,Code snippets are included in the wiki but cannot identify what changes have been made as they are not highlighted and hence not able to comment on it.
0,All the functionality works properly.
0,more comments are needed
0,"Yes, it is explained in enough details and look complete"
0,The feature works nicely in accordance to the description in wiki document and the screencast video.
0,Functions are of proper length and the comments associated with the code added were helpful in following the code changes.
0,"The comments for all the code changes are descriptive enough.
The functions(get_drop_topic_deadline, modify_drop_deadline) pertaining to the feature implemented are quite descriptive."
0,"The test coverage has decreased.
Class names, variables and methods names are quite reasonable.
The build is successfully passed. kudos !!"
0,"The authors have very soundly explained the reasoning behind what they have implemented. They properly went with the flow, They have thoroughly explained the current implementation and the drawbacks associated with it. Furthermore they have detailed out how they are solving each of the problems associated with the current implementation approach."
0,"The write up is very well structure.
- First they have provided background.
- Then they explained the issues they are trying to solve.
- They explained the current approach and the drawbacks associated.
- Lastly, the have explained the feature implementation as well along with the associated code snippets.
Overall great work."
0,"yes! 
The code does straight-forward implementation, the result of which can be checked using views."
0,"the pull request is not specified hence was unable to check and for the code practice overall. But the code listed on Wikipedia are succint well modularised.
However there is duplicate code in wait listed topics deadline update.
      min_left = topic.due_at - Time.now
      delayed_job_id = add_job_to_queue(min_left, topic.id, ""drop_topic"", topic.due_at)
      delayed_job_id"
0,"Write up seems to be concise and clear, the rationale behind what changes have been done and how the changes have been implemented are mentioned clearly."
0,Not sure if the project has been deployed. I cannot find the link anywhere to test the scenarios.
0,No new tests have been added and the coverage decreased overall.
0,"Checked the pull request - there are no conflicts with the base branch, build passed."
0,"There are no new commits. The team seems to have achieved whatever they had planned for during the first round itself, but there is always scope to improve - find and fix issues around the module, add tests to increase the coverage, etc."
0,This is a refactoring project and I could not find a link to the deployed application.
0,The team updated the existing test cases according to the refactoring done and also moved them to a new spec file account_request_spec.rb. The code coverage is decreased by 13.7%.
0,"Yes, it is an expertiza refactoring project and the Travis CI is passing."
0,The build was successful in the first round itself.
0,The code is well written and all the test cases have been updated according to the changes in the refactoring.
0,I think that enough test cases are written. The UI also works properly. I think that this project is ready to be merged.
0,The write up is properly written. All the sections are properly explained and screenshots help to support their statements.
0,The team added many properly written and commented test cases and a whole new file. Though still the test coverage decreased by 6.2%.
0,The last commit was made 11 days ago. So no commit was made after the 1st round submission (maybe because their project was complete).
0,The write up is very thorough and complete test plan is mentioned code snippets and changes in the UI were mentioned and proper screenshots were shown.
0,Since i could not find any link to their project implementation so cannot test weather the refactor works the same way it is expected to. Although in the writeup they have mentioned every changes and added the screenshots of UI.
0,Test cases were modified and coverage has increased substantially. Because it is a refactor project with not much changes.
0,Yes Travis CI  build was passed with no conflicts. Good job.
0,No new code was committed during the second round. Because most of the functionalities were implemented in the first round .
0,Refactoring is done perfectly. The code adheres to ruby standards and comments were added adequately. Name of html class is also well defining of its functionalities.
0,"The code looks fine, it follows Ruby principles but I am concerned as I was not able to test their UI"
0,"The writeup is written well which explains their changes, issues and implementation very well"
0,"As the project is not deployed, I could not test UI"
0,"The team added new test cases which looks fine and covers the changes which they have made to the project. Also, they have modified the test cases to suffice their changes and have added a new spec for a new controller which sounds good. However, the test coverage has decreased by 24%"
0,As they have completed their project before round 1 there are no new commits
0,Ready to be merged
0,Well written writeup
0,Works perfectly fine
0,Test coverage decreased
0,Travis CI passing
0,No commits added after first deadline
0,"As I could not check the functionality on the UI ,I am not sure if the code can be deployed.Also as the coverage decreases,I would rather call it a good place to pick from"
0,"Writeup looks pretty good,as the refractors have been explained in details,with inclusion of certain videos as well"
0,Could not check as the link to check the working of UI is not provided
0,"Though there have been changes made in the test folder,the coverage has decreased."
0,"Yes,the build has passed and I can find it on GitHub"
0,There have been commits made 11 days ago.No new commits
0,"The code looks good in terms of the function complexity,names etc.But there could have been comments put for better understanding of the code"
0,"The project is very well done, and since it involved refactoring existing code, the possibility of it breaking any functionality is very minimal. Thus, the project can be readily deployed onto production server but not without some sanity testing."
0,The write up is very well written. They've also included a link to a video explaining the test cases in the write up.
0,"The team modified the existing test cases to incorporate the refactoring changes that they've done. Also, the test cases seem to cover all of the changes made by the team.
No, the test coverage did not increase."
0,"Yes, the build passed in Travis CI. Also, there is no conflict that needs to be resolved."
0,"There don't seem to be any new commits during the second round. Having said that, the team seems to have completed all the requirement by the first round itself. Kudos!"
0,I think this code is ready to be deployed onto the production server.
0,"Their writeup is organized and explains their work well. They explains the problem statement, how they do their work, and how they test their code."
0,The system works as intended. They refactored a part of code. The features works as they are supposed to.
0,There is no new test. But they already wrote test in the first round.
0,There are no new commits during the 2nd round.
0,"> No deployment URL is provided.
> Couldn't test the functionalities after refactoring."
0,"> The test cases were added in the 1st round only. I dont see any new test cases being added.
> The test coverage has however decreased.
> The test cases seems to cover most of the functionalities and corner cases."
0,"> The build seems to have passed.
> I dont see any conflicts either."
0,I dont see any new commits in the second round.
0,"> I believe the code has been written properly.
> It follows ruby style guidelines.
> The variable names, method names etc. are properly declared.
> Comments are also given.
> There wasn't much complaints from the 1st round , hence i dont see any code updates."
0,Every new method works fine and also the controller they refactored works perfectly.
0,"Yes, the team have added new test cases, which cover new controllers they've written to refactor the original one."
0,Yes. The Travis CI build is passed.
0,"The task was completed and working, that is why this team have not made any new changes and committed ti GitHub."
0,Authors did the work perfectly at the previous iteration only.
0,all tests pass
0,The writeup very well explains what they did (refactoring) and why they did (to remove coupling). They attempted to remove coupling between account requests and user objects.
0,It is explained with enough details.
0,"Yes, the page is rendered according to the screenshot. Rest all was refactoring so did not have much to test in the UI."
0,"Yes, there are a few comments which explain what particular parts (whose functions cannot be easily understood) of the controller do."
0,"Yes, they have properly explained the purpose of the problem statement and how they have accomplished it."
0,Works well with almost all cases.
0,They dont require to have test plan for the given implementation.
0,Everything is well documented and well presented.
0,Everything is good.
0,There aren't any test plans because refactoring makes changes in the existing test plan which they have done.
0,They followed every aspect of design patterns and they used it perfectly.
0,They have explained every details in a great way and perfect implementation.
0,"The writeup is amazing. It clearly explains the need of improvement, the issues and the respective solutions. The writeup provides screenshots which makes the flow and their work easy to understand"
0,The feature works properly
0,"There have been test cases written,but they donot seem very different from the previously written cases"
0,"Though the code follows rub style,there could have been more comments added,separate methods could have seemed even better."
0,the build has been passed.But the code coverage is decreased.
0,"The writeup explains the problem statement.So,it explains as to why they are working on this project.What and how they have worked on the project is explained.But,this could have been explained considering individual issue and how it is solved"
0,The writeup has been written clearly with proper explanation.It could have had more descriptive with the changes made in the functionality
0,Not a lot of tests had to be written as it is a refactoring project.
0,"The code is mostly unchanged. However, the existing code does seem to follow good coding practices for the most part."
0,"Yes, a few methods have been documented nicely."
0,"Since it is a refactoring project, not a lot of new code has been added. However, the team has done a good job of refactoring some method names as mentioned in the wiki."
0,"Although not a section by itself, the team has given a brief about the modifications done to the existing test cases. The team has also mentioned fixes for some edge cases (the case where the list showed all users)."
0,"Yes, the writeup explains the work done by the team in a very concise manner."
0,"Yes, the wiki is well written and easy to understand."
0,"The variables, methods and class names of their code are reasonable and easy to understand. The test coverage decreased (-6.2%) to 24.331%."
0,"No major changes to existing methods, just positioning of methods is changed."
0,Some information about the test cases is given.
0,"1) Function lengths aren't too big. They are very modular. If at all, there's any scope of change, then create_approved_user method can be considered for breaking. But most of them seem fine.
2) Doesn't seem like there's any need to break down a method into 2 separate ones.
3) Comments have been added frequently. Some could be added to test files.
4) The code doesn't seem to be violating any ruby style guidelines.
5) Code is mostly DRY and not smelly."
0,1. More comments are required to fully understand the role.
0,"1. They have commented where they've introduced a new method or refactored something.
2. Comments are descriptive and clear."
0,"The writeup is clear and describes all the tasks they did so far.
They've also included some snapshots, which helps a better understanding of the changes."
0,"Yes, the code is well written and their testing scope increased since first round."
0,"Yes, the current code is ready to be deployed, however I would suggest to add more tests for and around this module ."
0,"The write up is well mentained, screen cast and flow diagram helps understand the goal and how it is achieved."
0,"Yes, new code was added to the second round and issues mentioned in the first round regarding naming and comments have been addressed."
0,The writeup explains the issue and its fix in depth. It also includes the test plan and test case implemented to validate the fix.
0,"There have been commits during the 2nd round. Comments include refactoring/renaming variable names, adding test cases and comments."
0,"Yes, the code can be readily deployed to production as the functionality works as expected and the newly written tests pass too."
0,The write up is very well written and has flow diagrams and other illustrations where necessary. The test plan is also very well written and has all the steps to test the functionality effortlessly.
0,"Yes, the code is ready to be deployed onto the production server as this functionality is helpful for the teachers and graders."
0,THe writeup is very good and explanatory. Flowcharts and different snapshots helps the reader to understand new functionalities in a better way.
0,Travis Build has passed successfully. The functionality is working perfectly. The data can be downloaded in CSV file format.
0,The coding style is pretty DRY. And can be understood if gone through the documentation.
0,"I didn't find much problems with the code in the first round as well and looking at modified code, the team has made use of good coding practices."
0,"The code is well written. I did found issues in 1st rounds regarding comments, the team has improved on the feedback given."
0,"The commits regarding comments is added, No new code entered in the branch as per the expectation. Code was complete by Review 1 deadline."
0,No test in this project so no.
0,I do not understand the hard code with no comments stated. like what is preference_home_flag? what is preference_edit_flag?
0,The tests are thoroughly
0,Not many custom tests
0,"Yes, they have tested the libraries controller and model. The test cases are written in RSpec and are written well."
0,"1. system explodes
2. system explodes
3. no
4. system explodes"
0,"Yes, they have handled these relations very well. For example, a book has many authors, a book belongs to a library, a librarian has one library and so on."
0,"Yes, changes have been committed regularly during the project development.
Descriptions of the commits are self explanatory and anyone can understand that easily.
No, there wasn't any commit after the project deadline."
0,"In round 1, most of the functionalities were missing.
I can see many commits after round 1."
0,"Yes, the team also has provided an explanation for the same in the Readme file."
0,Yes they did. They team had to switch to another repository for the second round because of deploument issues.
0,"Yes, even in the 2nd round the team regularly committed their changes to GitHub."
0,yes the modifications  were continuously made and pushed throughout the project consistently in 2nd phase
0,"The code is pretty clean, except for several long methods"
0,"Methods are short and consice.
Code seems to be well structured both there are unecessary classes, like student_level class.
Naming is convenient."
0,I checked all the controllers and models. The longest method was in the book search function (which is an acceptable code length considering the functionality). So overall the code is written nice and short.
0,Nice job with abstraction!
0,"All the models and the basic operations have been performed. The current version works fine, the website did not crash at any point. Many of the important functionalities are yet to be implemented, but the current version works properly."
0,Interface is fair: it contains the basic elements to navigate across the page. However it is better to provide detailed instructions in the Readme file.
0,"All buttons and informations are shown clearly. However, every single letter is in default format. They could do more jobs on optimizing the look of interface."
0,"Could not test any functionality as an error occurs as soon as I login using the credentials provided, but did find some business logic written in models as compared to controllers, which is one of the good practises."
0,"No new code committed, had a lot of scope for improvement in the refactoring and testing parts as mentioned in the last review."
0,"The new code added is not neat and test cases are confusing, as mentioned in the previous review in details."
0,"They have nicely done what they were supposed to do.
There is only one thing, when adding a student to a team as an instructor, there is no validation about the student ID, thus when typing an invaid ID, an error is raised.
But if the validation is not a concern of their job, then I mean this code can be deployed definitely!"
0,"As shown in the link of their PR, no new test was added."
0,"The last commit, shown on the link to their pull request, is still the one on Oct 28. No new commits. Besides, they made no update to their project on Github as well."
0,1) It is ready to deployed but some more test cases and edge case pass is require before final merging and deployment
0,"1) Yes the operation works as intended from UI
2) More test cases which cover edge cases and negative test cases need to be added."
0,"1) Overall the code coverage decreased by 6.3% and as no commits are pushed, it remains same after first review.
 2) no new tests are added"
0,1) No more commits are added after 2nd review.
0,No new commits were made during the 2nd round.
0,"No, the coverage decrease, so I think they should do more test in the future to increase the coverage."
0,"It's a good writeup, but I don't notice any changes and updates they made."
0,"yes, i think it cover all the scenarios, since the cases is quite simple. But the coverage decrease, so i think they miss some of the scenarios."
0,"No, they did not add the test cases and the coverage decrease."
0,no new commits during the 2nd round
0,Writeup was short. A lot of details could have been added into it to make people understand better.
0,No new test cases were added and only rspec testing was used other than Travic CI build test.
0,The last commit was 11 days ago...https://snipboard.io/EXZRz7.jpg
0,"Yes, authors have incorporated all requested changes."
0,"> The writeup is very good and most of the details have been pointed out, however there are a few things which could have been put .
> A screencast for the testing done from UI could have been put for better understanding.
> The code changes could have been explained a little more and why exactly the given approach was chosen."
0,"> I dont see any new commits.
> Latest commit is of 11 days ago which means the 1st round."
0,"I couldn't find comments in the authors' work. They have added a few comments in spec files. But changes in files ""app/controllers/teams_users_controller.rb"" and ""app/controllers/student_task_controller.rb"" should have been explained with comments so that anyone who sees the code and doesn't have the documentation of this project is able to understand what is done in that part. Authors can write comments based on their documentation itself. It will make the code more readable and understandable."
0,"Authors have explained their approach in detail in Solution section of the documentation. They have mentioned what was the problem, what caused the problem and how did they solve that."
0,The author's work implements all the functionality described in the assignment with no errors. All the edge cases work as expected.
0,"Test plan is not mentioned, but testing has been implemented by the authors."
0,"The code for Rspecs is very confusing, and does not have any comments either."
0,Test plan is missing in the wiki. But the testing scenarios are described well.
0,Write up has grammatical errors and typos. And Test plan is missing as well.
0,"(1)(2) Actually most of the files created by the author has a proper length for their functions, except for ""impersonate_student_spec.rb"". Although they made several comments on each step of their test, the funtion still seems too long, which decreases the readability and makes it hard to locate errors in case the test fails. And because the function contains several parts of tests running, they would be better extracted into separate methods.
(3) I have no trouble following their codes.
(4)(5) N/A"
0,"The main problems, listed as the first two problems, were both located, and the internal logic or reasons were found for both problems, and they fixed them with correct approaches. However, I could not figure out why they list the third one in the problems section. It seems that this one was a task for them, which were not clearly explained. Anyway the result was good, as the functionality they wanted works fine."
0,"As a reader, I cannot figure out why they list the third problem as a problem, cuz in their narrative, no errors were raised. And in the solutions section, again, nothing seems to be fixed.
Maybe there are more documents which contains more information about the third problem or issue, so please list it as a reference, or do not place it in problems section."
0,for feature 2 I am still getting this You cannot impersonate student5000.
0,"All the features work as intended.
1) Just a note that when trying to import team, it requires to add/uplod file, and it allows to upload any kind of file. Just check this ...as this may/may not related to issue you were assign."
0,"Yes, the feature test plans are well converted to tests"
0,wrote meaningful variable name.
0,"They performed feature testing well.
I recommend to add DB test as well"
0,"Couldn't test the work because the deployed link is not connecting. I believe there is a problem with your deployed application. Just running server on VCL will not deploy your application. Please follow the below instructions to deploy your application:
For deploying on VCL, do RDP(Remote Desktop Protocol) on VCL. (https://vcl.ncsu.edu/get-help/documentation/remote-desktop-instructions/). And login to the machine and then run the server from its terminal."
0,The team has converted the cases discussed in Test Plan into automated test cases using RSpec. I wasn't able to check them because the deployed link is not working. I am getting the error: This site can’t be reached. 152.46.17.56 refused to connect.
0,The vcl/heroku link is not working so I cannot test the functionality.
0,They didnot create or modify the tests. They used the old rspec test in their project
0,"Write-up is detailed. There is no enough information about the third issue this team worked on. The documentation just says - 'Third one works fine'
Does it mean that - the team didn't have to do anything to get third problem resolved?"
0,Write-up could be improved for Issue-3.
0,"Please check the URL for your deployment. I am getting following error:->""
This site can’t be reached"
0,"The Pull Request URL has not been provided. Please provide the PR link. I had to search through you PR from the list of PRs. 
> Build has passed
> Test coverage has decreased."
0,I believe the provided wiki URL is incorrect (http://wiki.expertiza.ncsu.edu/index.php/Expertiza_documentation). Could not find anything related to the fixes.
0,"I believe the provided wiki URL is incorrect (http://wiki.expertiza.ncsu.edu/index.php/Expertiza_documentation).
Please provide the correct wiki so that this part can be checked."
0,"Yes, I was able to add a drop due date to an assignment. Since a date picker widget is used, I didn't have to test edge cases with the input entered."
0,N/A The authors did not need to make automated tests because they mainly made front end changes.
0,"The longest added method, 'modify_drop_deadline', was only 19 lines long, which is a good method length. Since most methods are small, breaking them down further with helper methods would just obfuscate the code. No extra comments are needed in methods. The code also seems to follow the ruby style guide."
0,"All methods that were introduced are commented at the top of the method and inside of it. Each comment is concise, but they are frequent enough to thoroughly describe each method."
0,"They explain that the project did not require unit tests, since it was mostly front-end work. They mention that they updated one RSpec file because its controller was updated. It would be good to see a snippet from this RSpec file here."
0,"Yes, the wiki page details the problems with the current implementation, and why they made the changes they did. They state why they made each major change, but I feel that there could be more details for the solution reasoning. They did not use design patterns."
0,"The code changes displayed on the wiki page are not committed and hence don't show up in the pull request.
However, the variable/methods in the code displayed on the wiki page seem fine."
0,"RSpec is edited accordingly to check the test plan:
 
 allow(TopicDueDate).to receive(:modify_drop_deadline).with(topic: topic, drop_topic_date: assignment.due_dates[0].due_at)"
0,"Comments are properly added, cyclomatic complexity of codes looks good as well. Follows the DRY principle."
0,drop_topic_deadline and other names of the methods look good and follow the standard practice of giving noun names to variable and action verbs for method.
0,The write up does not explain much about the test plan. How are edge cases tested etc.
0,The write very well explains the description and functionality of the project.
0,Currently they have only added code to add drop date but scheduler to drop wait listed team is not done so that can not be tested
0,No method is longer than 25 line. Code is  DRY  and follow ruby style guidelines.
0,As mentioned in the test plan most of the changes does not require a test plan and they have made few changes in sign_up_sheet_controller_spec file. Although
0,Write up of the topic clearly explain the issues in this topic and what needs to be done to fix these issues. All details are clearly illustrated and easy to understand.
0,I can understand what author wants to do in this project and write up of the problem clearly mention the problem and what needs to be done to fix these problem.
0,"The pull request is successful, but there is no test that make sure all the above is right"
0,"No test plan, perhaps they test all the thins manually"
0,The write was well written. They included a class diagram of what they accomplished and even included a screencast of how to access what they did.
0,Their major code change was in the assignments_controller and they did add comments for it.
0,"Yes, they gave a description describing all their changes and other details as well which they believed would help the reviewer do a better job such as the testing details."
0,Yes the feature works as intended. Directory was created once the new assignment was created
0,The variables used in file assignments_controller.rb are good. The code clearly depicts what it is doing.  I didn't find anything where names doesn't suggest the functionality.  The method create is also self explanatory
0,"Yes, the write up seems pretty clear. I was able to login and check the functionality with help of wiki page. The UI Testing part helped me understand what should I do."
0,Most of the features are working correctly as tested but have not tested or come across any corner or edge cases.
0,The code is pretty easy to follow since the variables used are reasonable. The altered code is understandable and intuitive.
0,"I think that the newly added code is intuitive as in, it is easy to understand the functionality even though the variable, method or class names would have been unreasonable however this is not the case. So great job guys."
0,The write up is very well documented highlighting the various changes implemented and its working with the help of screenshots. This would make it easier for a reviewer to visualize most of the changes while simultaneously changing the actual changes implemented.
0,The team has added 1 Rspec test for the modification that they have made to check if duplicate names of assignment folders are prevented. Another test to check if assignment folders with different names could be tested.
0,Yes and it passes!
0,Yes. It was helpful to see the added code in the write up and the step by step instructions on how to see the added feature.
0,Yes the feature works as expected.
0,They have added new test plans that cover ll the test cases.
0,"Yes the authors have added the check for valid input, like the check to sanitise the name of the name of the assignment folder when automatically created."
0,Th wiki explains the issues and what needs to be done correctly.
0,Yes the wiki page include all the details and background for the task. They have clearly explained the desired outcome and have also added video and screenshots of the same.
0,ques_array took me a second to figure out what it meant. question_array may be better.
0,"Yes, it works as intended."
0,"I haven't found any tests they added,but they did pass all the tests."
0,"Since there is not many commits in this project, the did well on this requirement. The code are clean and readable."
0,Some comments have been added to assignments_controller.rb. The changes that they have made don't need as many comments anyway.
0,The wiki page only talks about testing details out of which the major portion talks about how to recreate the scenario that they have fixed. It's basically about UI testing.
0,"The UI testing part explains what the team wanted to do, hence, it is easy to understand what they were trying to fix."
0,I tested all features related to their project on the link where they deployed the project. All the features work correctly as in the document.
0,"Their writeup's structure is clear. They introduced the background of Expertiza, what results they should achieve, how and what they do to achieve the goal, and how they test their work. I can understand what the project does by reading their writeup."
0,Yes they have used naming well
0,Yes they have included all the necessary sections and links which are easy to follow.
0,Yes the write up is very well organized and easy to follow all the changes implemented.
0,"There are some attempts of writing test cases for the new functions. But those seem to have failed while TRAVIS CI build was running.
Authors should consider writing some test cases to test the code automatically."
0,"1. Test plan include manual steps to do the procedure.
2. They haven't mentioned any special cases, such as what if a review is missing some value i.e. no name or no unity id etc."
0,"1. Writeup explains everything nicely and clearly.
2. Snapshots and Screencast help to understand the project even more clear way."
0,"Yes, the snapshots and flowcharts help t understand the code in a clear way. The flowchart mentions the plan of the procedure."
0,"This is one of the best writeup I have seen in the review. They provides good description, detailed code, screenshot and even diagrammatic representation."
0,"Most manual test cases are passing but one test case I found to be failing was:
When I Log into expertiza as the instructor -> Load all assignments. (Manage -> Assignments) -> Click on 'View Reports' button -> Choose 'Review Report' from the dropdown and click 'View' -> I get a list of all the students and the reviews they've given. Now, for a particular student, I select one of the teams from Teams Reviewed and open it in a new tab, I get the list of team members and the student's review of that selected team. When I click 'Back', I get an error:
The action 'response_report' could not be found for ReviewMappingController
 
I am not sure whether this functionality was to be covered by you guys or not. But if it is, then have a look into it."
0,"No, the Test Plan's cases has not been converted into automated tests. I couldn't find any new test cases in RSpec for the new code implemented which could be the reason for reduction in coverage."
0,"All the cases discussed in the test plan have been converted to tests, although the capybara is failing"
0,Creating a new Backend method(ReportsController.export_details_fields(t_options)) just for the purpose of testing does not feel like a good idea to me.
0,"Yes, the code is well written. No method is too long and variable names are also sensible."
0,No test cases in this
0,No comments were given
0,It has been done fairly well.
0,write up shows well what has been changed
0,"> I dont see any Test Plan.
> Could not check this as ""test plan"" is missing."
0,"1) Functions are not too long.
2) I think the modules have been carefully created and do not need to be separated from how they have been implemented right now.
3) Definitely need comments in the code. I dont see any right now and its hard to follow up without them.
4) Code follows ruby style guidelines. I dont see any violations as such.
5) Code is not smelly."
0,"There's no test plan and coverage has been decreased by 8% which is big difference and should be handled. Few methods were modified so existing cases can be used with some minor changes, also for the new methods, new test cases should be in place."
0,The comments are used well overall in methods but in UI and in some parts they have not commented
0,"The code can be deployed to the production server, although one thorough and professional testing of the code would be recommended."
0,Comments need to be added and more tests need to be added. Then it should be deployable.
0,The main objective was achieved by the team and the code is adhering to the ruby standards. So it is ready to be deployed onto production server. Although if we were able to check the changes to ourselves if they had deployed it on a VCL server. Maybe i could have given it a complete thumbs up.
0,"> The writeup is very well written.
> Proper descriptions have been added.
> Screenshots have been added for easier understanding.
> Also, I had mentioned earlier about adding a screencast which seems to have taken care of."
0,"As this was a refactoring project, the team did not have to write new test cases. They did modify an existing test case to reflect the change they've made. Also, they've moved the test cases for the functionality they separated into a new controller to a new rspec file, which is in accordance with good coding practises."
0,Everything worked fine for me. I did exactly as the steps that they had mentioned on their wiki page. It worked smoothly.
0,The comments are there for some but not all methods. I am not sure whether it is in the scope of their project to add comments for existing methods.
0,"Since some method shave been moved to AccountRequestController, the team have also updated the test cases. Edge cases are not part of this project as this is only a refactoring project."
0,"The write up is extremely detailed. I really like it because it gave all the functions that were affected due to their changes, working screenshots, a proof that the pagination is being done correctly. Apart from the fact that the test plan of how they test the functions which are shifted to the new controller is missing, everything is very detailed and nicely written."
0,"Since the task was to refactor, they have introduced a new controller and have shifted some methods to that controller.
They've written a Rspec test for that, which passes successfully."
0,The names are very descriptive are the code looks user-friendly. I feel RequestedUser should be renamed to UserAccountRequest instead of AccountRequest.
0,"Yes, the variables and functions like paginated_users, paginate_list, all_roles, requested_users and so on are intuitive and well named."
0,"As I said, they have not mentioned any Test Plan on their wiki page. But they have modified the new_user_request_spec.rb file to handle all the changes brought about by changing the model name from RequestedUder to AccountRequest."
0,Test has nothing in it.
0,"The write-up looks really well organized with most of the areas covered.
Also, the test plan has been illustrated nicely with the help of screenshots which makes it easier and more intuitive for the reviewer to test it from the User Interface. The instructions to test are also quite clear and concise so great job on that.
However, there was no code coverage included in the document."
0,"Yes, the writeup explains their work clearly. They wrote the description of the issue, the files that are modified, links they submitted, what they've done to achieve the requirements and how to test. But they didn't write what design pattern should be used and how they use the design pattern. In the ""list of changes"" part, I think their code may be easier to read if they add some comments in their code."
0,The method names and variable names looks fine. There were no major changes in the existing code.
0,Cannot access application
0,Cannot access github so no application link available
0,Cannot access github
0,"Not sure, I couldn't access the github link."
0,Not that I can tell. Almost nothing works as it should.
0,2 tests have been added for book controller. ( not using Rspec)
0,"In the round 2, there's not many commits."
0,Yes they did!
0,"Most of the code in the application is scaffold generated code, functionalities has not been implemented so that cannot really commend on the quality of the code."
0,Its hard to say but basic operations are implemented.
0,They kept pushing the changes of the codes throughout the project period.
0,"In the github, everyone give their update to repo, there are 93 commit in total, which mean they have a good performance."
0,Interface is clearly declare and easy to find function.
0,Repo has 93 commit and everyone's contribution could clearly tell.
0,Changes were made throughout the time.
0,"nothing special been done for UI, but functionalities are easy to find and use."
0,Yes. Some controllers have been tested.
0,The team has not tested any model or controller. I cannot find any rspec file or any content inside files in test folder.
0,No. There is no unit test of a model or a controller.
0,Only basic testing (through scaffolding was found).
0,Admin account cant be deleted.
0,"No test instruction in readme.md
No test written in test folder."
0,"besides some auto-generated test cases using scaffold command, there are no other test cases present to test the controller.
No test cases has been written for testing models of the application."
0,1) Student can see the information by changing the id in URL [ it should not give access ]
0,"The admin functionalities break while trying to destroy , books and librarian
 controllers are tested for basic functionalities corresponding to the functions in the controller like create save etc.."
0,I think the team has came a long way from round 1. But the code still needs some more testing. I couldn't find test cases in the repo.
0,They would just get removed
0,"The function is not implemented, no not many function can be tested.
Libraries can have negative overdue fee and max day.
Book page is not available to be viewed."
0,"admin is not able to see even the list of books. so he can not delete any of the books.
destroy functionality is not working for student and as there is no book checkout functionality, i can not check what will happen if the student is deleted with issued book and requested by another student.
by changing the URL, I can access admin's account even if i am logged in using the students credentials. That should not be done."
0,"(1) What will happen if the admin tries to delete a book that is issued?
Books view is not working (CRUD/checkout/bookmarking not possible)
(2) What will happen if a student is deleted who had books issued and there are other students waiting for the same book?
Books view is not working (CRUD/checkout/bookmarking not possible)
(3) Can Admin account be deleted?
No, it cannot.
(4) What will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted?
Reservations not accessible
The README.md should also cover how the system handles edge cases.
The README does not cover how the system handles edge cases."
0,"1) Delete student not working 
2) Approve librarian account by admin not done 
3) Librarian can access account without admin approval. [Change this to -> Librarian can access account only after being approved from admin]"
0,Cannot test edge cases as many features are not working.
0,"1. Since I was not able issue a book, I couldn't test this functionality
2. Since I was not able issue a book, I couldn't test this functionality
3. Admin account cannot be deleted
4. Since I was not able issue a book, I couldn't test this functionality
5. I have explained other cases in basic functionalities"
0,"A lot of things are fixed, while there are still some items pending to be perfected, admin view book would throw an error, and admin create account are done by redirecting to account self creation. Though there are things that could be done better, I could see major improvements!"
0,"The system has necessary models, controllers, and roles.
Logic are not written.
Students cannot borrow books.
 librarian and student function not implemented internally."
0,"admin can not see the list of all books and also cannot perform any action related to books.
as an admin, the only things that he can do is view, edit libraries, students and librarians.
when click on create student account from admin, it redirects to sign in page. that is not logically correct.
when admin creates new student or librarians account, admin automatically get logged out of his account.
bookmark functionality is not working."
0,"Most of the issues in round 1 have been corrected.
Books view is not working (CRUD/checkout/bookmarking not possible)"
0,"1) Navigating buttons like back button after creating book is not working.
2) Bookmark functionality not working 
3) Student functionality like Book checkout, etc not implemented
4) Search through the books is not provided
5) Librarian functionality not implemented like add book, approval request, edit library attributes, etc"
0,"The following features do not work:
 
1. The Admin cannot edit their own profile (or get to it via UI for that matter).
2. The admin cannot view the list of students with checked out books
3. The admin cannot view the list of students with late fees
4. Student cannot edit or view their profile
5. Librarian cannot sign up. (so, none of the librarian features can be tested)
6. A cover photo cannot be uploaded for a book.
7. Cannot view list of books. (thus, cannot test checkout, return, etc.)"
0,"The team has come far away from the 1st round. Although I have found few issues:-
1. Anyone with url can access student or librarian information.
2. Anyone can signup as librarians but there is no system of approval from admins
3. When clicked on view books for librarians, the system crashes
4. When admin tries to create student/Librarian, it's basically redirects to student/librarian login page. As per my understanding, admin has authority to directly create them.
5. I am not able to update image wile creating a book.
6. I was able to set -1 as book edition. I am not sure if that should be permitted
7. I couldn't see option of checkout for book. Only bookmark link is available which also crashes after clicking it"
0,"there is nothing present in the database for the bookmark. since student and bookmark has 1 to  n mapping, there should be another table for that. but it is not present there.
above given thing applies to the checkout also. but there is not present table regarding that in the database schema."
0,The system does not handle 1-n & n-n relationships correctly. Books view is not working (CRUD/checkout/bookmarking not possible) hence checking relations does not work conclusively.
0,"I cannot view books through admin and librarian page but can view them in students.
Also bookmarks are not working.
Checkout and hold request has not been implemented."
0,Yes the system handles relationship between models
0,"Only 33 commits.
The commits are made in the entire period."
0,"by looking the history, i can not say that team has submitted their changes throughout the project regularly. 
most of the commits that i can see is for heroku testing. all other commits were for the basic adding and editing functionalities only."
0,"In general, the team kept on submitting their changes throughout the project and made a lot of commits which is a very good practice.
In round 2, the team constantly committed changes."
0,"Yes, the team regularly push the changes in project."
0,"yes! the team has started to deploy in heroku early and then continued pushing changes,
This has avoided the last minute hassle.
 many functionalities were periodically added.
There are many commits in round 2 . More than the commits in round1"
0,"There was not much work done during the first phase, but they submitted many commits during round 2."
0,"Yes, the team has kept on pushing their changes."
0,"Code is clean and readable.
But some commit messages are not readable.
One method only has one function."
0,"all the methods that I can see in the controller are all auto generated using scaffold command. so definitely they are optimal as possible.
As there are no other functionalities implemented, I can not find any complex methods in the implementation.
even there is not any method names check out related to book or student."
0,The code for functionality that is implemented is well written. But can be improved like creating two different function for performing two different logic
0,"the code has maintained the scaffolding design . 
When more functionalities are added it increases clutter of functions
this is when the code quality can be checked"
0,Yes the code is written in clean and readable way. The naming convention is also up-to the mark.
0,I see a reasonable amount of activities on their repo
0,Only 8 commits have been pushed. The homework folder is likely empty. The earliest commit 5 days ago.
0,"here, the credential of the default admin is not specified anywhere so I am not able to log in as the admin to the system.
default credentials of students and librarians are also not given. so I tried to signup but in sign up I got an error of the first name and the last name should not be blank. but there are no entries present in the form to enter those values.
so, I am not able to test this project even a little bit."
0,"Not much commits in total, and started only 5 days ago."
0,"I actually have to dig into their git hub code for this, seems they at least have the books module, it need more restriction on who could access."
0,no self tests are written. only auto generated controller tests. Better write tests before implementing code.
0,"Didn't see the proper relationships between library-book, book-bookmark etc."
0,"Not much is developed yet, so no testing has been done.
Testing has not been implemented for any of the models or controllers yet.
Suggestion:
 Implement testing for any one model and one controller."
0,"No, didn't get to test funcitonality of models and controllers. Also no test code in test files."
0,1) Provide detail for pre-configured admin
0,"The books and library and model is correct as per the functionalities implemented as of now.
The usage of cancan::Ability may allow universal access to admins. But since testing wasn't possible , the effectiveness of the  functionality couldn't be checked. By manually migrating through the url:
BOOK:
The book view needs image field to display a picture of the book.
The edit and add new book feature works well.
The search function needs to be implemented.
 LIBRARIES:
the relation between libraries and books are established well(foreign key).
addition of library and edit library attributes work
 The user functionalities can be enhanced as follows"
0,Login is quite intuitive
0,"I am not able to sign up as students/librarian because it requires first name and last name, but no such blanks provided for signing up. No pre-config admin username and password provided. So I cannot reach the function page."
0,"Readme does not exist.

Suggestions:

add a readme file"
0,Readme is not updated. Admin user details are not given. I am not able to sign up as a student. I am not able to create a new user as the first and last name field is not given in sign up.
0,Interface that I can access is intuitive.
0,"1) signup form shows email, password and student/librarian...but when submit form it shows name can't be blank. add name field in form"
0,"The readme.md file could be edited to describe the functionality of the application. The readme.md file could contain a short description about what the application does.And how to use it.
The UI for sign up shows 2 errors. this is because, two input fields , first name and last name are removed. In devise gem, the controller that's being redirected to by the sign up view page needs these attributes.This can be resolved by hiding the fields and giving default values. that way the user can sign up without providing first and last names.
Further readme.md file might be modified to provide credentials of admin and few users to ease testing
2 errors prohibited this user from being saved:

First name can't be blank
Last name can't be blank"
0,Nothing has been done in code.
0,"Not much code is written for the features. Not much good ruby and rails coding practices have been implemented, apart from the fact that proper scaffolds have been created.
 
Suggestions:
Add functionality to the system by adding features to it."
0,"Yes, controllers and models did what they should do."
0,1) Follows convention over configuration
0,"From what I can tell, there is nothing more than the skeleton implemented. So, to that end, the code is fine."
0,Could not check any admin functionalities as the preconfigured admin credentials did not work.
0,"1)Was unable to login with the preconfigured admin credentials.
2)The Profile edit for Students and Librarians is the same."
0,"Yes, the team committed a decent number of times in the period between the first review round and the final submission."
0,"https://stormy-savannah-68522.herokuapp.com/libraries hitting the URL without authentication leads to an error page and not login.
Unable to checkout book from student account after creating one through admin account. (clicking on show from all books page lead to UI crashing)
Clicking on library>show leads to UI crashing."
0,admin can not log in with given account and password
0,Could not test any edge cases as a lot of the functionalities are missing.
0,Requests were not handled.
0,GUI is pretty intuitive.
0,coding standard can be considered as good.
0,"The system are not able to pass or test most of the questions. However, for the third question, the team did consider the condition that admin is not able to delete itself."
0,No idea. Can't see repository.
0,Cannot view repository.
0,I am not able to open the Code in Git Hub. Is the repository made private?
0,The git repo is not accessible hence it is not possible to comment.
0,No git repo provided and neither the student nor the librarian can log in to the app
0,"I cannot see the repo, so I don't know whether there is any test or not. So I can only give an average point."
0,I don't think so
0,no.
0,"Admin login is not working. So, can't check a lot of things especially the corner cases. I found that the librarian is able to sign up and no authorization is required from the admin's side for the approval of the librarian. This was against the specifications."
0,"I couldn't test a lot of functionalities as I was unable to sign in using admin account. The email id and passowrd provided in the readme file didn't work for me. Showed ""Invalid Email or Password"" error. I signed up as a student and checked out a book. Then I signed up as a librarian for the same library but I was not able to see that that book has been checked out. ""View checked out list"" showed an empty page."
0,"Database has been managed very efficiently using belongs_to and has_many in various models. Hold requests, students, books, bookmarks, libraries, librarian are nicely related to the entities which they should be related to. 1-to-n and n-to-n relationships have been nicely taken care of."
0,"The team has followed almost all coding guidelines. Methods are written are specific to the task that they should be performing. Good/standard naming conventions are followed. Also, ruby-istic way of programming has been used for the application. Oveall, the code is huma-readable. Though I found the controllers to be very empty. I counldn't find the code for many of the functionalities."
0,"Model has not been tested
Controller has not been tested thoroughly"
0,Yes the team has tested one model and controller.
0,"Yes, the system does handle relationships well."
0,Yes the team did keep pushing their changes throughout the project.
0,Many test code about controllers.
0,An interface that the Admin account can be deleted is given and the Admin account can be deleted.
0,"After signing up, the newly-created user cannot automatically log in."
0,The team has written appropriate test cases for models and controllers.
0,The application properly handles the above-mentioned edge cases. Could not check some edge cases due to the limitations mentioned in the previous answer.
0,The DB design of the system is pretty good. Satisfies all the entity relationships that I could think of.
0,"Yes, the commit history of this team is pretty good."
0,Overall the code quality is pretty good but there are some methods that are too long and could be modularized.
0,"The team has tested most controllers but the tests for the model are all commented but based on the experiments I have done, it does look like the models have also been tested."
0,"Yes, the team did keep submitting the changes throughout the project. They also kept pushing changes during round 2."
0,"The code is well written:
1) Methods handle only one task.
2) Good variable naming convention has been followed.
3) I did not find any long methods or bad coding practices that may have been followed."
0,Yes team has tested admin controller thoroughly.
0,Yes i can see in code they have added proper validations for library-books 1-to-many relationship.
0,Yes team submitted their changes throughout the project and also during round 2 of review. Also few commits on 12th and 10th.
0,Code is of readable quality.
0,"In addition to the test code generated by the scaffold command, the team has created RSpec for the Student model and tested a couple of scenarios."
0,"Yes, the team kept submitting changes throughout the project. They also pushed changes in round 2."
0,All the application logic is present in the controller.
0,No tests have been written. Models are yet to be tested.
0,The README.md file is very well written and is descriptive enough to understand the smooth functioning of the website
0,good user interface
0,"Cannot log in using admin username:111111@111.com
                               and password: 111111"
0,The user interface is clear and concise. Not difficult to understand where to take the next step.
0,"I failed to log in as an admin using the admin account given in Github. But an entry to signing up as a new admin works. I was able to to take actions like editing the admin's profile. But, it is better that the admin account is already preconfigured according to requirements of the project."
0,"After the initial commit of 20days age, most of the commits were from last week."
0,I was not able to log in as an admin via the username password provided on Github.
0,"Yes, majority of features were tested but more testing is required. Corner cases are yet to be taken care of."
0,The team has made good use of Github for the project.
0,The project has been following good Git and Ruby on Rails practices.
0,The UI is intuitive and easy to use. The README is also descriptive.
0,Git hub repo is not public so couldn't check it.
0,"Yes, the team regularly pushed code to the github throughout the duration of the project."
0,It does not seem like testing has been done thoroughly for any model or controller. The test folder seems to have files with the auto generated test code.
0,"UI is a little tricky to use, finding links can be a little challenging. However, the same is described briefly in the README file.
README also contains mostly the project problem statement."
0,Couldn't find test cases
0,Delete cases not handled.
0,Massive improvement compared to previous version. However Issues found in some major functionalities as described in further comments
0,"Yes, the team did keep submitting the changes throughout the project. They also committed changes in Round 2, but majority of the commits seem to be coming from just one collaborator."
0,Yes. the code is readable.
0,It's pretty standard with everything in one layout
0,"Most are easily accessible, some like book checkout could be better."
0,They have tested using the internally generated test filed using the scaffold command. I can see a few changes modifications made in that file as per their data. But they have not used RSpec as mentioned in the document.
0,No rspec found in the project.
0,Github not available to check the testing
0,1) when change url from https://ncsu-library-management.herokuapp.com/students/97/edit to https://ncsu-library-management.herokuapp.com/students/96/edit...it should show some notice about access restriciton
0,"1. Admin can not view basic list of books. It is not the best implementation method,but does the job.
2. Admin is able to delete a student who has checked out books. Incorrect Implementation.
3. Admin account can not be deleted. Correct Implementation.
4. Admin is able to delete a student who has multiple book requests. Incorrect Implementation."
0,"Create a new library function fails -
If I create a new library, then as per the project code it is mandatory to assign a librarian from already existing librarians. But when I assign a librarian which is already assigned to some other library then, the system fails.
 
 
If a librarian A is assigned to library L and if I assign librarian B to L then next time if I try to assign A to L, I am not able to.
 
1) What will happen if the admin tries to delete book that is issued? 
The edge case fails, as admin deletes the issued book it is vanishes from the student's checked out books and  from list of books."
0,"The system works as per the requirements of the project. Great work!
However, the suggestion of validations on password field has not been set. Also, the feedback on redirection links has not been implemented.
 
Also, there are few functionalities which fails as follows -
 
- Number of hold requests for a book should be visible to every user
- Cover book image is not visible
- At a given time, N number of books can be assigned to a student based on educational level. However, in the project presented, the admin is able to change book limit for individual student which is not acceptable."
0,"A number of bugs mentioned in the previous review have been fixed.
The following features are still buggy:
1. admin isn't able to checkout books which should be allowed as admin can do everything a student can.
2. admin isn't able to bookmark books
3. Librarian isn't associated with a library. No field on librarian sign up. 
4. Librarian unable to view any libraries as he/she is not associated with any library
5. Librarian unable to approve any requests as he/she is not associated with any library
6. Admin is allowed to edit email, unexpected."
0,There are commits dated to October 12 and October 14 on GitHub.
0,Github not accessible
0,"Student can jump to admin's dashboard via changing the URL.
Student can not sign up using LinkedIn/Google/Facebook account."
0,I cannot see the repo to confirm or deny this.
0,"The GitHub link was not added to the project. Hence, I am not able to review or comment on the Git commits."
0,The github link is broken and hence could not verify.
0,Hard to know since the github link is not working.
0,Cannot access github project link
0,"I am unable to process any of the above rubriks.
Reason being :
1) Admin access not provided.
2) Cannot approve librarian request.
3) Cannot see the behavior of admin and librarian and therefore cannot test the functionality."
0,No readme file available.
0,Not able to log in as someone has changed the admin password or username.
0,The github link in the readme give a 404 error.
0,"I cannot access the GitHub link posted by them in the Readme file. The repository may be private, so can't comment on the coding practices."
0,"The GitHub link was not added to the project. Hence, I am not able to review or comment on the Git code."
0,No admin information provided. Cannot login as an admin.
0,Cannot access the github link from readme
0,Login module seem to be working fine. Other models still have bugs to be fixed
0,I tried several times and failed to log in as admin using the username and password on github.
0,"(1) The book couldn't be deleted
(2) The books are not automatically issued to the requested student
(3) Yes, it can be deleted
(4) Yes, the student can be deleted"
0,No issues with coding
0,only basic tests provided by scaffold are present
0,"1,2,3,4 all edge case failed"
0,did more commits in round 2
0,"Yes, continuous commits were made, even after the deadline:)"
0,"Identified the following bug -
1.Login as a student
2.Look up for a book
3. Destroy the book
Per se description, a student is not allowed to remove books from the library."
0,Last Commit was 4 hrs ago as on 14th Oct'19.
0,"1. Admin - Can (s)he edit his/her profile name? No
2. Students can add books
3. Book image not working"
0,"Only tests from scaffold are visible in the code.
No tests for model, even from scaffold"
0,"Yes, there are a lot of commits during the 2nd round time frame. However, some commits were made after the deadline as well (commits were made on 14th october as well.)"
0,Yes librarian is tested thoroughly.
0,Testing not implemented.
0,have seen their Github repository
0,very good admin part
0,"No, the links show up as link1 link2 etc and doesn't say what a link will do."
0,Unable to login as admin as admin credentials not provided
0,Yes they have tested it.
0,"Book cannot be deleted if checked out.
Student is not getting deleted.
Admin cannot be deleted."
0,"1) Cannot delete library with book in it, the system goes to error page
2)Cannot delete student with book checked out, the system also goes to error page"
0,Most function works but cannot delete any students or library through admin. Also cannot see the request number for books which is required. Also the book cannot be deleted through librarian.
0,"The system does work correctly within those relationships, however, I cannot find out many relationship defined clearly, i.e. book-library"
0,"Generally is clear and easy to understand, but some functions just too long which make them hard to understand, i.e. checkout, return. Even though there are some definitions for the code it still takes some time to understand each part's function, maybe the code is not DRY enough."
0,"The github link is not opening, so I can't figure out the email id and password of Admin. I tried signing up as a student but not able to create one because of the education level field. Tried signing up as librarian but the view seems broken as I am redirected to a page which displays a list of librarians which on which I can perform CRUD operations. Back functionality is broken, No link for home page."
0,The interface is simple and easy to understand. Redirection of links to respective pages can be improvised.
0,Github link broken
0,Cannot access the code to github
0,Github link not working
0,"Except for the initial addition of test folder,the team has not worked on testing atleast one model,one controller thoroughly"
0,The code written is readable and modularised
0,Last commit was on 10/09/2019.
0,I don't see any tests for the models.
0,- I couldn't find any test cases in the model folders. Controller test cases present which are generated by scaffolding.
0,Basic cases for librarian controller and models have been included.
0,The team has done a good job at testing the library model. They have also done some testing for the corresponding controller.
0,Only the basic testing provided by scaffolding is present.
0,The app handles the edge cases pretty well.
0,- The majority of the features handled. Could have handled exceptions like if a book ID doesn't exist show a default page instead of giving the error page.
0,Login Page not accepting account mentioned in github page.
0,"In the initial submission, the app could only perform CRUD operations on Universities. The number of functionalities added are very impressive in such a short period of time."
0,"Not able to login into admin account. Because of that, I can't login into librarian account. The student functionality works fine"
0,No student/librarian can access any other student/librarian.
0,"Methods are not too nested and methods names are intuitive. UI presentation looks very neat, hence it is easy to navigate."
0,README is written very well. All functionalities are explained well.
0,"Auto check out for hold requests missed a few edge cases, like when a student checks out something beyond his maximum issuance capacity, it should go to hold request and get checked out automatically."
0,"Extra credit feature 1 is implemented nicely, careful routing of links.
Extra credit feature 2 not implemented."
0,"except some auto generated test cases using scaffold command, team did not wrote any other test cases for testing controllers.
 
Model has not been tested at all in this system."
0,"designed database for the system takes into account all entity relations very well.
there are mapping tables present for books & hold request mapping, student & bookmarks, Student & checked out books."
0,The tests have been written correctly for admin and student controllers.
0,Yes. they have done it perfectly.
0,"1. Count is implemented, so admin can not view the checkout books in all books section. Perfect implementation.
2. Admin can not delete a student with checked out books. Perfect Implementation.
3. Admin can not be deleted.Perfect Implementation.
4. The system throws an error. Incorrect Implementation."
0,"There is one commit on GitHub dated to October 13, 2019."
0,yes the team has tested most of the functionalities in the controller and model but few are still remaining.
0,"Yes, a library is allowed to have multiple books. The relationships have been maintained well."
0,Yes the team did kept on committing their work during the round 1 and round 2.
0,Yes. This team still commit changes in round 2.
0,"Works on some edge cases, but fails on a few. Readme should contain list of edge cases that app can support."
0,System working as expected.
0,the team kept on submitting their changes throughout the project
0,There are actual restrictions on them! the first team I reviewed with such functionality!
0,"yes, till yesterday"
0,The team has written well relationship between models.
0,No test in the program
0,"They have considered the edge cases vary carefully, good job !"
0,None of the extra credit did they finihsed. I can ust student account to view all the students by entering different url.
0,"Yes, they did test at least one model and one controller. But some of them are not that meaningful."
0,"Sure. Although it is a pretty good project a week ago, this team keep on fixing bugs and handling with details this week."
0,"Yes. The code is clean and readable. Some naming are not that proper. For example, booking history sometimes deal with something about checkout books."
0,"yes, from the commit history it is clear that the team regularly pushed their changes.
message for commit is sufficient to understand what functionalities added under that commit."
0,"user interface is easy to understand and use. 
even without readme file, anyone is good to go with the UI"
0,"I can see from the code that ruby coding standards are followed to the very best.
business logic is separated in the model brilliantly and the controller is used in an optimal way to handle model and view."
0,"-The user interface could be more attractive by making use of HTML and CSS.
- Certain features like Show Books, Show Libraries, Show students and show librarians could be rendered in a tabular form which would help enhance the user experience. Also links like Show, edit, delete could be replaced by bootstrap buttons which would beautify the UI even more.
- Also make use of navigation bars to display back, home and sign out links."
0,Yes. they are always committing
0,good testing!
0,"there are a lot of controllers to make the project follow the ""Ruby and Rails coding practice"""
0,"Yes, the application is deployed on Heroku. Yes the user interface is intuitive and easy to use."
0,"Yes, the admin can log in.
No, there is no field for 'name' in admin's profile, he can just edit his password and sign-in email."
0,Yeah. I could see commit thoughout the whole project process.
0,The project is almost finised and well done.
0,Yeah. I think it's code style is very standard.
0,Yes. Evenly throughout the project period
0,Book's controller has some test cases.
0,"There are more than 30 commits, they're active"
0,"It's pretty standard with everything in one layout, not much design but it's not required anyway"
0,"Yes, I can see 43 commits through out the period"
0,I think the Admin part is throughly checked as admin is working for all the condition
0,Code is pretty much standard. I can see the naming convention followed at most of the places
0,Have plentiful test files for application
0,"- All features working
- Few issues when adding new book in the system"
0,All relationship are correct and defined properly
0,"Yes, the team committed changes throughout the project with spike specially during round 2. Few changes were made after the deadline as well on 14th October."
0,The model testing is not thorough.
0,I only could find automatically generates test file and there is no iterduction in README.
0,student can not modify profile
0,Their admin model is ding good.
0,"Well, they accomplished a lot of function in every model  and controller, but none of them are finished."
0,"admin cannot edit profile, while students and librarian can edit them profiles"
0,"Yes, they use Rspec to test their model"
0,Yes they have done it very well
0,The team has done the testing.
0,"Yes, they built Rspec test structure for this project. They tested the librarian's model and librarian's controller. The test cover the most basic situation."
0,"1. Students cannot checkout books.
2. Somehow sometimes I cannot add new books, it will show ""something went wrong"" page.
3. Librarians cannoot change library they belongs to.
4. Students cannot view the books they checked out."
0,Yes basic functionality is well defined. some book histories are not there.
0,"- Yes, they fixed the majority of the problems and the flow of the application is without any hinderance."
0,"Yes, they have made all the changes that are mentioned in the previous review."
0,Yes mappings are good
0,Yes the team kept making changes throughout the whole period
0,- They had continuous commits on the repo by all the members of the team.
0,The team has been submitting their changes throughout the project. The team made changes in round 2.
0,The commits in the project were made regularly and even after the 1st round.
0,"Yes, they kept on submitting their changes throughout the project and the still commit changes in round 2 as well."
0,They followed a good coding standards.
0,Yes they kept pushing changes
0,Many commits were made over the days during the project assignment.
0,One extra credit feature is implemented.
0,These tests appear to be present.
0,Nice.
0,Yes the user interface is more inttutive and easy to use.
0,Basic guidelines are followed well.
0,library-book relationship doesnt have a table
0,"Yes, they keep on submitting changes. However, most commits come from amanend."
0,"Yes, the team has tested at least one model and controller."
0,"The team did place the ""sign in with Facebook"" button on the homepage, but the URL was blocked because it is not whitelisted in the Client OAuth Settings. 
Code is readable, no long methods appear."
0,No mapping table present. But referencing is such that the relationship can be handled by queries.
0,"If, we delete a library then corresponding librarians and books do not get deleted"
0,- Github repo is private
0,"Features that are functional, do have intuitive UI and have proper navigation."
0,Clean code. Followed good ruby and rails practices.
0,"The application is deployed on Heroku. The UI is easy to use, however, there are not links connecting all the pages. I had to guess url paths to get to the books page for instance. I could not find user pages."
0,no git repo provided
0,Can't access the git repo
0,"The index user interface is blank after the user signed in, and no way to navigate between pages. The only way is to navigate through url links."
0,Routes links for most of the functionality are not mentioned in the nav bar. So don't know how to navigate to them.
0,There are no features visible on sign up and login is there on website. No UI provided so you cant really test what all implementation are done.
0,Git hub link not provided.
0,"The only functionality available to me is the ability to create a generic account, sign in, and sign out."
0,"Like virtually all teams, no. These are just auto-generated tests."
0,"Honestly, this might be a me thing, but some of their belongs-to and has-many confuses me. It seems both library and book has many book counts, and it belongs to both. Furthermore, I didn't see anywhere where book belongs to library but a library has many books. It looks like the functionality is there, but I'm unsure."
0,Users can only login using google after signing up
0,The book count exists in BookCount instead of the same db books. The check status of book request contains a lot of unnecessary complications.
